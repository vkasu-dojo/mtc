/*
The Confluence Cloud REST API v2

This document describes Confluence's v2 APIs. This is intended to be an iteration on the existing Confluence Cloud REST API with improvements in both endpoint definitions and performance.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package confluence

import (
	"encoding/json"
	"time"
)

// checks if the PageVersion type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PageVersion{}

// PageVersion struct for PageVersion
type PageVersion struct {
	// Date and time when the version was created. In format \"YYYY-MM-DDTHH:mm:ss.sssZ\".
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	// Message associated with the current version.
	Message *string `json:"message,omitempty"`
	// The version number.
	Number *int32 `json:"number,omitempty"`
	// Describes if this version is a minor version. Email notifications and activity stream updates are not created for minor versions.
	MinorEdit *bool `json:"minorEdit,omitempty"`
	// The account ID of the user who created this version.
	AuthorId *string          `json:"authorId,omitempty"`
	Page     *VersionedEntity `json:"page,omitempty"`
}

// NewPageVersion instantiates a new PageVersion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPageVersion() *PageVersion {
	this := PageVersion{}
	return &this
}

// NewPageVersionWithDefaults instantiates a new PageVersion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPageVersionWithDefaults() *PageVersion {
	this := PageVersion{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *PageVersion) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageVersion) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *PageVersion) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *PageVersion) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *PageVersion) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageVersion) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *PageVersion) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *PageVersion) SetMessage(v string) {
	o.Message = &v
}

// GetNumber returns the Number field value if set, zero value otherwise.
func (o *PageVersion) GetNumber() int32 {
	if o == nil || IsNil(o.Number) {
		var ret int32
		return ret
	}
	return *o.Number
}

// GetNumberOk returns a tuple with the Number field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageVersion) GetNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.Number) {
		return nil, false
	}
	return o.Number, true
}

// HasNumber returns a boolean if a field has been set.
func (o *PageVersion) HasNumber() bool {
	if o != nil && !IsNil(o.Number) {
		return true
	}

	return false
}

// SetNumber gets a reference to the given int32 and assigns it to the Number field.
func (o *PageVersion) SetNumber(v int32) {
	o.Number = &v
}

// GetMinorEdit returns the MinorEdit field value if set, zero value otherwise.
func (o *PageVersion) GetMinorEdit() bool {
	if o == nil || IsNil(o.MinorEdit) {
		var ret bool
		return ret
	}
	return *o.MinorEdit
}

// GetMinorEditOk returns a tuple with the MinorEdit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageVersion) GetMinorEditOk() (*bool, bool) {
	if o == nil || IsNil(o.MinorEdit) {
		return nil, false
	}
	return o.MinorEdit, true
}

// HasMinorEdit returns a boolean if a field has been set.
func (o *PageVersion) HasMinorEdit() bool {
	if o != nil && !IsNil(o.MinorEdit) {
		return true
	}

	return false
}

// SetMinorEdit gets a reference to the given bool and assigns it to the MinorEdit field.
func (o *PageVersion) SetMinorEdit(v bool) {
	o.MinorEdit = &v
}

// GetAuthorId returns the AuthorId field value if set, zero value otherwise.
func (o *PageVersion) GetAuthorId() string {
	if o == nil || IsNil(o.AuthorId) {
		var ret string
		return ret
	}
	return *o.AuthorId
}

// GetAuthorIdOk returns a tuple with the AuthorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageVersion) GetAuthorIdOk() (*string, bool) {
	if o == nil || IsNil(o.AuthorId) {
		return nil, false
	}
	return o.AuthorId, true
}

// HasAuthorId returns a boolean if a field has been set.
func (o *PageVersion) HasAuthorId() bool {
	if o != nil && !IsNil(o.AuthorId) {
		return true
	}

	return false
}

// SetAuthorId gets a reference to the given string and assigns it to the AuthorId field.
func (o *PageVersion) SetAuthorId(v string) {
	o.AuthorId = &v
}

// GetPage returns the Page field value if set, zero value otherwise.
func (o *PageVersion) GetPage() VersionedEntity {
	if o == nil || IsNil(o.Page) {
		var ret VersionedEntity
		return ret
	}
	return *o.Page
}

// GetPageOk returns a tuple with the Page field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PageVersion) GetPageOk() (*VersionedEntity, bool) {
	if o == nil || IsNil(o.Page) {
		return nil, false
	}
	return o.Page, true
}

// HasPage returns a boolean if a field has been set.
func (o *PageVersion) HasPage() bool {
	if o != nil && !IsNil(o.Page) {
		return true
	}

	return false
}

// SetPage gets a reference to the given VersionedEntity and assigns it to the Page field.
func (o *PageVersion) SetPage(v VersionedEntity) {
	o.Page = &v
}

func (o PageVersion) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PageVersion) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Number) {
		toSerialize["number"] = o.Number
	}
	if !IsNil(o.MinorEdit) {
		toSerialize["minorEdit"] = o.MinorEdit
	}
	if !IsNil(o.AuthorId) {
		toSerialize["authorId"] = o.AuthorId
	}
	if !IsNil(o.Page) {
		toSerialize["page"] = o.Page
	}
	return toSerialize, nil
}

type NullablePageVersion struct {
	value *PageVersion
	isSet bool
}

func (v NullablePageVersion) Get() *PageVersion {
	return v.value
}

func (v *NullablePageVersion) Set(val *PageVersion) {
	v.value = val
	v.isSet = true
}

func (v NullablePageVersion) IsSet() bool {
	return v.isSet
}

func (v *NullablePageVersion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePageVersion(val *PageVersion) *NullablePageVersion {
	return &NullablePageVersion{value: val, isSet: true}
}

func (v NullablePageVersion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePageVersion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
