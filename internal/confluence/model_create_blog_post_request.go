/*
The Confluence Cloud REST API v2

This document describes Confluence's v2 APIs. This is intended to be an iteration on the existing Confluence Cloud REST API with improvements in both endpoint definitions and performance.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package confluence

import (
	"encoding/json"
)

// checks if the CreateBlogPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateBlogPostRequest{}

// CreateBlogPostRequest struct for CreateBlogPostRequest
type CreateBlogPostRequest struct {
	// ID of the space
	SpaceId string `json:"spaceId"`
	// The status of the blog post, specifies if the blog post will be created as a new blog post or a draft
	Status *string `json:"status,omitempty"`
	// Title of the blog post, required if creating non-draft.
	Title *string                    `json:"title,omitempty"`
	Body  *CreateBlogPostRequestBody `json:"body,omitempty"`
}

// NewCreateBlogPostRequest instantiates a new CreateBlogPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateBlogPostRequest(spaceId string) *CreateBlogPostRequest {
	this := CreateBlogPostRequest{}
	this.SpaceId = spaceId
	return &this
}

// NewCreateBlogPostRequestWithDefaults instantiates a new CreateBlogPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateBlogPostRequestWithDefaults() *CreateBlogPostRequest {
	this := CreateBlogPostRequest{}
	return &this
}

// GetSpaceId returns the SpaceId field value
func (o *CreateBlogPostRequest) GetSpaceId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SpaceId
}

// GetSpaceIdOk returns a tuple with the SpaceId field value
// and a boolean to check if the value has been set.
func (o *CreateBlogPostRequest) GetSpaceIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SpaceId, true
}

// SetSpaceId sets field value
func (o *CreateBlogPostRequest) SetSpaceId(v string) {
	o.SpaceId = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *CreateBlogPostRequest) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBlogPostRequest) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *CreateBlogPostRequest) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *CreateBlogPostRequest) SetStatus(v string) {
	o.Status = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *CreateBlogPostRequest) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBlogPostRequest) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *CreateBlogPostRequest) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *CreateBlogPostRequest) SetTitle(v string) {
	o.Title = &v
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *CreateBlogPostRequest) GetBody() CreateBlogPostRequestBody {
	if o == nil || IsNil(o.Body) {
		var ret CreateBlogPostRequestBody
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBlogPostRequest) GetBodyOk() (*CreateBlogPostRequestBody, bool) {
	if o == nil || IsNil(o.Body) {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *CreateBlogPostRequest) HasBody() bool {
	if o != nil && !IsNil(o.Body) {
		return true
	}

	return false
}

// SetBody gets a reference to the given CreateBlogPostRequestBody and assigns it to the Body field.
func (o *CreateBlogPostRequest) SetBody(v CreateBlogPostRequestBody) {
	o.Body = &v
}

func (o CreateBlogPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateBlogPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["spaceId"] = o.SpaceId
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Body) {
		toSerialize["body"] = o.Body
	}
	return toSerialize, nil
}

type NullableCreateBlogPostRequest struct {
	value *CreateBlogPostRequest
	isSet bool
}

func (v NullableCreateBlogPostRequest) Get() *CreateBlogPostRequest {
	return v.value
}

func (v *NullableCreateBlogPostRequest) Set(val *CreateBlogPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateBlogPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateBlogPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateBlogPostRequest(val *CreateBlogPostRequest) *NullableCreateBlogPostRequest {
	return &NullableCreateBlogPostRequest{value: val, isSet: true}
}

func (v NullableCreateBlogPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateBlogPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
