/*
The Confluence Cloud REST API v2

This document describes Confluence's v2 APIs. This is intended to be an iteration on the existing Confluence Cloud REST API with improvements in both endpoint definitions and performance.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package confluence

import (
	"encoding/json"
)

// checks if the ContentPropertyUpdateRequestVersion type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ContentPropertyUpdateRequestVersion{}

// ContentPropertyUpdateRequestVersion New version number and associated message
type ContentPropertyUpdateRequestVersion struct {
	// Version number of the new version. Should be 1 more than the current version number.
	Number *int32 `json:"number,omitempty"`
	// Message to be associated with the new version.
	Message *string `json:"message,omitempty"`
}

// NewContentPropertyUpdateRequestVersion instantiates a new ContentPropertyUpdateRequestVersion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewContentPropertyUpdateRequestVersion() *ContentPropertyUpdateRequestVersion {
	this := ContentPropertyUpdateRequestVersion{}
	return &this
}

// NewContentPropertyUpdateRequestVersionWithDefaults instantiates a new ContentPropertyUpdateRequestVersion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewContentPropertyUpdateRequestVersionWithDefaults() *ContentPropertyUpdateRequestVersion {
	this := ContentPropertyUpdateRequestVersion{}
	return &this
}

// GetNumber returns the Number field value if set, zero value otherwise.
func (o *ContentPropertyUpdateRequestVersion) GetNumber() int32 {
	if o == nil || IsNil(o.Number) {
		var ret int32
		return ret
	}
	return *o.Number
}

// GetNumberOk returns a tuple with the Number field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentPropertyUpdateRequestVersion) GetNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.Number) {
		return nil, false
	}
	return o.Number, true
}

// HasNumber returns a boolean if a field has been set.
func (o *ContentPropertyUpdateRequestVersion) HasNumber() bool {
	if o != nil && !IsNil(o.Number) {
		return true
	}

	return false
}

// SetNumber gets a reference to the given int32 and assigns it to the Number field.
func (o *ContentPropertyUpdateRequestVersion) SetNumber(v int32) {
	o.Number = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *ContentPropertyUpdateRequestVersion) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ContentPropertyUpdateRequestVersion) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *ContentPropertyUpdateRequestVersion) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *ContentPropertyUpdateRequestVersion) SetMessage(v string) {
	o.Message = &v
}

func (o ContentPropertyUpdateRequestVersion) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ContentPropertyUpdateRequestVersion) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Number) {
		toSerialize["number"] = o.Number
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	return toSerialize, nil
}

type NullableContentPropertyUpdateRequestVersion struct {
	value *ContentPropertyUpdateRequestVersion
	isSet bool
}

func (v NullableContentPropertyUpdateRequestVersion) Get() *ContentPropertyUpdateRequestVersion {
	return v.value
}

func (v *NullableContentPropertyUpdateRequestVersion) Set(val *ContentPropertyUpdateRequestVersion) {
	v.value = val
	v.isSet = true
}

func (v NullableContentPropertyUpdateRequestVersion) IsSet() bool {
	return v.isSet
}

func (v *NullableContentPropertyUpdateRequestVersion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableContentPropertyUpdateRequestVersion(val *ContentPropertyUpdateRequestVersion) *NullableContentPropertyUpdateRequestVersion {
	return &NullableContentPropertyUpdateRequestVersion{value: val, isSet: true}
}

func (v NullableContentPropertyUpdateRequestVersion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableContentPropertyUpdateRequestVersion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
