/*
The Confluence Cloud REST API v2

This document describes Confluence's v2 APIs. This is intended to be an iteration on the existing Confluence Cloud REST API with improvements in both endpoint definitions and performance.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package confluence

import (
	"encoding/json"
	"fmt"
)

// ChildCustomContentSortOrder The sort fields for child custom content. The default sort direction is ascending by id. To sort in descending order, append a `-` character before the sort field. For example, `fieldName` or `-fieldName`.
type ChildCustomContentSortOrder string

// List of ChildCustomContentSortOrder
const (
	CHILDCUSTOMCONTENTSORTORDER_CREATED_DATE_ASC   ChildCustomContentSortOrder = "created-date"
	CHILDCUSTOMCONTENTSORTORDER_CREATED_DATE_DESC  ChildCustomContentSortOrder = "-created-date"
	CHILDCUSTOMCONTENTSORTORDER_ID_ASC             ChildCustomContentSortOrder = "id"
	CHILDCUSTOMCONTENTSORTORDER_ID_DESC            ChildCustomContentSortOrder = "-id"
	CHILDCUSTOMCONTENTSORTORDER_MODIFIED_DATE_ASC  ChildCustomContentSortOrder = "modified-date"
	CHILDCUSTOMCONTENTSORTORDER_MODIFIED_DATE_DESC ChildCustomContentSortOrder = "-modified-date"
)

// All allowed values of ChildCustomContentSortOrder enum
var AllowedChildCustomContentSortOrderEnumValues = []ChildCustomContentSortOrder{
	"created-date",
	"-created-date",
	"id",
	"-id",
	"modified-date",
	"-modified-date",
}

func (v *ChildCustomContentSortOrder) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ChildCustomContentSortOrder(value)
	for _, existing := range AllowedChildCustomContentSortOrderEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ChildCustomContentSortOrder", value)
}

// NewChildCustomContentSortOrderFromValue returns a pointer to a valid ChildCustomContentSortOrder
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewChildCustomContentSortOrderFromValue(v string) (*ChildCustomContentSortOrder, error) {
	ev := ChildCustomContentSortOrder(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ChildCustomContentSortOrder: valid values are %v", v, AllowedChildCustomContentSortOrderEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ChildCustomContentSortOrder) IsValid() bool {
	for _, existing := range AllowedChildCustomContentSortOrderEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ChildCustomContentSortOrder value
func (v ChildCustomContentSortOrder) Ptr() *ChildCustomContentSortOrder {
	return &v
}

type NullableChildCustomContentSortOrder struct {
	value *ChildCustomContentSortOrder
	isSet bool
}

func (v NullableChildCustomContentSortOrder) Get() *ChildCustomContentSortOrder {
	return v.value
}

func (v *NullableChildCustomContentSortOrder) Set(val *ChildCustomContentSortOrder) {
	v.value = val
	v.isSet = true
}

func (v NullableChildCustomContentSortOrder) IsSet() bool {
	return v.isSet
}

func (v *NullableChildCustomContentSortOrder) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChildCustomContentSortOrder(val *ChildCustomContentSortOrder) *NullableChildCustomContentSortOrder {
	return &NullableChildCustomContentSortOrder{value: val, isSet: true}
}

func (v NullableChildCustomContentSortOrder) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChildCustomContentSortOrder) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
