/*
The Confluence Cloud REST API v2

This document describes Confluence's v2 APIs. This is intended to be an iteration on the existing Confluence Cloud REST API with improvements in both endpoint definitions and performance.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package confluence

import (
	"encoding/json"
)

// checks if the InviteByEmail200ResponseEmailsNotInvited type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InviteByEmail200ResponseEmailsNotInvited{}

// InviteByEmail200ResponseEmailsNotInvited List of invalid emails provided in the request.
type InviteByEmail200ResponseEmailsNotInvited struct {
	// Email that was not invited.
	Key *string `json:"key,omitempty"`
	// Reason why the email was not invited.
	Value *string `json:"value,omitempty"`
}

// NewInviteByEmail200ResponseEmailsNotInvited instantiates a new InviteByEmail200ResponseEmailsNotInvited object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInviteByEmail200ResponseEmailsNotInvited() *InviteByEmail200ResponseEmailsNotInvited {
	this := InviteByEmail200ResponseEmailsNotInvited{}
	return &this
}

// NewInviteByEmail200ResponseEmailsNotInvitedWithDefaults instantiates a new InviteByEmail200ResponseEmailsNotInvited object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInviteByEmail200ResponseEmailsNotInvitedWithDefaults() *InviteByEmail200ResponseEmailsNotInvited {
	this := InviteByEmail200ResponseEmailsNotInvited{}
	return &this
}

// GetKey returns the Key field value if set, zero value otherwise.
func (o *InviteByEmail200ResponseEmailsNotInvited) GetKey() string {
	if o == nil || IsNil(o.Key) {
		var ret string
		return ret
	}
	return *o.Key
}

// GetKeyOk returns a tuple with the Key field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InviteByEmail200ResponseEmailsNotInvited) GetKeyOk() (*string, bool) {
	if o == nil || IsNil(o.Key) {
		return nil, false
	}
	return o.Key, true
}

// HasKey returns a boolean if a field has been set.
func (o *InviteByEmail200ResponseEmailsNotInvited) HasKey() bool {
	if o != nil && !IsNil(o.Key) {
		return true
	}

	return false
}

// SetKey gets a reference to the given string and assigns it to the Key field.
func (o *InviteByEmail200ResponseEmailsNotInvited) SetKey(v string) {
	o.Key = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *InviteByEmail200ResponseEmailsNotInvited) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InviteByEmail200ResponseEmailsNotInvited) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *InviteByEmail200ResponseEmailsNotInvited) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *InviteByEmail200ResponseEmailsNotInvited) SetValue(v string) {
	o.Value = &v
}

func (o InviteByEmail200ResponseEmailsNotInvited) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InviteByEmail200ResponseEmailsNotInvited) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Key) {
		toSerialize["key"] = o.Key
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableInviteByEmail200ResponseEmailsNotInvited struct {
	value *InviteByEmail200ResponseEmailsNotInvited
	isSet bool
}

func (v NullableInviteByEmail200ResponseEmailsNotInvited) Get() *InviteByEmail200ResponseEmailsNotInvited {
	return v.value
}

func (v *NullableInviteByEmail200ResponseEmailsNotInvited) Set(val *InviteByEmail200ResponseEmailsNotInvited) {
	v.value = val
	v.isSet = true
}

func (v NullableInviteByEmail200ResponseEmailsNotInvited) IsSet() bool {
	return v.isSet
}

func (v *NullableInviteByEmail200ResponseEmailsNotInvited) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInviteByEmail200ResponseEmailsNotInvited(val *InviteByEmail200ResponseEmailsNotInvited) *NullableInviteByEmail200ResponseEmailsNotInvited {
	return &NullableInviteByEmail200ResponseEmailsNotInvited{value: val, isSet: true}
}

func (v NullableInviteByEmail200ResponseEmailsNotInvited) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInviteByEmail200ResponseEmailsNotInvited) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
