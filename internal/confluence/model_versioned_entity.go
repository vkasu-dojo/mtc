/*
The Confluence Cloud REST API v2

This document describes Confluence's v2 APIs. This is intended to be an iteration on the existing Confluence Cloud REST API with improvements in both endpoint definitions and performance.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package confluence

import (
	"encoding/json"
)

// checks if the VersionedEntity type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VersionedEntity{}

// VersionedEntity struct for VersionedEntity
type VersionedEntity struct {
	// Title of the entity.
	Title *string `json:"title,omitempty"`
	// ID of the entity.
	Id   *string `json:"id,omitempty"`
	Body *Body   `json:"body,omitempty"`
}

// NewVersionedEntity instantiates a new VersionedEntity object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVersionedEntity() *VersionedEntity {
	this := VersionedEntity{}
	return &this
}

// NewVersionedEntityWithDefaults instantiates a new VersionedEntity object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVersionedEntityWithDefaults() *VersionedEntity {
	this := VersionedEntity{}
	return &this
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *VersionedEntity) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VersionedEntity) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *VersionedEntity) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *VersionedEntity) SetTitle(v string) {
	o.Title = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VersionedEntity) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VersionedEntity) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *VersionedEntity) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *VersionedEntity) SetId(v string) {
	o.Id = &v
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *VersionedEntity) GetBody() Body {
	if o == nil || IsNil(o.Body) {
		var ret Body
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VersionedEntity) GetBodyOk() (*Body, bool) {
	if o == nil || IsNil(o.Body) {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *VersionedEntity) HasBody() bool {
	if o != nil && !IsNil(o.Body) {
		return true
	}

	return false
}

// SetBody gets a reference to the given Body and assigns it to the Body field.
func (o *VersionedEntity) SetBody(v Body) {
	o.Body = &v
}

func (o VersionedEntity) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VersionedEntity) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Body) {
		toSerialize["body"] = o.Body
	}
	return toSerialize, nil
}

type NullableVersionedEntity struct {
	value *VersionedEntity
	isSet bool
}

func (v NullableVersionedEntity) Get() *VersionedEntity {
	return v.value
}

func (v *NullableVersionedEntity) Set(val *VersionedEntity) {
	v.value = val
	v.isSet = true
}

func (v NullableVersionedEntity) IsSet() bool {
	return v.isSet
}

func (v *NullableVersionedEntity) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVersionedEntity(val *VersionedEntity) *NullableVersionedEntity {
	return &NullableVersionedEntity{value: val, isSet: true}
}

func (v NullableVersionedEntity) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVersionedEntity) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
