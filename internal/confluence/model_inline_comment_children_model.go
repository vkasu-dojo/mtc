/*
The Confluence Cloud REST API v2

This document describes Confluence's v2 APIs. This is intended to be an iteration on the existing Confluence Cloud REST API with improvements in both endpoint definitions and performance.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package confluence

import (
	"encoding/json"
)

// checks if the InlineCommentChildrenModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InlineCommentChildrenModel{}

// InlineCommentChildrenModel struct for InlineCommentChildrenModel
type InlineCommentChildrenModel struct {
	Id     *PageCommentModelId `json:"id,omitempty"`
	Status *ContentStatus      `json:"status,omitempty"`
	// Title of the comment.
	Title            *string                              `json:"title,omitempty"`
	ParentCommentId  *ChildrenCommentModelParentCommentId `json:"parentCommentId,omitempty"`
	Version          *Version                             `json:"version,omitempty"`
	Body             *Body                                `json:"body,omitempty"`
	ResolutionStatus *InlineCommentResolutionStatus       `json:"resolutionStatus,omitempty"`
	Properties       *InlineCommentProperties             `json:"properties,omitempty"`
}

// NewInlineCommentChildrenModel instantiates a new InlineCommentChildrenModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineCommentChildrenModel() *InlineCommentChildrenModel {
	this := InlineCommentChildrenModel{}
	return &this
}

// NewInlineCommentChildrenModelWithDefaults instantiates a new InlineCommentChildrenModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineCommentChildrenModelWithDefaults() *InlineCommentChildrenModel {
	this := InlineCommentChildrenModel{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *InlineCommentChildrenModel) GetId() PageCommentModelId {
	if o == nil || IsNil(o.Id) {
		var ret PageCommentModelId
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineCommentChildrenModel) GetIdOk() (*PageCommentModelId, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *InlineCommentChildrenModel) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given PageCommentModelId and assigns it to the Id field.
func (o *InlineCommentChildrenModel) SetId(v PageCommentModelId) {
	o.Id = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *InlineCommentChildrenModel) GetStatus() ContentStatus {
	if o == nil || IsNil(o.Status) {
		var ret ContentStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineCommentChildrenModel) GetStatusOk() (*ContentStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *InlineCommentChildrenModel) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given ContentStatus and assigns it to the Status field.
func (o *InlineCommentChildrenModel) SetStatus(v ContentStatus) {
	o.Status = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *InlineCommentChildrenModel) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineCommentChildrenModel) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *InlineCommentChildrenModel) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *InlineCommentChildrenModel) SetTitle(v string) {
	o.Title = &v
}

// GetParentCommentId returns the ParentCommentId field value if set, zero value otherwise.
func (o *InlineCommentChildrenModel) GetParentCommentId() ChildrenCommentModelParentCommentId {
	if o == nil || IsNil(o.ParentCommentId) {
		var ret ChildrenCommentModelParentCommentId
		return ret
	}
	return *o.ParentCommentId
}

// GetParentCommentIdOk returns a tuple with the ParentCommentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineCommentChildrenModel) GetParentCommentIdOk() (*ChildrenCommentModelParentCommentId, bool) {
	if o == nil || IsNil(o.ParentCommentId) {
		return nil, false
	}
	return o.ParentCommentId, true
}

// HasParentCommentId returns a boolean if a field has been set.
func (o *InlineCommentChildrenModel) HasParentCommentId() bool {
	if o != nil && !IsNil(o.ParentCommentId) {
		return true
	}

	return false
}

// SetParentCommentId gets a reference to the given ChildrenCommentModelParentCommentId and assigns it to the ParentCommentId field.
func (o *InlineCommentChildrenModel) SetParentCommentId(v ChildrenCommentModelParentCommentId) {
	o.ParentCommentId = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *InlineCommentChildrenModel) GetVersion() Version {
	if o == nil || IsNil(o.Version) {
		var ret Version
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineCommentChildrenModel) GetVersionOk() (*Version, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *InlineCommentChildrenModel) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given Version and assigns it to the Version field.
func (o *InlineCommentChildrenModel) SetVersion(v Version) {
	o.Version = &v
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *InlineCommentChildrenModel) GetBody() Body {
	if o == nil || IsNil(o.Body) {
		var ret Body
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineCommentChildrenModel) GetBodyOk() (*Body, bool) {
	if o == nil || IsNil(o.Body) {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *InlineCommentChildrenModel) HasBody() bool {
	if o != nil && !IsNil(o.Body) {
		return true
	}

	return false
}

// SetBody gets a reference to the given Body and assigns it to the Body field.
func (o *InlineCommentChildrenModel) SetBody(v Body) {
	o.Body = &v
}

// GetResolutionStatus returns the ResolutionStatus field value if set, zero value otherwise.
func (o *InlineCommentChildrenModel) GetResolutionStatus() InlineCommentResolutionStatus {
	if o == nil || IsNil(o.ResolutionStatus) {
		var ret InlineCommentResolutionStatus
		return ret
	}
	return *o.ResolutionStatus
}

// GetResolutionStatusOk returns a tuple with the ResolutionStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineCommentChildrenModel) GetResolutionStatusOk() (*InlineCommentResolutionStatus, bool) {
	if o == nil || IsNil(o.ResolutionStatus) {
		return nil, false
	}
	return o.ResolutionStatus, true
}

// HasResolutionStatus returns a boolean if a field has been set.
func (o *InlineCommentChildrenModel) HasResolutionStatus() bool {
	if o != nil && !IsNil(o.ResolutionStatus) {
		return true
	}

	return false
}

// SetResolutionStatus gets a reference to the given InlineCommentResolutionStatus and assigns it to the ResolutionStatus field.
func (o *InlineCommentChildrenModel) SetResolutionStatus(v InlineCommentResolutionStatus) {
	o.ResolutionStatus = &v
}

// GetProperties returns the Properties field value if set, zero value otherwise.
func (o *InlineCommentChildrenModel) GetProperties() InlineCommentProperties {
	if o == nil || IsNil(o.Properties) {
		var ret InlineCommentProperties
		return ret
	}
	return *o.Properties
}

// GetPropertiesOk returns a tuple with the Properties field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineCommentChildrenModel) GetPropertiesOk() (*InlineCommentProperties, bool) {
	if o == nil || IsNil(o.Properties) {
		return nil, false
	}
	return o.Properties, true
}

// HasProperties returns a boolean if a field has been set.
func (o *InlineCommentChildrenModel) HasProperties() bool {
	if o != nil && !IsNil(o.Properties) {
		return true
	}

	return false
}

// SetProperties gets a reference to the given InlineCommentProperties and assigns it to the Properties field.
func (o *InlineCommentChildrenModel) SetProperties(v InlineCommentProperties) {
	o.Properties = &v
}

func (o InlineCommentChildrenModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InlineCommentChildrenModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.ParentCommentId) {
		toSerialize["parentCommentId"] = o.ParentCommentId
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.Body) {
		toSerialize["body"] = o.Body
	}
	if !IsNil(o.ResolutionStatus) {
		toSerialize["resolutionStatus"] = o.ResolutionStatus
	}
	if !IsNil(o.Properties) {
		toSerialize["properties"] = o.Properties
	}
	return toSerialize, nil
}

type NullableInlineCommentChildrenModel struct {
	value *InlineCommentChildrenModel
	isSet bool
}

func (v NullableInlineCommentChildrenModel) Get() *InlineCommentChildrenModel {
	return v.value
}

func (v *NullableInlineCommentChildrenModel) Set(val *InlineCommentChildrenModel) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineCommentChildrenModel) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineCommentChildrenModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineCommentChildrenModel(val *InlineCommentChildrenModel) *NullableInlineCommentChildrenModel {
	return &NullableInlineCommentChildrenModel{value: val, isSet: true}
}

func (v NullableInlineCommentChildrenModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineCommentChildrenModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
