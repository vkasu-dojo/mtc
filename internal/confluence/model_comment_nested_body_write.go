/*
The Confluence Cloud REST API v2

This document describes Confluence's v2 APIs. This is intended to be an iteration on the existing Confluence Cloud REST API with improvements in both endpoint definitions and performance.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package confluence

import (
	"encoding/json"
)

// checks if the CommentNestedBodyWrite type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CommentNestedBodyWrite{}

// CommentNestedBodyWrite Body of the comment. Only one body format should be specified as the property for this object, e.g. `storage`.
type CommentNestedBodyWrite struct {
	Storage        *CommentBodyWrite `json:"storage,omitempty"`
	AtlasDocFormat *CommentBodyWrite `json:"atlas_doc_format,omitempty"`
	Wiki           *CommentBodyWrite `json:"wiki,omitempty"`
}

// NewCommentNestedBodyWrite instantiates a new CommentNestedBodyWrite object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCommentNestedBodyWrite() *CommentNestedBodyWrite {
	this := CommentNestedBodyWrite{}
	return &this
}

// NewCommentNestedBodyWriteWithDefaults instantiates a new CommentNestedBodyWrite object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCommentNestedBodyWriteWithDefaults() *CommentNestedBodyWrite {
	this := CommentNestedBodyWrite{}
	return &this
}

// GetStorage returns the Storage field value if set, zero value otherwise.
func (o *CommentNestedBodyWrite) GetStorage() CommentBodyWrite {
	if o == nil || IsNil(o.Storage) {
		var ret CommentBodyWrite
		return ret
	}
	return *o.Storage
}

// GetStorageOk returns a tuple with the Storage field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommentNestedBodyWrite) GetStorageOk() (*CommentBodyWrite, bool) {
	if o == nil || IsNil(o.Storage) {
		return nil, false
	}
	return o.Storage, true
}

// HasStorage returns a boolean if a field has been set.
func (o *CommentNestedBodyWrite) HasStorage() bool {
	if o != nil && !IsNil(o.Storage) {
		return true
	}

	return false
}

// SetStorage gets a reference to the given CommentBodyWrite and assigns it to the Storage field.
func (o *CommentNestedBodyWrite) SetStorage(v CommentBodyWrite) {
	o.Storage = &v
}

// GetAtlasDocFormat returns the AtlasDocFormat field value if set, zero value otherwise.
func (o *CommentNestedBodyWrite) GetAtlasDocFormat() CommentBodyWrite {
	if o == nil || IsNil(o.AtlasDocFormat) {
		var ret CommentBodyWrite
		return ret
	}
	return *o.AtlasDocFormat
}

// GetAtlasDocFormatOk returns a tuple with the AtlasDocFormat field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommentNestedBodyWrite) GetAtlasDocFormatOk() (*CommentBodyWrite, bool) {
	if o == nil || IsNil(o.AtlasDocFormat) {
		return nil, false
	}
	return o.AtlasDocFormat, true
}

// HasAtlasDocFormat returns a boolean if a field has been set.
func (o *CommentNestedBodyWrite) HasAtlasDocFormat() bool {
	if o != nil && !IsNil(o.AtlasDocFormat) {
		return true
	}

	return false
}

// SetAtlasDocFormat gets a reference to the given CommentBodyWrite and assigns it to the AtlasDocFormat field.
func (o *CommentNestedBodyWrite) SetAtlasDocFormat(v CommentBodyWrite) {
	o.AtlasDocFormat = &v
}

// GetWiki returns the Wiki field value if set, zero value otherwise.
func (o *CommentNestedBodyWrite) GetWiki() CommentBodyWrite {
	if o == nil || IsNil(o.Wiki) {
		var ret CommentBodyWrite
		return ret
	}
	return *o.Wiki
}

// GetWikiOk returns a tuple with the Wiki field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CommentNestedBodyWrite) GetWikiOk() (*CommentBodyWrite, bool) {
	if o == nil || IsNil(o.Wiki) {
		return nil, false
	}
	return o.Wiki, true
}

// HasWiki returns a boolean if a field has been set.
func (o *CommentNestedBodyWrite) HasWiki() bool {
	if o != nil && !IsNil(o.Wiki) {
		return true
	}

	return false
}

// SetWiki gets a reference to the given CommentBodyWrite and assigns it to the Wiki field.
func (o *CommentNestedBodyWrite) SetWiki(v CommentBodyWrite) {
	o.Wiki = &v
}

func (o CommentNestedBodyWrite) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CommentNestedBodyWrite) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Storage) {
		toSerialize["storage"] = o.Storage
	}
	if !IsNil(o.AtlasDocFormat) {
		toSerialize["atlas_doc_format"] = o.AtlasDocFormat
	}
	if !IsNil(o.Wiki) {
		toSerialize["wiki"] = o.Wiki
	}
	return toSerialize, nil
}

type NullableCommentNestedBodyWrite struct {
	value *CommentNestedBodyWrite
	isSet bool
}

func (v NullableCommentNestedBodyWrite) Get() *CommentNestedBodyWrite {
	return v.value
}

func (v *NullableCommentNestedBodyWrite) Set(val *CommentNestedBodyWrite) {
	v.value = val
	v.isSet = true
}

func (v NullableCommentNestedBodyWrite) IsSet() bool {
	return v.isSet
}

func (v *NullableCommentNestedBodyWrite) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCommentNestedBodyWrite(val *CommentNestedBodyWrite) *NullableCommentNestedBodyWrite {
	return &NullableCommentNestedBodyWrite{value: val, isSet: true}
}

func (v NullableCommentNestedBodyWrite) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCommentNestedBodyWrite) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
