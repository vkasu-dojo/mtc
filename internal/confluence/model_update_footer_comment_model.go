/*
The Confluence Cloud REST API v2

This document describes Confluence's v2 APIs. This is intended to be an iteration on the existing Confluence Cloud REST API with improvements in both endpoint definitions and performance.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package confluence

import (
	"encoding/json"
)

// checks if the UpdateFooterCommentModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateFooterCommentModel{}

// UpdateFooterCommentModel struct for UpdateFooterCommentModel
type UpdateFooterCommentModel struct {
	Version *UpdateFooterCommentModelVersion `json:"version,omitempty"`
	Body    *CreateFooterCommentModelBody    `json:"body,omitempty"`
}

// NewUpdateFooterCommentModel instantiates a new UpdateFooterCommentModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateFooterCommentModel() *UpdateFooterCommentModel {
	this := UpdateFooterCommentModel{}
	return &this
}

// NewUpdateFooterCommentModelWithDefaults instantiates a new UpdateFooterCommentModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateFooterCommentModelWithDefaults() *UpdateFooterCommentModel {
	this := UpdateFooterCommentModel{}
	return &this
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *UpdateFooterCommentModel) GetVersion() UpdateFooterCommentModelVersion {
	if o == nil || IsNil(o.Version) {
		var ret UpdateFooterCommentModelVersion
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateFooterCommentModel) GetVersionOk() (*UpdateFooterCommentModelVersion, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *UpdateFooterCommentModel) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given UpdateFooterCommentModelVersion and assigns it to the Version field.
func (o *UpdateFooterCommentModel) SetVersion(v UpdateFooterCommentModelVersion) {
	o.Version = &v
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *UpdateFooterCommentModel) GetBody() CreateFooterCommentModelBody {
	if o == nil || IsNil(o.Body) {
		var ret CreateFooterCommentModelBody
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateFooterCommentModel) GetBodyOk() (*CreateFooterCommentModelBody, bool) {
	if o == nil || IsNil(o.Body) {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *UpdateFooterCommentModel) HasBody() bool {
	if o != nil && !IsNil(o.Body) {
		return true
	}

	return false
}

// SetBody gets a reference to the given CreateFooterCommentModelBody and assigns it to the Body field.
func (o *UpdateFooterCommentModel) SetBody(v CreateFooterCommentModelBody) {
	o.Body = &v
}

func (o UpdateFooterCommentModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateFooterCommentModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.Body) {
		toSerialize["body"] = o.Body
	}
	return toSerialize, nil
}

type NullableUpdateFooterCommentModel struct {
	value *UpdateFooterCommentModel
	isSet bool
}

func (v NullableUpdateFooterCommentModel) Get() *UpdateFooterCommentModel {
	return v.value
}

func (v *NullableUpdateFooterCommentModel) Set(val *UpdateFooterCommentModel) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateFooterCommentModel) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateFooterCommentModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateFooterCommentModel(val *UpdateFooterCommentModel) *NullableUpdateFooterCommentModel {
	return &NullableUpdateFooterCommentModel{value: val, isSet: true}
}

func (v NullableUpdateFooterCommentModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateFooterCommentModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
