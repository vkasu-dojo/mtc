/*
The Confluence Cloud REST API v2

This document describes Confluence's v2 APIs. This is intended to be an iteration on the existing Confluence Cloud REST API with improvements in both endpoint definitions and performance.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package confluence

import (
	"encoding/json"
)

// checks if the UpdateInlineCommentModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UpdateInlineCommentModel{}

// UpdateInlineCommentModel struct for UpdateInlineCommentModel
type UpdateInlineCommentModel struct {
	Version *UpdateFooterCommentModelVersion `json:"version,omitempty"`
	Body    *CreateFooterCommentModelBody    `json:"body,omitempty"`
	// Resolved state of the comment. Set to true to resolve the comment, set to false to reopen it. If matching the existing state (i.e. true -> resolved or false -> open/reopened) , no change will occur. A dangling comment cannot be updated.
	Resolved *bool `json:"resolved,omitempty"`
}

// NewUpdateInlineCommentModel instantiates a new UpdateInlineCommentModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUpdateInlineCommentModel() *UpdateInlineCommentModel {
	this := UpdateInlineCommentModel{}
	return &this
}

// NewUpdateInlineCommentModelWithDefaults instantiates a new UpdateInlineCommentModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUpdateInlineCommentModelWithDefaults() *UpdateInlineCommentModel {
	this := UpdateInlineCommentModel{}
	return &this
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *UpdateInlineCommentModel) GetVersion() UpdateFooterCommentModelVersion {
	if o == nil || IsNil(o.Version) {
		var ret UpdateFooterCommentModelVersion
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInlineCommentModel) GetVersionOk() (*UpdateFooterCommentModelVersion, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *UpdateInlineCommentModel) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given UpdateFooterCommentModelVersion and assigns it to the Version field.
func (o *UpdateInlineCommentModel) SetVersion(v UpdateFooterCommentModelVersion) {
	o.Version = &v
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *UpdateInlineCommentModel) GetBody() CreateFooterCommentModelBody {
	if o == nil || IsNil(o.Body) {
		var ret CreateFooterCommentModelBody
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInlineCommentModel) GetBodyOk() (*CreateFooterCommentModelBody, bool) {
	if o == nil || IsNil(o.Body) {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *UpdateInlineCommentModel) HasBody() bool {
	if o != nil && !IsNil(o.Body) {
		return true
	}

	return false
}

// SetBody gets a reference to the given CreateFooterCommentModelBody and assigns it to the Body field.
func (o *UpdateInlineCommentModel) SetBody(v CreateFooterCommentModelBody) {
	o.Body = &v
}

// GetResolved returns the Resolved field value if set, zero value otherwise.
func (o *UpdateInlineCommentModel) GetResolved() bool {
	if o == nil || IsNil(o.Resolved) {
		var ret bool
		return ret
	}
	return *o.Resolved
}

// GetResolvedOk returns a tuple with the Resolved field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UpdateInlineCommentModel) GetResolvedOk() (*bool, bool) {
	if o == nil || IsNil(o.Resolved) {
		return nil, false
	}
	return o.Resolved, true
}

// HasResolved returns a boolean if a field has been set.
func (o *UpdateInlineCommentModel) HasResolved() bool {
	if o != nil && !IsNil(o.Resolved) {
		return true
	}

	return false
}

// SetResolved gets a reference to the given bool and assigns it to the Resolved field.
func (o *UpdateInlineCommentModel) SetResolved(v bool) {
	o.Resolved = &v
}

func (o UpdateInlineCommentModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UpdateInlineCommentModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	if !IsNil(o.Body) {
		toSerialize["body"] = o.Body
	}
	if !IsNil(o.Resolved) {
		toSerialize["resolved"] = o.Resolved
	}
	return toSerialize, nil
}

type NullableUpdateInlineCommentModel struct {
	value *UpdateInlineCommentModel
	isSet bool
}

func (v NullableUpdateInlineCommentModel) Get() *UpdateInlineCommentModel {
	return v.value
}

func (v *NullableUpdateInlineCommentModel) Set(val *UpdateInlineCommentModel) {
	v.value = val
	v.isSet = true
}

func (v NullableUpdateInlineCommentModel) IsSet() bool {
	return v.isSet
}

func (v *NullableUpdateInlineCommentModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUpdateInlineCommentModel(val *UpdateInlineCommentModel) *NullableUpdateInlineCommentModel {
	return &NullableUpdateInlineCommentModel{value: val, isSet: true}
}

func (v NullableUpdateInlineCommentModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUpdateInlineCommentModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
