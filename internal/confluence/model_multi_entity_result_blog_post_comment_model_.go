/*
The Confluence Cloud REST API v2

This document describes Confluence's v2 APIs. This is intended to be an iteration on the existing Confluence Cloud REST API with improvements in both endpoint definitions and performance.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package confluence

import (
	"encoding/json"
)

// checks if the MultiEntityResultBlogPostCommentModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MultiEntityResultBlogPostCommentModel{}

// MultiEntityResultBlogPostCommentModel struct for MultiEntityResultBlogPostCommentModel
type MultiEntityResultBlogPostCommentModel struct {
	Results []BlogPostCommentModel       `json:"results,omitempty"`
	Links   *MultiEntityResultLabelLinks `json:"_links,omitempty"`
}

// NewMultiEntityResultBlogPostCommentModel instantiates a new MultiEntityResultBlogPostCommentModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMultiEntityResultBlogPostCommentModel() *MultiEntityResultBlogPostCommentModel {
	this := MultiEntityResultBlogPostCommentModel{}
	return &this
}

// NewMultiEntityResultBlogPostCommentModelWithDefaults instantiates a new MultiEntityResultBlogPostCommentModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMultiEntityResultBlogPostCommentModelWithDefaults() *MultiEntityResultBlogPostCommentModel {
	this := MultiEntityResultBlogPostCommentModel{}
	return &this
}

// GetResults returns the Results field value if set, zero value otherwise.
func (o *MultiEntityResultBlogPostCommentModel) GetResults() []BlogPostCommentModel {
	if o == nil || IsNil(o.Results) {
		var ret []BlogPostCommentModel
		return ret
	}
	return o.Results
}

// GetResultsOk returns a tuple with the Results field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiEntityResultBlogPostCommentModel) GetResultsOk() ([]BlogPostCommentModel, bool) {
	if o == nil || IsNil(o.Results) {
		return nil, false
	}
	return o.Results, true
}

// HasResults returns a boolean if a field has been set.
func (o *MultiEntityResultBlogPostCommentModel) HasResults() bool {
	if o != nil && !IsNil(o.Results) {
		return true
	}

	return false
}

// SetResults gets a reference to the given []BlogPostCommentModel and assigns it to the Results field.
func (o *MultiEntityResultBlogPostCommentModel) SetResults(v []BlogPostCommentModel) {
	o.Results = v
}

// GetLinks returns the Links field value if set, zero value otherwise.
func (o *MultiEntityResultBlogPostCommentModel) GetLinks() MultiEntityResultLabelLinks {
	if o == nil || IsNil(o.Links) {
		var ret MultiEntityResultLabelLinks
		return ret
	}
	return *o.Links
}

// GetLinksOk returns a tuple with the Links field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MultiEntityResultBlogPostCommentModel) GetLinksOk() (*MultiEntityResultLabelLinks, bool) {
	if o == nil || IsNil(o.Links) {
		return nil, false
	}
	return o.Links, true
}

// HasLinks returns a boolean if a field has been set.
func (o *MultiEntityResultBlogPostCommentModel) HasLinks() bool {
	if o != nil && !IsNil(o.Links) {
		return true
	}

	return false
}

// SetLinks gets a reference to the given MultiEntityResultLabelLinks and assigns it to the Links field.
func (o *MultiEntityResultBlogPostCommentModel) SetLinks(v MultiEntityResultLabelLinks) {
	o.Links = &v
}

func (o MultiEntityResultBlogPostCommentModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MultiEntityResultBlogPostCommentModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Results) {
		toSerialize["results"] = o.Results
	}
	if !IsNil(o.Links) {
		toSerialize["_links"] = o.Links
	}
	return toSerialize, nil
}

type NullableMultiEntityResultBlogPostCommentModel struct {
	value *MultiEntityResultBlogPostCommentModel
	isSet bool
}

func (v NullableMultiEntityResultBlogPostCommentModel) Get() *MultiEntityResultBlogPostCommentModel {
	return v.value
}

func (v *NullableMultiEntityResultBlogPostCommentModel) Set(val *MultiEntityResultBlogPostCommentModel) {
	v.value = val
	v.isSet = true
}

func (v NullableMultiEntityResultBlogPostCommentModel) IsSet() bool {
	return v.isSet
}

func (v *NullableMultiEntityResultBlogPostCommentModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMultiEntityResultBlogPostCommentModel(val *MultiEntityResultBlogPostCommentModel) *NullableMultiEntityResultBlogPostCommentModel {
	return &NullableMultiEntityResultBlogPostCommentModel{value: val, isSet: true}
}

func (v NullableMultiEntityResultBlogPostCommentModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMultiEntityResultBlogPostCommentModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
