/*
The Confluence Cloud REST API v2

This document describes Confluence's v2 APIs. This is intended to be an iteration on the existing Confluence Cloud REST API with improvements in both endpoint definitions and performance.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package confluence

import (
	"encoding/json"
)

// checks if the CheckAccessByEmailRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CheckAccessByEmailRequest{}

// CheckAccessByEmailRequest struct for CheckAccessByEmailRequest
type CheckAccessByEmailRequest struct {
	// List of emails to check access to site.
	Emails []string `json:"emails"`
}

// NewCheckAccessByEmailRequest instantiates a new CheckAccessByEmailRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCheckAccessByEmailRequest(emails []string) *CheckAccessByEmailRequest {
	this := CheckAccessByEmailRequest{}
	this.Emails = emails
	return &this
}

// NewCheckAccessByEmailRequestWithDefaults instantiates a new CheckAccessByEmailRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCheckAccessByEmailRequestWithDefaults() *CheckAccessByEmailRequest {
	this := CheckAccessByEmailRequest{}
	return &this
}

// GetEmails returns the Emails field value
func (o *CheckAccessByEmailRequest) GetEmails() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Emails
}

// GetEmailsOk returns a tuple with the Emails field value
// and a boolean to check if the value has been set.
func (o *CheckAccessByEmailRequest) GetEmailsOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Emails, true
}

// SetEmails sets field value
func (o *CheckAccessByEmailRequest) SetEmails(v []string) {
	o.Emails = v
}

func (o CheckAccessByEmailRequest) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CheckAccessByEmailRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["emails"] = o.Emails
	return toSerialize, nil
}

type NullableCheckAccessByEmailRequest struct {
	value *CheckAccessByEmailRequest
	isSet bool
}

func (v NullableCheckAccessByEmailRequest) Get() *CheckAccessByEmailRequest {
	return v.value
}

func (v *NullableCheckAccessByEmailRequest) Set(val *CheckAccessByEmailRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCheckAccessByEmailRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCheckAccessByEmailRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCheckAccessByEmailRequest(val *CheckAccessByEmailRequest) *NullableCheckAccessByEmailRequest {
	return &NullableCheckAccessByEmailRequest{value: val, isSet: true}
}

func (v NullableCheckAccessByEmailRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCheckAccessByEmailRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
