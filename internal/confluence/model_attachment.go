/*
The Confluence Cloud REST API v2

This document describes Confluence's v2 APIs. This is intended to be an iteration on the existing Confluence Cloud REST API with improvements in both endpoint definitions and performance.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package confluence

import (
	"encoding/json"
)

// checks if the Attachment type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Attachment{}

// Attachment struct for Attachment
type Attachment struct {
	// ID of the attachment.
	Id     *string        `json:"id,omitempty"`
	Status *ContentStatus `json:"status,omitempty"`
	// Title of the comment.
	Title           *string                    `json:"title,omitempty"`
	PageId          *AttachmentPageId          `json:"pageId,omitempty"`
	BlogPostId      *AttachmentBlogPostId      `json:"blogPostId,omitempty"`
	CustomContentId *AttachmentCustomContentId `json:"customContentId,omitempty"`
	// Media Type for the attachment.
	MediaType *string `json:"mediaType,omitempty"`
	// Media Type description for the attachment.
	MediaTypeDescription *string `json:"mediaTypeDescription,omitempty"`
	// Comment for the attachment.
	Comment *string `json:"comment,omitempty"`
	// File size of the attachment.
	FileSize *int64 `json:"fileSize,omitempty"`
	// WebUI link of the attachment.
	WebuiLink *string `json:"webuiLink,omitempty"`
	// Download link of the attachment.
	DownloadLink *string  `json:"downloadLink,omitempty"`
	Version      *Version `json:"version,omitempty"`
}

// NewAttachment instantiates a new Attachment object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAttachment() *Attachment {
	this := Attachment{}
	return &this
}

// NewAttachmentWithDefaults instantiates a new Attachment object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAttachmentWithDefaults() *Attachment {
	this := Attachment{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *Attachment) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attachment) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *Attachment) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *Attachment) SetId(v string) {
	o.Id = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *Attachment) GetStatus() ContentStatus {
	if o == nil || IsNil(o.Status) {
		var ret ContentStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attachment) GetStatusOk() (*ContentStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *Attachment) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given ContentStatus and assigns it to the Status field.
func (o *Attachment) SetStatus(v ContentStatus) {
	o.Status = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *Attachment) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attachment) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *Attachment) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *Attachment) SetTitle(v string) {
	o.Title = &v
}

// GetPageId returns the PageId field value if set, zero value otherwise.
func (o *Attachment) GetPageId() AttachmentPageId {
	if o == nil || IsNil(o.PageId) {
		var ret AttachmentPageId
		return ret
	}
	return *o.PageId
}

// GetPageIdOk returns a tuple with the PageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attachment) GetPageIdOk() (*AttachmentPageId, bool) {
	if o == nil || IsNil(o.PageId) {
		return nil, false
	}
	return o.PageId, true
}

// HasPageId returns a boolean if a field has been set.
func (o *Attachment) HasPageId() bool {
	if o != nil && !IsNil(o.PageId) {
		return true
	}

	return false
}

// SetPageId gets a reference to the given AttachmentPageId and assigns it to the PageId field.
func (o *Attachment) SetPageId(v AttachmentPageId) {
	o.PageId = &v
}

// GetBlogPostId returns the BlogPostId field value if set, zero value otherwise.
func (o *Attachment) GetBlogPostId() AttachmentBlogPostId {
	if o == nil || IsNil(o.BlogPostId) {
		var ret AttachmentBlogPostId
		return ret
	}
	return *o.BlogPostId
}

// GetBlogPostIdOk returns a tuple with the BlogPostId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attachment) GetBlogPostIdOk() (*AttachmentBlogPostId, bool) {
	if o == nil || IsNil(o.BlogPostId) {
		return nil, false
	}
	return o.BlogPostId, true
}

// HasBlogPostId returns a boolean if a field has been set.
func (o *Attachment) HasBlogPostId() bool {
	if o != nil && !IsNil(o.BlogPostId) {
		return true
	}

	return false
}

// SetBlogPostId gets a reference to the given AttachmentBlogPostId and assigns it to the BlogPostId field.
func (o *Attachment) SetBlogPostId(v AttachmentBlogPostId) {
	o.BlogPostId = &v
}

// GetCustomContentId returns the CustomContentId field value if set, zero value otherwise.
func (o *Attachment) GetCustomContentId() AttachmentCustomContentId {
	if o == nil || IsNil(o.CustomContentId) {
		var ret AttachmentCustomContentId
		return ret
	}
	return *o.CustomContentId
}

// GetCustomContentIdOk returns a tuple with the CustomContentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attachment) GetCustomContentIdOk() (*AttachmentCustomContentId, bool) {
	if o == nil || IsNil(o.CustomContentId) {
		return nil, false
	}
	return o.CustomContentId, true
}

// HasCustomContentId returns a boolean if a field has been set.
func (o *Attachment) HasCustomContentId() bool {
	if o != nil && !IsNil(o.CustomContentId) {
		return true
	}

	return false
}

// SetCustomContentId gets a reference to the given AttachmentCustomContentId and assigns it to the CustomContentId field.
func (o *Attachment) SetCustomContentId(v AttachmentCustomContentId) {
	o.CustomContentId = &v
}

// GetMediaType returns the MediaType field value if set, zero value otherwise.
func (o *Attachment) GetMediaType() string {
	if o == nil || IsNil(o.MediaType) {
		var ret string
		return ret
	}
	return *o.MediaType
}

// GetMediaTypeOk returns a tuple with the MediaType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attachment) GetMediaTypeOk() (*string, bool) {
	if o == nil || IsNil(o.MediaType) {
		return nil, false
	}
	return o.MediaType, true
}

// HasMediaType returns a boolean if a field has been set.
func (o *Attachment) HasMediaType() bool {
	if o != nil && !IsNil(o.MediaType) {
		return true
	}

	return false
}

// SetMediaType gets a reference to the given string and assigns it to the MediaType field.
func (o *Attachment) SetMediaType(v string) {
	o.MediaType = &v
}

// GetMediaTypeDescription returns the MediaTypeDescription field value if set, zero value otherwise.
func (o *Attachment) GetMediaTypeDescription() string {
	if o == nil || IsNil(o.MediaTypeDescription) {
		var ret string
		return ret
	}
	return *o.MediaTypeDescription
}

// GetMediaTypeDescriptionOk returns a tuple with the MediaTypeDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attachment) GetMediaTypeDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.MediaTypeDescription) {
		return nil, false
	}
	return o.MediaTypeDescription, true
}

// HasMediaTypeDescription returns a boolean if a field has been set.
func (o *Attachment) HasMediaTypeDescription() bool {
	if o != nil && !IsNil(o.MediaTypeDescription) {
		return true
	}

	return false
}

// SetMediaTypeDescription gets a reference to the given string and assigns it to the MediaTypeDescription field.
func (o *Attachment) SetMediaTypeDescription(v string) {
	o.MediaTypeDescription = &v
}

// GetComment returns the Comment field value if set, zero value otherwise.
func (o *Attachment) GetComment() string {
	if o == nil || IsNil(o.Comment) {
		var ret string
		return ret
	}
	return *o.Comment
}

// GetCommentOk returns a tuple with the Comment field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attachment) GetCommentOk() (*string, bool) {
	if o == nil || IsNil(o.Comment) {
		return nil, false
	}
	return o.Comment, true
}

// HasComment returns a boolean if a field has been set.
func (o *Attachment) HasComment() bool {
	if o != nil && !IsNil(o.Comment) {
		return true
	}

	return false
}

// SetComment gets a reference to the given string and assigns it to the Comment field.
func (o *Attachment) SetComment(v string) {
	o.Comment = &v
}

// GetFileSize returns the FileSize field value if set, zero value otherwise.
func (o *Attachment) GetFileSize() int64 {
	if o == nil || IsNil(o.FileSize) {
		var ret int64
		return ret
	}
	return *o.FileSize
}

// GetFileSizeOk returns a tuple with the FileSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attachment) GetFileSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.FileSize) {
		return nil, false
	}
	return o.FileSize, true
}

// HasFileSize returns a boolean if a field has been set.
func (o *Attachment) HasFileSize() bool {
	if o != nil && !IsNil(o.FileSize) {
		return true
	}

	return false
}

// SetFileSize gets a reference to the given int64 and assigns it to the FileSize field.
func (o *Attachment) SetFileSize(v int64) {
	o.FileSize = &v
}

// GetWebuiLink returns the WebuiLink field value if set, zero value otherwise.
func (o *Attachment) GetWebuiLink() string {
	if o == nil || IsNil(o.WebuiLink) {
		var ret string
		return ret
	}
	return *o.WebuiLink
}

// GetWebuiLinkOk returns a tuple with the WebuiLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attachment) GetWebuiLinkOk() (*string, bool) {
	if o == nil || IsNil(o.WebuiLink) {
		return nil, false
	}
	return o.WebuiLink, true
}

// HasWebuiLink returns a boolean if a field has been set.
func (o *Attachment) HasWebuiLink() bool {
	if o != nil && !IsNil(o.WebuiLink) {
		return true
	}

	return false
}

// SetWebuiLink gets a reference to the given string and assigns it to the WebuiLink field.
func (o *Attachment) SetWebuiLink(v string) {
	o.WebuiLink = &v
}

// GetDownloadLink returns the DownloadLink field value if set, zero value otherwise.
func (o *Attachment) GetDownloadLink() string {
	if o == nil || IsNil(o.DownloadLink) {
		var ret string
		return ret
	}
	return *o.DownloadLink
}

// GetDownloadLinkOk returns a tuple with the DownloadLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attachment) GetDownloadLinkOk() (*string, bool) {
	if o == nil || IsNil(o.DownloadLink) {
		return nil, false
	}
	return o.DownloadLink, true
}

// HasDownloadLink returns a boolean if a field has been set.
func (o *Attachment) HasDownloadLink() bool {
	if o != nil && !IsNil(o.DownloadLink) {
		return true
	}

	return false
}

// SetDownloadLink gets a reference to the given string and assigns it to the DownloadLink field.
func (o *Attachment) SetDownloadLink(v string) {
	o.DownloadLink = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *Attachment) GetVersion() Version {
	if o == nil || IsNil(o.Version) {
		var ret Version
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Attachment) GetVersionOk() (*Version, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *Attachment) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given Version and assigns it to the Version field.
func (o *Attachment) SetVersion(v Version) {
	o.Version = &v
}

func (o Attachment) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Attachment) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.PageId) {
		toSerialize["pageId"] = o.PageId
	}
	if !IsNil(o.BlogPostId) {
		toSerialize["blogPostId"] = o.BlogPostId
	}
	if !IsNil(o.CustomContentId) {
		toSerialize["customContentId"] = o.CustomContentId
	}
	if !IsNil(o.MediaType) {
		toSerialize["mediaType"] = o.MediaType
	}
	if !IsNil(o.MediaTypeDescription) {
		toSerialize["mediaTypeDescription"] = o.MediaTypeDescription
	}
	if !IsNil(o.Comment) {
		toSerialize["comment"] = o.Comment
	}
	if !IsNil(o.FileSize) {
		toSerialize["fileSize"] = o.FileSize
	}
	if !IsNil(o.WebuiLink) {
		toSerialize["webuiLink"] = o.WebuiLink
	}
	if !IsNil(o.DownloadLink) {
		toSerialize["downloadLink"] = o.DownloadLink
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableAttachment struct {
	value *Attachment
	isSet bool
}

func (v NullableAttachment) Get() *Attachment {
	return v.value
}

func (v *NullableAttachment) Set(val *Attachment) {
	v.value = val
	v.isSet = true
}

func (v NullableAttachment) IsSet() bool {
	return v.isSet
}

func (v *NullableAttachment) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAttachment(val *Attachment) *NullableAttachment {
	return &NullableAttachment{value: val, isSet: true}
}

func (v NullableAttachment) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAttachment) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
