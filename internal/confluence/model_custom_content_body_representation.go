/*
The Confluence Cloud REST API v2

This document describes Confluence's v2 APIs. This is intended to be an iteration on the existing Confluence Cloud REST API with improvements in both endpoint definitions and performance.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package confluence

import (
	"encoding/json"
	"fmt"
)

// CustomContentBodyRepresentation The formats a custom content body can be represented as. A subset of BodyRepresentation.
type CustomContentBodyRepresentation string

// List of CustomContentBodyRepresentation
const (
	CUSTOMCONTENTBODYREPRESENTATION_RAW              CustomContentBodyRepresentation = "raw"
	CUSTOMCONTENTBODYREPRESENTATION_STORAGE          CustomContentBodyRepresentation = "storage"
	CUSTOMCONTENTBODYREPRESENTATION_ATLAS_DOC_FORMAT CustomContentBodyRepresentation = "atlas_doc_format"
)

// All allowed values of CustomContentBodyRepresentation enum
var AllowedCustomContentBodyRepresentationEnumValues = []CustomContentBodyRepresentation{
	"raw",
	"storage",
	"atlas_doc_format",
}

func (v *CustomContentBodyRepresentation) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := CustomContentBodyRepresentation(value)
	for _, existing := range AllowedCustomContentBodyRepresentationEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid CustomContentBodyRepresentation", value)
}

// NewCustomContentBodyRepresentationFromValue returns a pointer to a valid CustomContentBodyRepresentation
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewCustomContentBodyRepresentationFromValue(v string) (*CustomContentBodyRepresentation, error) {
	ev := CustomContentBodyRepresentation(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for CustomContentBodyRepresentation: valid values are %v", v, AllowedCustomContentBodyRepresentationEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v CustomContentBodyRepresentation) IsValid() bool {
	for _, existing := range AllowedCustomContentBodyRepresentationEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to CustomContentBodyRepresentation value
func (v CustomContentBodyRepresentation) Ptr() *CustomContentBodyRepresentation {
	return &v
}

type NullableCustomContentBodyRepresentation struct {
	value *CustomContentBodyRepresentation
	isSet bool
}

func (v NullableCustomContentBodyRepresentation) Get() *CustomContentBodyRepresentation {
	return v.value
}

func (v *NullableCustomContentBodyRepresentation) Set(val *CustomContentBodyRepresentation) {
	v.value = val
	v.isSet = true
}

func (v NullableCustomContentBodyRepresentation) IsSet() bool {
	return v.isSet
}

func (v *NullableCustomContentBodyRepresentation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCustomContentBodyRepresentation(val *CustomContentBodyRepresentation) *NullableCustomContentBodyRepresentation {
	return &NullableCustomContentBodyRepresentation{value: val, isSet: true}
}

func (v NullableCustomContentBodyRepresentation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCustomContentBodyRepresentation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
