openapi: 3.0.3
info:
  description: This document describes Confluence's v2 APIs. This is intended to be
    an iteration on the existing Confluence Cloud REST API with improvements in both
    endpoint definitions and performance.
  termsOfService: https://developer.atlassian.com/platform/marketplace/atlassian-developer-terms/
  title: The Confluence Cloud REST API v2
  version: 2.0.0
externalDocs:
  description: The online and complete version of the Confluence Cloud REST API docs.
  url: https://developer.atlassian.com/cloud/confluence/rest/v2
servers:
- url: "https://{your-domain}/wiki/api/v2"
  variables:
    your-domain:
      default: no-default
      description: Specific domain of the Confluence site being used. Must be provided.
tags:
- description: ""
  name: Attachment
- description: ""
  name: Blog Post
- description: ""
  name: Children
- description: ""
  name: Comment
- description: ""
  name: Content
- description: ""
  name: Content Properties
- description: ""
  name: Custom Content
- description: ""
  name: Label
- description: ""
  name: Page
- description: ""
  name: Space
- description: ""
  name: Space Properties
- description: ""
  name: Task
- description: ""
  name: User
- description: ""
  name: Version
paths:
  /attachments/{id}:
    get:
      description: |-
        Returns a specific attachment.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the attachment's container.
      operationId: getAttachmentById
      parameters:
      - description: "The ID of the attachment to be returned. If you don't know the\
          \ attachment's ID, use Get attachments for page/blogpost/custom content."
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "(att)?[0-9]+"
          type: string
        style: simple
      - description: Allows you to retrieve a previously published version. Specify
          the previous version's number to retrieve its details.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attachment'
          description: Returned if the requested attachment is returned.
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            requested attachment or the attachment was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:attachment:confluence
      summary: Get attachment by id
      tags:
      - Attachment
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:attachment:confluence
      x-atlassian-connect-scope: READ
  /attachments/{id}/labels:
    get:
      description: |-
        Returns the labels of specific attachment. The number of results is limited by the `limit` parameter and additional results (if available)
        will be available through the `next` URL present in the `Link` response header.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the parent content of the attachment and its corresponding space.
      operationId: getAttachmentLabels
      parameters:
      - description: The ID of the attachment for which labels should be returned.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Filter the results to labels based on their prefix.
        explode: true
        in: query
        name: prefix
        required: false
        schema:
          enum:
          - my
          - team
          - global
          - system
          type: string
        style: form
      - description: Used to sort the result by a particular field.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            $ref: '#/components/schemas/LabelSortOrder'
          type: array
        style: form
      - description: "Used for pagination, this opaque cursor will be returned in\
          \ the `next` URL in the `Link` response header. Use the relative URL in\
          \ the `Link` header to retrieve the `next` set of results."
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: "Maximum number of labels per result to return. If more results\
          \ exist, use the `Link` header to retrieve a relative URL that will return\
          \ the next set of results."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          format: int32
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiEntityResult_Label_'
          description: Returned if the requested labels are returned.
          headers:
            Link:
              description: |
                Used for pagination. This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel="next" would be the URL necessary to get the next page of information. If there are no additional results, this header will not be returned. Example response header format: `Link: </wiki/api/v2/attachments/<id>/labels?cursor=<opaque cursor token>>; rel="next"`
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            parent content of the requested attachment or the attachment was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:attachment:confluence
      summary: Get labels for attachment
      tags:
      - Label
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:attachment:confluence
      x-atlassian-connect-scope: READ
  /attachments/{attachment-id}/properties:
    get:
      description: |-
        Retrieves all Content Properties tied to a specified attachment.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the attachment.
      operationId: getAttachmentContentProperties
      parameters:
      - description: The ID of the attachment for which content properties should
          be returned.
        explode: false
        in: path
        name: attachment-id
        required: true
        schema:
          pattern: "(att)?[0-9]+"
          type: string
        style: simple
      - description: Filters the response to return a specific content property with
          matching key (case sensitive).
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: Used to sort the result by a particular field.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          $ref: '#/components/schemas/ContentPropertySortOrder'
        style: form
      - description: "Used for pagination, this opaque cursor will be returned in\
          \ the `next` URL in the `Link` response header. Use the relative URL in\
          \ the `Link` header to retrieve the `next` set of results."
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: "Maximum number of attachments per result to return. If more\
          \ results exist, use the `Link` header to retrieve a relative URL that will\
          \ return the next set of results."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          format: int32
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiEntityResult_ContentProperty_'
          description: Returned if the requested content properties are successfully
            retrieved.
          headers:
            Link:
              description: |
                Used for pagination. This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel="next" would be the URL necessary to get the next page of information. If there are no additional results, this header will not be returned. Example response header format: `Link: </wiki/api/v2/attachments/<attachment-id>/properties?cursor=<opaque cursor token>>; rel="next"`
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            specified attachment or the attachment was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:attachment:confluence
      summary: Get content properties for attachment
      tags:
      - Content Properties
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:attachment:confluence
      x-atlassian-connect-scope: READ
    post:
      description: |-
        Creates a new attachment property.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to update the attachment.
      operationId: createAttachmentProperty
      parameters:
      - description: The ID of the attachment to create a property for.
        explode: false
        in: path
        name: attachment-id
        required: true
        schema:
          pattern: "(att)?[0-9]+"
          type: string
        style: simple
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentPropertyCreateRequest'
        description: The attachment property to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentProperty'
          description: Returned if the attachment property was created successfully.
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            specified attachment or the attachment was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:attachment:confluence
        - write:attachment:confluence
      summary: Create attachment property
      tags:
      - Content Properties
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:attachment:confluence
        - write:attachment:confluence
      x-atlassian-connect-scope: WRITE
  /attachments/{attachment-id}/properties/{property-id}:
    delete:
      description: "Deletes a attachment property by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw)\
        \ required**:\nPermission to attachment the page."
      operationId: deleteAttachmentPropertyById
      parameters:
      - description: The ID of the attachment the property belongs to.
        explode: false
        in: path
        name: attachment-id
        required: true
        schema:
          pattern: "(att)?[0-9]+"
          type: string
        style: simple
      - description: The ID of the property to be deleted.
        explode: false
        in: path
        name: property-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: Returned if the attachment property was deleted successfully.
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            specified attachment or the attachment was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:attachment:confluence
        - write:attachment:confluence
      summary: Delete attachment property by id
      tags:
      - Content Properties
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:attachment:confluence
        - write:attachment:confluence
      x-atlassian-connect-scope: WRITE
    get:
      description: |-
        Retrieves a specific Content Property by ID that is attached to a specified attachment.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the attachment.
      operationId: getAttachmentContentPropertiesById
      parameters:
      - description: The ID of the attachment for which content properties should
          be returned.
        explode: false
        in: path
        name: attachment-id
        required: true
        schema:
          pattern: (att)?0-9+
          type: string
        style: simple
      - description: The ID of the content property to be returned
        explode: false
        in: path
        name: property-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentProperty'
          description: Returned if the requested content property is successfully
            retrieved.
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            specified attachment,the attachment was not found, or the property was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:attachment:confluence
      summary: Get content property for attachment by id
      tags:
      - Content Properties
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:attachment:confluence
      x-atlassian-connect-scope: READ
    put:
      description: "Update an attachment property by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw)\
        \ required**:\nPermission to edit the attachment."
      operationId: updateAttachmentPropertyById
      parameters:
      - description: The ID of the attachment the property belongs to.
        explode: false
        in: path
        name: attachment-id
        required: true
        schema:
          pattern: "(att)?[0-9]+"
          type: string
        style: simple
      - description: The ID of the property to be updated.
        explode: false
        in: path
        name: property-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentPropertyUpdateRequest'
        description: The attachment property to be updated.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentProperty'
          description: Returned if the attachment property was updated successfully.
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            specified attachment or the attachment was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:attachment:confluence
        - write:attachment:confluence
      summary: Update attachment property by id
      tags:
      - Content Properties
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:attachment:confluence
        - write:attachment:confluence
      x-atlassian-connect-scope: WRITE
  /attachments/{id}/versions:
    get:
      description: |-
        Returns the versions of specific attachment.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the attachment and its corresponding space.
      operationId: getAttachmentVersions
      parameters:
      - description: "The ID of the attachment to be queried for its versions. If\
          \ you don't know the attachment ID, use Get attachments and filter the results."
        explode: false
        in: path
        name: id
        required: true
        schema:
          pattern: "(att)?[0-9]+"
          type: string
        style: simple
      - description: "Used for pagination, this opaque cursor will be returned in\
          \ the `next` URL in the `Link` response header. Use the relative URL in\
          \ the `Link` header to retrieve the `next` set of results."
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: "Maximum number of versions per result to return. If more results\
          \ exist, use the `Link` header to retrieve a relative URL that will return\
          \ the next set of results."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          format: int32
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: Used to sort the result by a particular field.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          $ref: '#/components/schemas/VersionSortOrder'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiEntityResult_Version_'
          description: Returned if the requested attachment versions are returned.
          headers:
            Link:
              description: |
                Used for pagination. This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel="next" would be the URL necessary to get the next page of information. If there are no additional results, this header will not be returned. Example response header format: `Link: </wiki/api/v2/attachments/<id>/versions?cursor=<opaque cursor token>>; rel="next"`
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            requested page or the page was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:attachment:confluence
      summary: Get attachment versions
      tags:
      - Version
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:attachment:confluence
      x-atlassian-connect-scope: READ
  /attachments/{attachment-id}/versions/{version-number}:
    get:
      description: |-
        Retrieves version details for the specified attachment and version number.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the attachment.
      operationId: getAttachmentVersionDetails
      parameters:
      - description: The ID of the attachment for which version details should be
          returned.
        explode: false
        in: path
        name: attachment-id
        required: true
        schema:
          pattern: (att)?0-9+
          type: string
        style: simple
      - description: The version number of the attachment to be returned.
        explode: false
        in: path
        name: version-number
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedVersion'
          description: Returned if the requested version details are successfully
            retrieved.
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            specified attachment, the attachment was not found, or the version number does not exist.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:attachment:confluence
      summary: Get version details for attachment version
      tags:
      - Version
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:attachment:confluence
      x-atlassian-connect-scope: READ
  /blogposts:
    get:
      description: |-
        Returns all blog posts. The number of results is limited by the `limit` parameter and additional results (if available)
        will be available through the `next` URL present in the `Link` response header.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to access the Confluence site ('Can use' global permission).
        Only blog posts that the user has permission to view will be returned.
      operationId: getBlogPosts
      parameters:
      - description: Filter the results based on blog post ids. Multiple blog post
          ids can be specified as a comma-separated list.
        explode: true
        in: query
        name: id
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: Filter the results to blog posts based on their status.
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - current
          - deleted
          - trashed
          type: string
        style: form
      - description: "The content format types to be returned in the `body` field\
          \ of the response. If available, the representation will be available under\
          \ a response field of the same name under the `body` field."
        explode: true
        in: query
        name: body-format
        required: false
        schema:
          $ref: '#/components/schemas/PrimaryBodyRepresentation'
        style: form
      - description: "Used for pagination, this opaque cursor will be returned in\
          \ the `next` URL in the `Link` response header. Use the relative URL in\
          \ the `Link` header to retrieve the `next` set of results."
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: "Maximum number of blog posts per result to return. If more results\
          \ exist, use the `Link` response header to retrieve a relative URL that\
          \ will return the next set of results."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          format: int32
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiEntityResult_BlogPost_'
          description: Returned if the requested blog posts are returned.
          headers:
            Link:
              description: |
                Used for pagination. This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel="next" would be the URL necessary to get the next page of information. If there are no additional results, this header will not be returned. Example response header format: `Link: </wiki/api/v2/blogposts?cursor=<opaque cursor token>>; rel="next"`
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:page:confluence
      summary: Get blog posts
      tags:
      - Blog Post
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:page:confluence
      x-atlassian-connect-scope: READ
    post:
      description: |-
        Creates a new blog post in the space specified by the spaceId.

        By default this will create the blog post as a non-draft, unless the status is specified as draft.
        If creating a non-draft, the title must not be empty.

        Currently only supports the storage representation specified in the body.representation enums below
      operationId: createBlogPost
      parameters:
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/BlogPostCreateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogPost'
          description: Returned if the blog post was created successfully.
        "400":
          content: {}
          description: "Returned if invalid values were passed in for any of the enums,\
            \ a REQUIRED parameter was missing, or if the given title is a duplicate\
            \ in the space"
        "401":
          content: {}
          description: Returned if the authentication credentials are incorrect or
            missing from the request
        "404":
          content: {}
          description: |-
            Returned if:
            - The provided space does not exist
            - The user does not have permissions to view the space
            - The user does not have the needed permissions to create a blog post in the provided space
        "413":
          content: {}
          description: Returned if the request is too large in size (over 5 MB)
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - write:page:confluence
      summary: Create blog post
      tags:
      - Blog Post
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - write:page:confluence
      x-atlassian-connect-scope: WRITE
  /blogposts/{id}:
    delete:
      description: |-
        Delete a blog post by id.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the blog post and its corresponding space. Permission to delete blog posts in the space.
      operationId: deleteBlogPost
      parameters:
      - description: The ID of the blog post to be deleted.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          content: {}
          description: Returned if the blog post was successfully deleted.
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          description: |-
            Returned if:
            - The provided blog post does not exist
            - The user does not have permissions to view the blog post
            - The user does not have the needed permissions to delete a blog post in the provided space
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - delete:page:confluence
      summary: Delete blog post
      tags:
      - Blog Post
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - delete:page:confluence
      x-atlassian-connect-scope: DELETE
    get:
      description: |-
        Returns a specific blog post.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the blog post and its corresponding space.
      operationId: getBlogPostById
      parameters:
      - description: "The ID of the blog post to be returned. If you don't know the\
          \ blog post ID, use Get blog posts and filter the results."
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "The content format types to be returned in the `body` field\
          \ of the response. If available, the representation will be available under\
          \ a response field of the same name under the `body` field."
        explode: true
        in: query
        name: body-format
        required: false
        schema:
          $ref: '#/components/schemas/PrimaryBodyRepresentation'
        style: form
      - description: Retrieve the draft version of this blog post.
        explode: true
        in: query
        name: get-draft
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Allows you to retrieve a previously published version. Specify
          the previous version's number to retrieve its details.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogPost'
          description: Returned if the requested blog post is returned.
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            requested blog post or the blog post was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:page:confluence
      summary: Get blog post by id
      tags:
      - Blog Post
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:page:confluence
      x-atlassian-connect-scope: READ
    put:
      description: |-
        Update a blog post by id.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the blog post and its corresponding space. Permission to update blog posts in the space.
      operationId: updateBlogPost
      parameters:
      - description: "The ID of the blog post to be updated. If you don't know the\
          \ blog post ID, use Get Blog Posts and filter the results."
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/BlogPostUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlogPost'
          description: Returned if the requested blog post is successfully updated.
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          description: |-
            Returned if:
            - The provided blog post does not exist
            - The user does not have permissions to view the blog post
            - The user does not have the needed permissions to update a blog post in the provided space
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - write:page:confluence
      summary: Update blog post
      tags:
      - Blog Post
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - write:page:confluence
      x-atlassian-connect-scope: WRITE
  /blogposts/{id}/attachments:
    get:
      description: |-
        Returns the attachments of specific blog post. The number of results is limited by the `limit` parameter and additional results (if available)
        will be available through the `next` URL present in the `Link` response header.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the content of the blog post and its corresponding space.
      operationId: getBlogpostAttachments
      parameters:
      - description: The ID of the blog post for which attachments should be returned.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Used to sort the result by a particular field.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          $ref: '#/components/schemas/AttachmentSortOrder'
        style: form
      - description: "Used for pagination, this opaque cursor will be returned in\
          \ the `next` URL in the `Link` response header. Use the relative URL in\
          \ the `Link` header to retrieve the `next` set of results."
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Filters on the mediaType of attachments. Only one may be specified.
        explode: true
        in: query
        name: mediaType
        required: false
        schema:
          type: string
        style: form
      - description: Filters on the file-name of attachments. Only one may be specified.
        explode: true
        in: query
        name: filename
        required: false
        schema:
          type: string
        style: form
      - description: "Maximum number of attachments per result to return. If more\
          \ results exist, use the `Link` header to retrieve a relative URL that will\
          \ return the next set of results."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          format: int32
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiEntityResult_Attachment_'
          description: Returned if the requested attachments are returned.
          headers:
            Link:
              description: |
                Used for pagination. This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel="next" would be the URL necessary to get the next page of information. If there are no additional results, this header will not be returned. Example response header format: `Link: </wiki/api/v2/blogposts/<id>/attachments?cursor=<opaque cursor token>>; rel="next"`
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            requested blog post or the blog post was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:attachment:confluence
      summary: Get attachments for blog post
      tags:
      - Attachment
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:attachment:confluence
      x-atlassian-connect-scope: READ
  /blogposts/{id}/custom-content:
    get:
      description: |-
        Returns all custom content for a given type within a given blogpost. The number of results is limited by the `limit` parameter and additional results (if available)
        will be available through the `next` URL present in the `Link` response header.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the custom content, the container of the custom content (blog post), and the corresponding space.
      operationId: getCustomContentByTypeInBlogPost
      parameters:
      - description: The ID of the blog post for which custom content should be returned.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "The type of custom content being requested. See: https://developer.atlassian.com/cloud/confluence/custom-content/\
          \ for additional details on custom content."
        explode: true
        in: query
        name: type
        required: true
        schema:
          type: string
        style: form
      - description: "Used for pagination, this opaque cursor will be returned in\
          \ the `next` URL in the `Link` response header. Use the relative URL in\
          \ the `Link` header to retrieve the `next` set of results."
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: "Maximum number of pages per result to return. If more results\
          \ exist, use the `Link` header to retrieve a relative URL that will return\
          \ the next set of results."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          format: int32
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: |-
          The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field.

          Note: If the custom content body type is `storage`, the `storage` and `atlas_doc_format` body formats are able to be returned. If the custom content body type is `raw`, only the `raw` body format is able to be returned.
        explode: true
        in: query
        name: body-format
        required: false
        schema:
          $ref: '#/components/schemas/CustomContentBodyRepresentation'
        style: form
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiEntityResult_CustomContent_'
          description: Returned if the requested custom content is returned.
          headers:
            Link:
              description: |
                Used for pagination. This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel="next" would be the URL necessary to get the next page of information. If there are no additional results, this header will not be returned. Example response header format: `Link: </wiki/api/v2/blogposts/{id}/custom-content?cursor=<opaque cursor token>>; rel="next"`
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          description: "Returned if the given blog post is not found. Returned if\
            \ the type of custom content is not found. Note, this is distinct from\
            \ the type being present, but no instances of the type, which would be\
            \ a 200 with empty results."
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:custom-content:confluence
      summary: Get custom content by type in blog post
      tags:
      - Custom Content
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:custom-content:confluence
      x-atlassian-connect-scope: READ
  /blogposts/{id}/labels:
    get:
      description: |-
        Returns the labels of specific blog post. The number of results is limited by the `limit` parameter and additional results (if available)
        will be available through the `next` URL present in the `Link` response header.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the content of the blog post and its corresponding space.
      operationId: getBlogPostLabels
      parameters:
      - description: The ID of the blog post for which labels should be returned.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Filter the results to labels based on their prefix.
        explode: true
        in: query
        name: prefix
        required: false
        schema:
          enum:
          - my
          - team
          - global
          - system
          type: string
        style: form
      - description: Used to sort the result by a particular field.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            $ref: '#/components/schemas/LabelSortOrder'
          type: array
        style: form
      - description: "Used for pagination, this opaque cursor will be returned in\
          \ the `next` URL in the `Link` response header. Use the relative URL in\
          \ the `Link` header to retrieve the `next` set of results."
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: "Maximum number of labels per result to return. If more results\
          \ exist, use the `Link` header to retrieve a relative URL that will return\
          \ the next set of results."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          format: int32
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiEntityResult_Label_'
          description: Returned if the requested labels are returned.
          headers:
            Link:
              description: |
                Used for pagination. This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel="next" would be the URL necessary to get the next page of information. If there are no additional results, this header will not be returned. Example response header format: `Link: </wiki/api/v2/blogposts/<id>/labels?cursor=<opaque cursor token>>; rel="next"`
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            requested blog post or the blog post was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:page:confluence
      summary: Get labels for blog post
      tags:
      - Label
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:page:confluence
      x-atlassian-connect-scope: READ
  /blogposts/{blogpost-id}/properties:
    get:
      description: |-
        Retrieves all Content Properties tied to a specified blog post.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the blog post.
      operationId: getBlogpostContentProperties
      parameters:
      - description: The ID of the blog post for which content properties should be
          returned.
        explode: false
        in: path
        name: blogpost-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Filters the response to return a specific content property with
          matching key (case sensitive).
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: Used to sort the result by a particular field.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          $ref: '#/components/schemas/ContentPropertySortOrder'
        style: form
      - description: "Used for pagination, this opaque cursor will be returned in\
          \ the `next` URL in the `Link` response header. Use the relative URL in\
          \ the `Link` header to retrieve the `next` set of results."
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: "Maximum number of attachments per result to return. If more\
          \ results exist, use the `Link` header to retrieve a relative URL that will\
          \ return the next set of results."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          format: int32
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiEntityResult_ContentProperty_'
          description: Returned if the requested content properties are successfully
            retrieved.
          headers:
            Link:
              description: |
                Used for pagination. This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel="next" would be the URL necessary to get the next page of information. If there are no additional results, this header will not be returned. Example response header format: `Link: </wiki/api/v2/blogposts/<blogpost-id>/properties?cursor=<opaque cursor token>>; rel="next"`
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            specified blog post or the blog post was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:page:confluence
      summary: Get content properties for blog post
      tags:
      - Content Properties
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:page:confluence
      x-atlassian-connect-scope: READ
    post:
      description: |-
        Creates a new blog post property.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to update the blog post.
      operationId: createBlogpostProperty
      parameters:
      - description: The ID of the blog post to create a property for.
        explode: false
        in: path
        name: blogpost-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentPropertyCreateRequest'
        description: The blog post property to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentProperty'
          description: Returned if the blog post property was created successfully.
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            specified blog post or the blog post was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:page:confluence
        - write:page:confluence
      summary: Create blog post property
      tags:
      - Content Properties
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:page:confluence
        - write:page:confluence
      x-atlassian-connect-scope: WRITE
  /blogposts/{blogpost-id}/properties/{property-id}:
    delete:
      description: "Deletes a blog post property by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw)\
        \ required**:\nPermission to edit the blog post."
      operationId: deleteBlogpostPropertyById
      parameters:
      - description: The ID of the blog post the property belongs to.
        explode: false
        in: path
        name: blogpost-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: The ID of the property to be deleted.
        explode: false
        in: path
        name: property-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: Returned if the blog post property was deleted successfully.
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            specified blog post or the blog post was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:page:confluence
        - write:page:confluence
      summary: Delete blog post property by id
      tags:
      - Content Properties
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:page:confluence
        - write:page:confluence
      x-atlassian-connect-scope: WRITE
    get:
      description: |-
        Retrieves a specific Content Property by ID that is attached to a specified blog post.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the blog post.
      operationId: getBlogpostContentPropertiesById
      parameters:
      - description: The ID of the blog post for which content properties should be
          returned.
        explode: false
        in: path
        name: blogpost-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: The ID of the property being requested
        explode: false
        in: path
        name: property-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentProperty'
          description: Returned if the requested content property is successfully
            retrieved.
          headers:
            Link:
              description: |
                Used for pagination. This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel="next" would be the URL necessary to get the next page of information. If there are no additional results, this header will not be returned. Example response header format: `Link: </wiki/api/v2/blogposts/<blogpost-id>/properties/<property-id>?cursor=<opaque cursor token>>; rel="next"`
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            specified blog post,the blog post was not found, or the property was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:page:confluence
      summary: Get content property for blog post by id
      tags:
      - Content Properties
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:page:confluence
      x-atlassian-connect-scope: READ
    put:
      description: "Update a blog post property by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw)\
        \ required**:\nPermission to edit the blog post."
      operationId: updateBlogpostPropertyById
      parameters:
      - description: The ID of the blog post the property belongs to.
        explode: false
        in: path
        name: blogpost-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: The ID of the property to be updated.
        explode: false
        in: path
        name: property-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentPropertyUpdateRequest'
        description: The blog post property to be updated.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentProperty'
          description: Returned if the blog post property was updated successfully.
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            specified blog post or the blog post was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:page:confluence
        - write:page:confluence
      summary: Update blog post property by id
      tags:
      - Content Properties
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:page:confluence
        - write:page:confluence
      x-atlassian-connect-scope: WRITE
  /blogposts/{id}/versions:
    get:
      description: "Returns the versions of specific blog post. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw)\
        \ required**:\nPermission to view the blog post and its corresponding space."
      operationId: getBlogPostVersions
      parameters:
      - description: "The ID of the blog post to be queried for its versions. If you\
          \ don't know the blog post ID, use Get blog posts and filter the results."
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "The content format types to be returned in the `body` field\
          \ of the response. If available, the representation will be available under\
          \ a response field of the same name under the `body` field."
        explode: true
        in: query
        name: body-format
        required: false
        schema:
          $ref: '#/components/schemas/PrimaryBodyRepresentation'
        style: form
      - description: "Used for pagination, this opaque cursor will be returned in\
          \ the `next` URL in the `Link` response header. Use the relative URL in\
          \ the `Link` header to retrieve the `next` set of results."
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: "Maximum number of versions per result to return. If more results\
          \ exist, use the `Link` header to retrieve a relative URL that will return\
          \ the next set of results."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          format: int32
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: Used to sort the result by a particular field.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          $ref: '#/components/schemas/VersionSortOrder'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiEntityResult_Version__1'
          description: Returned if the requested blog post versions are returned.
          headers:
            Link:
              description: |
                Used for pagination. This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel="next" would be the URL necessary to get the next page of information. If there are no additional results, this header will not be returned. Example response header format: `Link: </wiki/api/v2/blogposts/<id>/versions?cursor=<opaque cursor token>>; rel="next"`
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            requested page or the page was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:page:confluence
      summary: Get blog post versions
      tags:
      - Version
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:page:confluence
      x-atlassian-connect-scope: READ
  /blogposts/{blogpost-id}/versions/{version-number}:
    get:
      description: |-
        Retrieves version details for the specified blog post and version number.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the blog post.
      operationId: getBlogPostVersionDetails
      parameters:
      - description: The ID of the blog post for which version details should be returned.
        explode: false
        in: path
        name: blogpost-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: The version number of the blog post to be returned.
        explode: false
        in: path
        name: version-number
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedVersion'
          description: Returned if the requested version details are successfully
            retrieved.
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            specified blog post, the blog post was not found, or the version number does not exist.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:page:confluence
      summary: Get version details for blog post version
      tags:
      - Version
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:page:confluence
      x-atlassian-connect-scope: READ
  /content/convert-ids-to-types:
    post:
      description: |-
        Converts a list of content ids into their associated content types. This is useful for users migrating from v1 to v2
        who may have stored just content ids without their associated type. This will return types as they should be used in v2.
        Notably, this will return `inline-comment` for inline comments and `footer-comment` for footer comments, which is distinct from them
        both being represented by `comment` in v1.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the requested content. Any content that the user does not have permission to view or does not exist will map to `null` in the response.
      operationId: convertContentIdsToContentTypes
      requestBody:
        $ref: '#/components/requestBodies/ContentIdToContentTypeRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentIdToContentTypeResponse'
          description: Returned if the requested content ids are successfully converted
            to their content types
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
      security:
      - basicAuth: []
      - oAuthDefinitions: []
      summary: Convert content ids to content types
      tags:
      - Content
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes: []
      x-atlassian-connect-scope: READ
  /custom-content:
    get:
      description: |-
        Returns all custom content for a given type. The number of results is limited by the `limit` parameter and additional results (if available)
        will be available through the `next` URL present in the `Link` response header.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the custom content, the container of the custom content, and the corresponding space (if different from the container).
      operationId: getCustomContentByType
      parameters:
      - description: "The type of custom content being requested. See: https://developer.atlassian.com/cloud/confluence/custom-content/\
          \ for additional details on custom content."
        explode: true
        in: query
        name: type
        required: true
        schema:
          type: string
        style: form
      - description: Filter the results based on custom content ids. Multiple custom
          content ids can be specified as a comma-separated list.
        explode: true
        in: query
        name: id
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: "Used for pagination, this opaque cursor will be returned in\
          \ the `next` URL in the `Link` response header. Use the relative URL in\
          \ the `Link` header to retrieve the `next` set of results."
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: "Maximum number of pages per result to return. If more results\
          \ exist, use the `Link` header to retrieve a relative URL that will return\
          \ the next set of results."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          format: int32
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: |-
          The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field.

          Note: If the custom content body type is `storage`, the `storage` and `atlas_doc_format` body formats are able to be returned. If the custom content body type is `raw`, only the `raw` body format is able to be returned.
        explode: true
        in: query
        name: body-format
        required: false
        schema:
          $ref: '#/components/schemas/CustomContentBodyRepresentation'
        style: form
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiEntityResult_CustomContent_'
          description: Returned if the requested custom content is returned.
          headers:
            Link:
              description: |
                Used for pagination. This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel="next" would be the URL necessary to get the next page of information. If there are no additional results, this header will not be returned. Example response header format: `Link: </wiki/api/v2/custom-content?cursor=<opaque cursor token>>; rel="next"`
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          description: "Returned if the type of custom content is not found. Note,\
            \ this is distinct from the type being present, but no instances of the\
            \ type, which would be a 200 with empty results."
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:custom-content:confluence
      summary: Get custom content by type
      tags:
      - Custom Content
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:custom-content:confluence
      x-atlassian-connect-scope: READ
    post:
      description: |-
        Creates a new custom content in the given space, page, blogpost or other custom content.

        Only one of `spaceId`, `pageId`, `blogPostId`, or `customContentId` is required in the request body.
        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the content of the page or blogpost and its corresponding space. Permission to create custom content in the space.
      operationId: createCustomContent
      parameters:
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/CustomContentCreateRequest'
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomContent'
          description: Returned if the requested custom content is created successfully.
          headers:
            location:
              description: |
                Relative link to created custom content Example response header format: `location: </wiki/api/v2/custom-content/<id>>`
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          description: Returned if the type of custom content is not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - write:custom-content:confluence
      summary: Create custom content
      tags:
      - Custom Content
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - write:custom-content:confluence
      x-atlassian-connect-scope: WRITE
  /custom-content/{id}:
    delete:
      description: |-
        Delete a custom content by id.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the content of the page or blogpost and its corresponding space. Permission to delete custom content in the space.
      operationId: deleteCustomContent
      parameters:
      - description: The ID of the custom content to be deleted.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          content: {}
          description: Returned if the custom content was deleted.
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          description: Returned if the custom content is not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - delete:custom-content:confluence
      summary: Delete custom content
      tags:
      - Custom Content
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - delete:custom-content:confluence
      x-atlassian-connect-scope: DELETE
    get:
      description: "Returns a specific piece of custom content. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw)\
        \ required**:\nPermission to view the custom content, the container of the\
        \ custom content, and the corresponding space (if different from the container)."
      operationId: getCustomContentById
      parameters:
      - description: "The ID of the custom content to be returned. If you don't know\
          \ the custom content ID, use Get Custom Content by Type and filter the results."
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: |-
          The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field.

          Note: If the custom content body type is `storage`, the `storage` and `atlas_doc_format` body formats are able to be returned. If the custom content body type is `raw`, only the `raw` body format is able to be returned.
        explode: true
        in: query
        name: body-format
        required: false
        schema:
          $ref: '#/components/schemas/CustomContentBodyRepresentation'
        style: form
      - description: Allows you to retrieve a previously published version. Specify
          the previous version's number to retrieve its details.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomContent'
          description: Returned if the requested custom content is returned.
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            requested custom content or the custom content was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:custom-content:confluence
      summary: Get custom content by id
      tags:
      - Custom Content
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:custom-content:confluence
      x-atlassian-connect-scope: READ
    put:
      description: |-
        Update a custom content by id.

        `spaceId` is always required and maximum one of `pageId`, `blogPostId`, or `customContentId` is allowed in the request body.
        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the content of the page or blogpost and its corresponding space. Permission to update custom content in the space.
      operationId: updateCustomContent
      parameters:
      - description: "The ID of the custom content to be updated. If you don't know\
          \ the custom content ID, use Get Custom Content by Type and filter the results."
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/CustomContentUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CustomContent'
          description: Returned if the requested custom content is updated successfully.
          headers:
            location:
              description: |
                Relative link to updated custom content Example response header format: `location: </wiki/api/v2/custom-content/<id>>`
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          description: Returned if the type of custom content is not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - write:custom-content:confluence
      summary: Update custom content
      tags:
      - Custom Content
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - write:custom-content:confluence
      x-atlassian-connect-scope: WRITE
  /custom-content/{id}/attachments:
    get:
      description: |-
        Returns the attachments of specific custom content. The number of results is limited by the `limit` parameter and additional results (if available)
        will be available through the `next` URL present in the `Link` response header.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the content of the custom content and its corresponding space.
      operationId: getCustomContentAttachments
      parameters:
      - description: The ID of the custom content for which attachments should be
          returned.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Used to sort the result by a particular field.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          $ref: '#/components/schemas/AttachmentSortOrder'
        style: form
      - description: "Used for pagination, this opaque cursor will be returned in\
          \ the `next` URL in the `Link` response header. Use the relative URL in\
          \ the `Link` header to retrieve the `next` set of results."
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Filters on the mediaType of attachments. Only one may be specified.
        explode: true
        in: query
        name: mediaType
        required: false
        schema:
          type: string
        style: form
      - description: Filters on the file-name of attachments. Only one may be specified.
        explode: true
        in: query
        name: filename
        required: false
        schema:
          type: string
        style: form
      - description: "Maximum number of attachments per result to return. If more\
          \ results exist, use the `Link` header to retrieve a relative URL that will\
          \ return the next set of results."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          format: int32
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiEntityResult_Attachment_'
          description: Returned if the requested attachments are returned.
          headers:
            Link:
              description: |
                Used for pagination. This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel="next" would be the URL necessary to get the next page of information. If there are no additional results, this header will not be returned. Example response header format: `Link: </wiki/api/v2/custom-content/<id>/attachments?cursor=<opaque cursor token>>; rel="next"`
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            requested custom content or the custom content was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:attachment:confluence
      summary: Get attachments for custom content
      tags:
      - Attachment
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:attachment:confluence
      x-atlassian-connect-scope: READ
  /custom-content/{id}/labels:
    get:
      description: |-
        Returns the labels for a specific piece of custom content. The number of results is limited by the `limit` parameter and additional results (if available)
        will be available through the `next` URL present in the `Link` response header.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the custom content and its corresponding space.
      operationId: getCustomContentLabels
      parameters:
      - description: The ID of the custom content for which labels should be returned.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Filter the results to labels based on their prefix.
        explode: true
        in: query
        name: prefix
        required: false
        schema:
          enum:
          - my
          - team
          - global
          - system
          type: string
        style: form
      - description: Used to sort the result by a particular field.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            $ref: '#/components/schemas/LabelSortOrder'
          type: array
        style: form
      - description: "Used for pagination, this opaque cursor will be returned in\
          \ the `next` URL in the `Link` response header. Use the relative URL in\
          \ the `Link` header to retrieve the `next` set of results."
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: "Maximum number of labels per result to return. If more results\
          \ exist, use the `Link` header to retrieve a relative URL that will return\
          \ the next set of results."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          format: int32
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiEntityResult_Label_'
          description: Returned if the requested labels are returned.
          headers:
            Link:
              description: |
                Used for pagination. This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel="next" would be the URL necessary to get the next page of information. If there are no additional results, this header will not be returned. Example response header format: `Link: </wiki/api/v2/custom-content/<id>/labels?cursor=<opaque cursor token>>; rel="next"`
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            requested page or the page was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:custom-content:confluence
      summary: Get labels for custom content
      tags:
      - Label
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:custom-content:confluence
      x-atlassian-connect-scope: READ
  /custom-content/{custom-content-id}/properties:
    get:
      description: |-
        Retrieves Content Properties tied to a specified custom content.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the custom content.
      operationId: getCustomContentContentProperties
      parameters:
      - description: The ID of the custom content for which content properties should
          be returned.
        explode: false
        in: path
        name: custom-content-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Filters the response to return a specific content property with
          matching key (case sensitive).
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: Used to sort the result by a particular field.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          $ref: '#/components/schemas/ContentPropertySortOrder'
        style: form
      - description: "Used for pagination, this opaque cursor will be returned in\
          \ the `next` URL in the `Link` response header. Use the relative URL in\
          \ the `Link` header to retrieve the `next` set of results."
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: "Maximum number of attachments per result to return. If more\
          \ results exist, use the `Link` header to retrieve a relative URL that will\
          \ return the next set of results."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          format: int32
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiEntityResult_ContentProperty_'
          description: Returned if the requested content properties are successfully
            retrieved.
          headers:
            Link:
              description: |
                Used for pagination. This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel="next" would be the URL necessary to get the next page of information. If there are no additional results, this header will not be returned. Example response header format: `Link: </wiki/api/v2/custom-content/<custom-content-id>/properties?cursor=<opaque cursor token>>; rel="next"`
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            specified custom content or the custom content was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:custom-content:confluence
      summary: Get content properties for custom content
      tags:
      - Content Properties
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:custom-content:confluence
      x-atlassian-connect-scope: READ
    post:
      description: |-
        Creates a new custom content property.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to update the custom content.
      operationId: createCustomContentProperty
      parameters:
      - description: The ID of the custom content to create a property for.
        explode: false
        in: path
        name: custom-content-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentPropertyCreateRequest'
        description: The custom content property to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentProperty'
          description: Returned if the custom content property was created successfully.
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            specified custom content or the custom content was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:custom-content:confluence
        - write:custom-content:confluence
      summary: Create custom content property
      tags:
      - Content Properties
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:custom-content:confluence
        - write:custom-content:confluence
      x-atlassian-connect-scope: WRITE
  /custom-content/{custom-content-id}/properties/{property-id}:
    delete:
      description: "Deletes a custom content property by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw)\
        \ required**:\nPermission to edit the custom content."
      operationId: deleteCustomContentPropertyById
      parameters:
      - description: The ID of the custom content the property belongs to.
        explode: false
        in: path
        name: custom-content-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: The ID of the property to be deleted.
        explode: false
        in: path
        name: property-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: Returned if the custom content property was deleted successfully.
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            specified custom content or the custom content was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:custom-content:confluence
        - write:custom-content:confluence
      summary: Delete custom content property by id
      tags:
      - Content Properties
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:custom-content:confluence
        - write:custom-content:confluence
      x-atlassian-connect-scope: WRITE
    get:
      description: |-
        Retrieves a specific Content Property by ID that is attached to a specified custom content.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the page.
      operationId: getCustomContentContentPropertiesById
      parameters:
      - description: The ID of the custom content for which content properties should
          be returned.
        explode: false
        in: path
        name: custom-content-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: The ID of the content property being requested.
        explode: false
        in: path
        name: property-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentProperty'
          description: Returned if the requested content property is successfully
            retrieved.
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            specified custom content, the custom content was not found, or the property was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:custom-content:confluence
      summary: Get content property for custom content by id
      tags:
      - Content Properties
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:custom-content:confluence
      x-atlassian-connect-scope: READ
    put:
      description: "Update a custom content property by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw)\
        \ required**:\nPermission to edit the custom content."
      operationId: updateCustomContentPropertyById
      parameters:
      - description: The ID of the custom content the property belongs to.
        explode: false
        in: path
        name: custom-content-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: The ID of the property to be updated.
        explode: false
        in: path
        name: property-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentPropertyUpdateRequest'
        description: The custom content property to be updated.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentProperty'
          description: Returned if the custom content property was updated successfully.
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            specified custom content or the custom content was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:custom-content:confluence
        - write:custom-content:confluence
      summary: Update custom content property by id
      tags:
      - Content Properties
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:custom-content:confluence
        - write:custom-content:confluence
      x-atlassian-connect-scope: WRITE
  /labels/{id}/attachments:
    get:
      description: |-
        Returns the attachments of specified label. The number of results is limited by the `limit` parameter and additional results (if available)
        will be available through the `next` URL present in the `Link` response header.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the attachment and its corresponding space.
      operationId: getLabelAttachments
      parameters:
      - description: The ID of the label for which attachments should be returned.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Used to sort the result by a particular field.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          $ref: '#/components/schemas/AttachmentSortOrder'
        style: form
      - description: "Used for pagination, this opaque cursor will be returned in\
          \ the `next` URL in the `Link` response header. Use the relative URL in\
          \ the `Link` header to retrieve the `next` set of results."
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: "Maximum number of pages per result to return. If more results\
          \ exist, use the `Link` header to retrieve a relative URL that will return\
          \ the next set of results."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          format: int32
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiEntityResult_Attachment__1'
          description: Returned if the requested attachments for specified label were
            successfully fetched.
          headers:
            Link:
              description: |
                Used for pagination. This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel="next" would be the URL necessary to get the next page of information. If there are no additional results, this header will not be returned. Example response header format: `Link: </wiki/api/v2/labels/<id>/attachment?cursor=<opaque cursor token>>; rel="next"`
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            requested label or label was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:attachment:confluence
      summary: Get attachments for label
      tags:
      - Attachment
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:attachment:confluence
      x-atlassian-connect-scope: READ
  /labels/{id}/blogposts:
    get:
      description: |-
        Returns the blogposts of specified label. The number of results is limited by the `limit` parameter and additional results (if available)
        will be available through the `next` URL present in the `Link` response header.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the content of the page and its corresponding space.
      operationId: getLabelBlogPosts
      parameters:
      - description: The ID of the label for which blog posts should be returned.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "The content format types to be returned in the `body` field\
          \ of the response. If available, the representation will be available under\
          \ a response field of the same name under the `body` field."
        explode: true
        in: query
        name: body-format
        required: false
        schema:
          $ref: '#/components/schemas/PrimaryBodyRepresentation'
        style: form
      - description: Used to sort the result by a particular field.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          $ref: '#/components/schemas/BlogPostSortOrder'
        style: form
      - description: "Used for pagination, this opaque cursor will be returned in\
          \ the `next` URL in the `Link` response header. Use the relative URL in\
          \ the `Link` header to retrieve the `next` set of results."
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: "Maximum number of blog posts per result to return. If more results\
          \ exist, use the `Link` header to retrieve a relative URL that will return\
          \ the next set of results."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          format: int32
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiEntityResult_BlogPost_'
          description: Returned if the requested blog posts for specified label were
            successfully fetched.
          headers:
            Link:
              description: |
                Used for pagination. This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel="next" would be the URL necessary to get the next page of information. If there are no additional results, this header will not be returned. Example response header format: `Link: </wiki/api/v2/labels/<id>/blogposts?cursor=<opaque cursor token>>; rel="next"`
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            requested label or label was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:page:confluence
      summary: Get blog posts for label
      tags:
      - Blog Post
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:page:confluence
      x-atlassian-connect-scope: READ
  /labels/{id}/pages:
    get:
      description: |-
        Returns the pages of specified label. The number of results is limited by the `limit` parameter and additional results (if available)
        will be available through the `next` URL present in the `Link` response header.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the content of the page and its corresponding space.
      operationId: getLabelPages
      parameters:
      - description: The ID of the label for which pages should be returned.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "The content format types to be returned in the `body` field\
          \ of the response. If available, the representation will be available under\
          \ a response field of the same name under the `body` field."
        explode: true
        in: query
        name: body-format
        required: false
        schema:
          $ref: '#/components/schemas/PrimaryBodyRepresentation'
        style: form
      - description: Used to sort the result by a particular field.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          $ref: '#/components/schemas/PageSortOrder'
        style: form
      - description: "Used for pagination, this opaque cursor will be returned in\
          \ the `next` URL in the `Link` response header. Use the relative URL in\
          \ the `Link` header to retrieve the `next` set of results."
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: "Maximum number of pages per result to return. If more results\
          \ exist, use the `Link` header to retrieve a relative URL that will return\
          \ the next set of results."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          format: int32
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiEntityResult_Page_'
          description: Returned if the requested pages for specified label were successfully
            fetched.
          headers:
            Link:
              description: |
                Used for pagination. This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel="next" would be the URL necessary to get the next page of information. If there are no additional results, this header will not be returned. Example response header format: `Link: </wiki/api/v2/labels/<id>/pages?cursor=<opaque cursor token>>; rel="next"`
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            requested label or label was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:page:confluence
      summary: Get pages for label
      tags:
      - Page
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:page:confluence
      x-atlassian-connect-scope: READ
  /pages:
    get:
      description: |-
        Returns all pages. The number of results is limited by the `limit` parameter and additional results (if available)
        will be available through the `next` URL present in the `Link` response header.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to access the Confluence site ('Can use' global permission).
        Only pages that the user has permission to view will be returned.
      operationId: getPages
      parameters:
      - description: Filter the results based on page ids. Multiple page ids can be
          specified as a comma-separated list.
        explode: true
        in: query
        name: id
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: Filter the results to pages based on their status.
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - current
          - archived
          - deleted
          - trashed
          type: string
        style: form
      - description: "The content format types to be returned in the `body` field\
          \ of the response. If available, the representation will be available under\
          \ a response field of the same name under the `body` field."
        explode: true
        in: query
        name: body-format
        required: false
        schema:
          $ref: '#/components/schemas/PrimaryBodyRepresentation'
        style: form
      - description: "Used for pagination, this opaque cursor will be returned in\
          \ the `next` URL in the `Link` response header. Use the relative URL in\
          \ the `Link` header to retrieve the `next` set of results."
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: "Maximum number of pages per result to return. If more results\
          \ exist, use the `Link` header to retrieve a relative URL that will return\
          \ the next set of results."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          format: int32
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiEntityResult_Page_'
          description: Returned if the requested pages are returned.
          headers:
            Link:
              description: |
                Used for pagination. This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel="next" would be the URL necessary to get the next page of information. If there are no additional results, this header will not be returned. Example response header format: `Link: </wiki/api/v2/pages?cursor=<opaque cursor token>>; rel="next"`
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:page:confluence
      summary: Get pages
      tags:
      - Page
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:page:confluence
      x-atlassian-connect-scope: READ
    post:
      description: |-
        Creates a page in the space.

        Pages are created as published by default unless specified as a draft in the status field. If creating a published page, the title must be specified.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the corresponding space. Permission to create a page in the space.
      operationId: createPage
      parameters:
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/PageCreateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
          description: Returned if the page was successfully created.
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: Returned if the authentication credentials are incorrect or
            missing from the request.
        "404":
          description: |-
            Returned if:
            - The space does not exist
            - The user does not have permissions to view the space
            - The user does not have the needed permissions to create a page in the space
        "413":
          content: {}
          description: Returned if the request is too large in size (over 5 MB).
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - write:page:confluence
      summary: Create page
      tags:
      - Page
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - write:page:confluence
      x-atlassian-connect-scope: WRITE
  /pages/{id}:
    delete:
      description: |-
        Delete a page by id.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the page and its corresponding space. Permission to delete pages in the space.
      operationId: deletePage
      parameters:
      - description: The ID of the page to be deleted.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          content: {}
          description: Returned if the page was successfully deleted.
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          description: |-
            Returned if:
            - The provided page does not exist
            - The user does not have permissions to view the page
            - The user does not have the needed permissions to delete a page in the provided space
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - delete:page:confluence
      summary: Delete page
      tags:
      - Page
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - delete:page:confluence
      x-atlassian-connect-scope: DELETE
    get:
      description: |-
        Returns a specific page.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the page and its corresponding space.
      operationId: getPageById
      parameters:
      - description: "The ID of the page to be returned. If you don't know the page\
          \ ID, use Get pages and filter the results."
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "The content format types to be returned in the `body` field\
          \ of the response. If available, the representation will be available under\
          \ a response field of the same name under the `body` field."
        explode: true
        in: query
        name: body-format
        required: false
        schema:
          $ref: '#/components/schemas/PrimaryBodyRepresentation'
        style: form
      - description: Retrieve the draft version of this page.
        explode: true
        in: query
        name: get-draft
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: Allows you to retrieve a previously published version. Specify
          the previous version's number to retrieve its details.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
          description: Returned if the requested page is returned.
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            requested page or the page was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:page:confluence
      summary: Get page by id
      tags:
      - Page
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:page:confluence
      x-atlassian-connect-scope: READ
    put:
      description: |-
        Update a page by id.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the page and its corresponding space. Permission to update pages in the space.
      operationId: updatePage
      parameters:
      - description: "The ID of the page to be updated. If you don't know the page\
          \ ID, use Get Pages and filter the results."
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/PageUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Page'
          description: Returned if the requested page is successfully updated.
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          description: |-
            Returned if:
            - The provided page does not exist
            - The user does not have permissions to view the page
            - The user does not have the needed permissions to update a page in the provided space
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - write:page:confluence
      summary: Update page
      tags:
      - Page
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - write:page:confluence
      x-atlassian-connect-scope: WRITE
  /pages/{id}/attachments:
    get:
      description: |-
        Returns the attachments of specific page. The number of results is limited by the `limit` parameter and additional results (if available)
        will be available through the `next` URL present in the `Link` response header.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the content of the page and its corresponding space.
      operationId: getPageAttachments
      parameters:
      - description: The ID of the page for which attachments should be returned.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Used to sort the result by a particular field.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          $ref: '#/components/schemas/AttachmentSortOrder'
        style: form
      - description: "Used for pagination, this opaque cursor will be returned in\
          \ the `next` URL in the `Link` response header. Use the relative URL in\
          \ the `Link` header to retrieve the `next` set of results."
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: Filters on the mediaType of attachments. Only one may be specified.
        explode: true
        in: query
        name: mediaType
        required: false
        schema:
          type: string
        style: form
      - description: Filters on the file-name of attachments. Only one may be specified.
        explode: true
        in: query
        name: filename
        required: false
        schema:
          type: string
        style: form
      - description: "Maximum number of attachments per result to return. If more\
          \ results exist, use the `Link` header to retrieve a relative URL that will\
          \ return the next set of results."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 50
          format: int32
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiEntityResult_Attachment_'
          description: Returned if the requested attachments are returned.
          headers:
            Link:
              description: |
                Used for pagination. This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel="next" would be the URL necessary to get the next page of information. If there are no additional results, this header will not be returned. Example response header format: `Link: </wiki/api/v2/pages/<id>/attachments?cursor=<opaque cursor token>>; rel="next"`
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            requested page or the page was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:attachment:confluence
      summary: Get attachments for page
      tags:
      - Attachment
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:attachment:confluence
      x-atlassian-connect-scope: READ
  /pages/{id}/custom-content:
    get:
      description: |-
        Returns all custom content for a given type within a given page. The number of results is limited by the `limit` parameter and additional results (if available)
        will be available through the `next` URL present in the `Link` response header.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the custom content, the container of the custom content (page), and the corresponding space.
      operationId: getCustomContentByTypeInPage
      parameters:
      - description: The ID of the page for which custom content should be returned.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "The type of custom content being requested. See: https://developer.atlassian.com/cloud/confluence/custom-content/\
          \ for additional details on custom content."
        explode: true
        in: query
        name: type
        required: true
        schema:
          type: string
        style: form
      - description: "Used for pagination, this opaque cursor will be returned in\
          \ the `next` URL in the `Link` response header. Use the relative URL in\
          \ the `Link` header to retrieve the `next` set of results."
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: "Maximum number of pages per result to return. If more results\
          \ exist, use the `Link` header to retrieve a relative URL that will return\
          \ the next set of results."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          format: int32
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: |-
          The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field.

          Note: If the custom content body type is `storage`, the `storage` and `atlas_doc_format` body formats are able to be returned. If the custom content body type is `raw`, only the `raw` body format is able to be returned.
        explode: true
        in: query
        name: body-format
        required: false
        schema:
          $ref: '#/components/schemas/CustomContentBodyRepresentation'
        style: form
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiEntityResult_CustomContent_'
          description: Returned if the requested custom content is returned.
          headers:
            Link:
              description: |
                Used for pagination. This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel="next" would be the URL necessary to get the next page of information. If there are no additional results, this header will not be returned. Example response header format: `Link: </wiki/api/v2/pages/{id}/custom-content?cursor=<opaque cursor token>>; rel="next"`
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          description: "Returned if the given page is not found. Returned if the type\
            \ of custom content is not found. Note, this is distinct from the type\
            \ being present, but no instances of the type, which would be a 200 with\
            \ empty results."
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:custom-content:confluence
      summary: Get custom content by type in page
      tags:
      - Custom Content
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:custom-content:confluence
      x-atlassian-connect-scope: READ
  /pages/{id}/labels:
    get:
      description: |-
        Returns the labels of specific page. The number of results is limited by the `limit` parameter and additional results (if available)
        will be available through the `next` URL present in the `Link` response header.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the content of the page and its corresponding space.
      operationId: getPageLabels
      parameters:
      - description: The ID of the page for which labels should be returned.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Filter the results to labels based on their prefix.
        explode: true
        in: query
        name: prefix
        required: false
        schema:
          enum:
          - my
          - team
          - global
          - system
          type: string
        style: form
      - description: Used to sort the result by a particular field.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            $ref: '#/components/schemas/LabelSortOrder'
          type: array
        style: form
      - description: "Used for pagination, this opaque cursor will be returned in\
          \ the `next` URL in the `Link` response header. Use the relative URL in\
          \ the `Link` header to retrieve the `next` set of results."
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: "Maximum number of labels per result to return. If more results\
          \ exist, use the `Link` header to retrieve a relative URL that will return\
          \ the next set of results."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          format: int32
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiEntityResult_Label_'
          description: Returned if the requested labels are returned.
          headers:
            Link:
              description: |
                Used for pagination. This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel="next" would be the URL necessary to get the next page of information. If there are no additional results, this header will not be returned. Example response header format: `Link: </wiki/api/v2/pages/<id>/labels?cursor=<opaque cursor token>>; rel="next"`
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            requested page or the page was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:page:confluence
      summary: Get labels for page
      tags:
      - Label
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:page:confluence
      x-atlassian-connect-scope: READ
  /pages/{page-id}/properties:
    get:
      description: |-
        Retrieves Content Properties tied to a specified page.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the page.
      operationId: getPageContentProperties
      parameters:
      - description: The ID of the page for which content properties should be returned.
        explode: false
        in: path
        name: page-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Filters the response to return a specific content property with
          matching key (case sensitive).
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: Used to sort the result by a particular field.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          $ref: '#/components/schemas/ContentPropertySortOrder'
        style: form
      - description: "Used for pagination, this opaque cursor will be returned in\
          \ the `next` URL in the `Link` response header. Use the relative URL in\
          \ the `Link` header to retrieve the `next` set of results."
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: "Maximum number of attachments per result to return. If more\
          \ results exist, use the `Link` header to retrieve a relative URL that will\
          \ return the next set of results."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          format: int32
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiEntityResult_ContentProperty_'
          description: Returned if the requested content properties are successfully
            retrieved.
          headers:
            Link:
              description: |
                Used for pagination. This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel="next" would be the URL necessary to get the next page of information. If there are no additional results, this header will not be returned. Example response header format: `Link: </wiki/api/v2/pages/<page-id>/properties?cursor=<opaque cursor token>>; rel="next"`
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            specified page or the page was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:page:confluence
      summary: Get content properties for page
      tags:
      - Content Properties
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:page:confluence
      x-atlassian-connect-scope: READ
    post:
      description: |-
        Creates a new page property.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to update the page.
      operationId: createPageProperty
      parameters:
      - description: The ID of the page to create a property for.
        explode: false
        in: path
        name: page-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentPropertyCreateRequest'
        description: The page property to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentProperty'
          description: Returned if the page property was created successfully.
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            specified page or the page was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:page:confluence
        - write:page:confluence
      summary: Create page property
      tags:
      - Content Properties
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:page:confluence
        - write:page:confluence
      x-atlassian-connect-scope: WRITE
  /pages/{page-id}/properties/{property-id}:
    delete:
      description: "Deletes a page property by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw)\
        \ required**:\nPermission to edit the page."
      operationId: deletePagePropertyById
      parameters:
      - description: The ID of the page the property belongs to.
        explode: false
        in: path
        name: page-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: The ID of the property to be deleted.
        explode: false
        in: path
        name: property-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: Returned if the page property was deleted successfully.
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            specified page or the page was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:page:confluence
        - write:page:confluence
      summary: Delete page property by id
      tags:
      - Content Properties
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:page:confluence
        - write:page:confluence
      x-atlassian-connect-scope: WRITE
    get:
      description: |-
        Retrieves a specific Content Property by ID that is attached to a specified page.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the page.
      operationId: getPageContentPropertiesById
      parameters:
      - description: The ID of the page for which content properties should be returned.
        explode: false
        in: path
        name: page-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: The ID of the content property being requested.
        explode: false
        in: path
        name: property-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentProperty'
          description: Returned if the requested content property is successfully
            retrieved.
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            specified page, the page was not found, or the property was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:page:confluence
      summary: Get content property for page by id
      tags:
      - Content Properties
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:page:confluence
      x-atlassian-connect-scope: READ
    put:
      description: "Update a page property by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw)\
        \ required**:\nPermission to edit the page."
      operationId: updatePagePropertyById
      parameters:
      - description: The ID of the page the property belongs to.
        explode: false
        in: path
        name: page-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: The ID of the property to be updated.
        explode: false
        in: path
        name: property-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentPropertyUpdateRequest'
        description: The page property to be updated.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentProperty'
          description: Returned if the page property was updated successfully.
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            specified page or the page was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:page:confluence
        - write:page:confluence
      summary: Update page property by id
      tags:
      - Content Properties
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:page:confluence
        - write:page:confluence
      x-atlassian-connect-scope: WRITE
  /pages/{id}/versions:
    get:
      description: |-
        Returns the versions of specific page.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the page and its corresponding space.
      operationId: getPageVersions
      parameters:
      - description: "The ID of the page to be queried for its versions. If you don't\
          \ know the page ID, use Get pages and filter the results."
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "The content format types to be returned in the `body` field\
          \ of the response. If available, the representation will be available under\
          \ a response field of the same name under the `body` field."
        explode: true
        in: query
        name: body-format
        required: false
        schema:
          $ref: '#/components/schemas/PrimaryBodyRepresentation'
        style: form
      - description: "Used for pagination, this opaque cursor will be returned in\
          \ the `next` URL in the `Link` response header. Use the relative URL in\
          \ the `Link` header to retrieve the `next` set of results."
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: "Maximum number of versions per result to return. If more results\
          \ exist, use the `Link` header to retrieve a relative URL that will return\
          \ the next set of results."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          format: int32
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: Used to sort the result by a particular field.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          $ref: '#/components/schemas/VersionSortOrder'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiEntityResult_Version__2'
          description: Returned if the requested page versions are returned.
          headers:
            Link:
              description: |
                Used for pagination. This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel="next" would be the URL necessary to get the next page of information. If there are no additional results, this header will not be returned. Example response header format: `Link: </wiki/api/v2/pages/<id>/versions?cursor=<opaque cursor token>>; rel="next"`
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            requested page or the page was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:page:confluence
      summary: Get page versions
      tags:
      - Version
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:page:confluence
      x-atlassian-connect-scope: READ
  /pages/{page-id}/versions/{version-number}:
    get:
      description: |-
        Retrieves version details for the specified page and version number.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the page.
      operationId: getPageVersionDetails
      parameters:
      - description: The ID of the page for which version details should be returned.
        explode: false
        in: path
        name: page-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: The version number of the page to be returned.
        explode: false
        in: path
        name: version-number
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedVersion'
          description: Returned if the requested version details are successfully
            retrieved.
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            specified page, the page was not found, or the version number does not exist.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:page:confluence
      summary: Get version details for page version
      tags:
      - Version
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:page:confluence
      x-atlassian-connect-scope: READ
  /custom-content/{custom-content-id}/versions:
    get:
      description: |-
        Returns the versions of specific custom content.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the custom content and its corresponding page and space.
      operationId: getCustomContentVersions
      parameters:
      - description: "The ID of the custom content to be queried for its versions.\
          \ If you don't know the custom content ID, use Get custom-content by type\
          \ and filter the results."
        explode: false
        in: path
        name: custom-content-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "The content format types to be returned in the `body` field\
          \ of the response. If available, the representation will be available under\
          \ a response field of the same name under the `body` field."
        explode: true
        in: query
        name: body-format
        required: false
        schema:
          $ref: '#/components/schemas/PrimaryBodyRepresentation'
        style: form
      - description: "Used for pagination, this opaque cursor will be returned in\
          \ the `next` URL in the `Link` response header. Use the relative URL in\
          \ the `Link` header to retrieve the `next` set of results."
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: "Maximum number of versions per result to return. If more results\
          \ exist, use the `Link` header to retrieve a relative URL that will return\
          \ the next set of results."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          format: int32
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: Used to sort the result by a particular field.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          $ref: '#/components/schemas/VersionSortOrder'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiEntityResult_Version__3'
          description: Returned if the requested custom content versions are returned.
          headers:
            Link:
              description: |
                Used for pagination. This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel="next" would be the URL necessary to get the next page of information. If there are no additional results, this header will not be returned. Example response header format: `Link: </wiki/api/v2/custom-content/<id>/versions?cursor=<opaque cursor token>>; rel="next"`
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            requested custom content or the custom content was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:custom-content:confluence
      summary: Get custom content versions
      tags:
      - Version
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:custom-content:confluence
      x-atlassian-connect-scope: READ
  /custom-content/{custom-content-id}/versions/{version-number}:
    get:
      description: |-
        Retrieves version details for the specified custom content and version number.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the page.
      operationId: getCustomContentVersionDetails
      parameters:
      - description: The ID of the custom content for which version details should
          be returned.
        explode: false
        in: path
        name: custom-content-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: The version number of the custom content to be returned.
        explode: false
        in: path
        name: version-number
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedVersion'
          description: Returned if the requested version details are successfully
            retrieved.
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            specified custom content, the custom content was not found, or the version number does not exist.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:custom-content:confluence
      summary: Get version details for custom content version
      tags:
      - Version
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:custom-content:confluence
      x-atlassian-connect-scope: READ
  /spaces:
    get:
      description: |-
        Returns all spaces. The results will be sorted by id ascending. The number of results is limited by the `limit` parameter and
        additional results (if available) will be available through the `next` URL present in the `Link` response header.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to access the Confluence site ('Can use' global permission).
        Only spaces that the user has permission to view will be returned.
      operationId: getSpaces
      parameters:
      - description: Filter the results to spaces based on their IDs. Multiple IDs
          can be specified as a comma-separated list.
        explode: true
        in: query
        name: ids
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: Filter the results to spaces based on their keys. Multiple keys
          can be specified as a comma-separated list.
        explode: true
        in: query
        name: keys
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filter the results to spaces based on their type.
        explode: true
        in: query
        name: type
        required: false
        schema:
          enum:
          - global
          - personal
          type: string
        style: form
      - description: Filter the results to spaces based on their status.
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - current
          - archived
          type: string
        style: form
      - description: Filter the results to spaces based on their labels. Multiple
          labels can be specified as a comma-separated list.
        explode: true
        in: query
        name: labels
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Used to sort the result by a particular field.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          $ref: '#/components/schemas/SpaceSortOrder'
        style: form
      - description: "The content format type to be returned in the `description`\
          \ field of the response. If available, the representation will be available\
          \ under a response field of the same name under the `description` field."
        explode: true
        in: query
        name: description-format
        required: false
        schema:
          $ref: '#/components/schemas/SpaceDescriptionBodyRepresentation'
        style: form
      - description: "Used for pagination, this opaque cursor will be returned in\
          \ the `next` URL in the `Link` response header. Use the relative URL in\
          \ the `Link` header to retrieve the `next` set of results."
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: "Maximum number of spaces per result to return. If more results\
          \ exist, use the `Link` response header to retrieve a relative URL that\
          \ will return the next set of results."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          format: int32
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiEntityResult_Space_'
          description: Returned if the requested spaces are returned.
          headers:
            Link:
              description: |
                Used for pagination. This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel="next" would be the URL necessary to get the next page of information. If there are no additional results, this header will not be returned. Example response header format: `Link: </wiki/api/v2/spaces?cursor=<opaque cursor token>>; rel="next"`
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:space:confluence
      summary: Get spaces
      tags:
      - Space
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:space:confluence
      x-atlassian-connect-scope: READ
  /spaces/{id}:
    get:
      description: |-
        Returns a specific space.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the space.
      operationId: getSpaceById
      parameters:
      - description: The ID of the space to be returned.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "The content format type to be returned in the `description`\
          \ field of the response. If available, the representation will be available\
          \ under a response field of the same name under the `description` field."
        explode: true
        in: query
        name: description-format
        required: false
        schema:
          $ref: '#/components/schemas/SpaceDescriptionBodyRepresentation'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Space'
          description: Returned if the requested space is returned.
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            requested space or the space was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:space:confluence
      summary: Get space by id
      tags:
      - Space
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:space:confluence
      x-atlassian-connect-scope: READ
  /spaces/{id}/blogposts:
    get:
      description: |-
        Returns all blog posts in a space. The number of results is limited by the `limit` parameter and additional results (if available)
        will be available through the `next` URL present in the `Link` response header.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to access the Confluence site ('Can use' global permission) and view the space.
        Only blog posts that the user has permission to view will be returned.
      operationId: getBlogPostsInSpace
      parameters:
      - description: The ID of the space for which blog posts should be returned.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Filter the results to blog posts based on their status.
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - current
          - deleted
          - trashed
          type: string
        style: form
      - description: "The content format types to be returned in the `body` field\
          \ of the response. If available, the representation will be available under\
          \ a response field of the same name under the `body` field."
        explode: true
        in: query
        name: body-format
        required: false
        schema:
          $ref: '#/components/schemas/PrimaryBodyRepresentation'
        style: form
      - description: "Used for pagination, this opaque cursor will be returned in\
          \ the `next` URL in the `Link` response header. Use the relative URL in\
          \ the `Link` header to retrieve the `next` set of results."
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: "Maximum number of blog posts per result to return. If more results\
          \ exist, use the `Link` header to retrieve a relative URL that will return\
          \ the next set of results."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          format: int32
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiEntityResult_BlogPost_'
          description: Returned if the requested blog posts are returned.
          headers:
            Link:
              description: |
                Used for pagination. This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel="next" would be the URL necessary to get the next page of information. If there are no additional results, this header will not be returned. Example response header format: `Link: </wiki/api/v2/spaces/<id>/blogposts?cursor=<opaque cursor token>>; rel="next"`
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          description: |-
            Returned if the calling user does not have permission to view the
            specified space or the space was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:page:confluence
      summary: Get blog posts in space
      tags:
      - Blog Post
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:page:confluence
      x-atlassian-connect-scope: READ
  /spaces/{id}/custom-content:
    get:
      description: |-
        Returns all custom content for a given type within a given space. The number of results is limited by the `limit` parameter and additional results (if available)
        will be available through the `next` URL present in the `Link` response header.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the custom content and the corresponding space.
      operationId: getCustomContentByTypeInSpace
      parameters:
      - description: The ID of the space for which custom content should be returned.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "The type of custom content being requested. See: https://developer.atlassian.com/cloud/confluence/custom-content/\
          \ for additional details on custom content."
        explode: true
        in: query
        name: type
        required: true
        schema:
          type: string
        style: form
      - description: "Used for pagination, this opaque cursor will be returned in\
          \ the `next` URL in the `Link` response header. Use the relative URL in\
          \ the `Link` header to retrieve the `next` set of results."
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: "Maximum number of pages per result to return. If more results\
          \ exist, use the `Link` header to retrieve a relative URL that will return\
          \ the next set of results."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          format: int32
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: |-
          The content format types to be returned in the `body` field of the response. If available, the representation will be available under a response field of the same name under the `body` field.

          Note: If the custom content body type is `storage`, the `storage` and `atlas_doc_format` body formats are able to be returned. If the custom content body type is `raw`, only the `raw` body format is able to be returned.
        explode: true
        in: query
        name: body-format
        required: false
        schema:
          $ref: '#/components/schemas/CustomContentBodyRepresentation'
        style: form
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiEntityResult_CustomContent_'
          description: Returned if the requested custom content is returned.
          headers:
            Link:
              description: |
                Used for pagination. This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel="next" would be the URL necessary to get the next page of information. If there are no additional results, this header will not be returned. Example response header format: `Link: </wiki/api/v2/spaces/{id}/custom-content?cursor=<opaque cursor token>>; rel="next"`
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          description: "Returned if the space is not found. Returned if the type of\
            \ custom content is not found. Note, this is distinct from the type being\
            \ present, but no instances of the type, which would be a 200 with empty\
            \ results."
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:custom-content:confluence
      summary: Get custom content by type in space
      tags:
      - Custom Content
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:custom-content:confluence
      x-atlassian-connect-scope: READ
  /spaces/{id}/pages:
    get:
      description: |-
        Returns all pages in a space. The number of results is limited by the `limit` parameter and additional results (if available)
        will be available through the `next` URL present in the `Link` response header.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to access the Confluence site ('Can use' global permission) and 'View' permission for the space.
        Only pages that the user has permission to view will be returned.
      operationId: getPagesInSpace
      parameters:
      - description: The ID of the space for which pages should be returned.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Filter the results to pages based on their status.
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - current
          - archived
          - deleted
          - trashed
          type: string
        style: form
      - description: "The content format types to be returned in the `body` field\
          \ of the response. If available, the representation will be available under\
          \ a response field of the same name under the `body` field."
        explode: true
        in: query
        name: body-format
        required: false
        schema:
          $ref: '#/components/schemas/PrimaryBodyRepresentation'
        style: form
      - description: "Used for pagination, this opaque cursor will be returned in\
          \ the `next` URL in the `Link` response header. Use the relative URL in\
          \ the `Link` header to retrieve the `next` set of results."
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: "Maximum number of pages per result to return. If more results\
          \ exist, use the `Link` header to retrieve a relative URL that will return\
          \ the next set of results."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          format: int32
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiEntityResult_Page_'
          description: Returned if the requested pages are returned.
          headers:
            Link:
              description: |
                Used for pagination. This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel="next" would be the URL necessary to get the next page of information. If there are no additional results, this header will not be returned. Example response header format: `Link: </wiki/api/v2/spaces/<id>/pages?cursor=<opaque cursor token>>; rel="next"`
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            specified space or the space was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:page:confluence
      summary: Get pages in space
      tags:
      - Page
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:page:confluence
      x-atlassian-connect-scope: READ
  /spaces/{space-id}/properties:
    get:
      description: |-
        Returns all properties for the given space. Space properties are a key-value storage associated with a space.
        The limit parameter specifies the maximum number of results returned in a single response. Use the `link` response header
        to paginate through additional results.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to access the Confluence site ('Can use' global permission) and 'View' permission for the space.
      operationId: getSpaceProperties
      parameters:
      - description: The ID of the space for which space properties should be returned.
        explode: false
        in: path
        name: space-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "The key of the space property to retrieve. This should be used\
          \ when a user knows the key of their property, but needs to retrieve the\
          \ id for use in other methods."
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: "Used for pagination, this opaque cursor will be returned in\
          \ the `next` URL in the `Link` response header. Use the relative URL in\
          \ the `Link` header to retrieve the `next` set of results."
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: "Maximum number of pages per result to return. If more results\
          \ exist, use the `Link` header to retrieve a relative URL that will return\
          \ the next set of results."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          format: int32
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiEntityResult_SpaceProperty_'
          description: Returned if the requested space properties are returned. `results`
            may be empty if no results were found.
          headers:
            Link:
              explode: false
              schema:
                description: |
                  Used for pagination. This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel="next" would be the URL necessary to get the next page of information. If there are no additional results, this header will not be returned. Example response header format: `Link: </wiki/api/v2/spaces/<id>/properties?cursor=<opaque cursor token>>; rel="next"`
                type: string
              style: simple
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            specified space or the space was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:space:confluence
      summary: Get space properties in space
      tags:
      - Space Properties
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:space:confluence
      x-atlassian-connect-scope: READ
    post:
      description: |-
        Creates a new space property.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to access the Confluence site ('Can use' global permission) and 'Admin' permission for the space.
      operationId: createSpaceProperty
      parameters:
      - description: The ID of the space for which space properties should be returned.
        explode: false
        in: path
        name: space-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpacePropertyCreateRequest'
        description: The space property to be created
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpaceProperty'
          description: Returned if the space property was created successfully.
          headers:
            location:
              explode: false
              schema:
                description: |
                  Returns the URL at which the space property is retrievable.
                type: string
              style: simple
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            specified space or the space was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:space:confluence
        - write:space:confluence
      summary: Create space property in space
      tags:
      - Space Properties
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:space:confluence
        - write:space:confluence
      x-atlassian-connect-scope: WRITE
  /spaces/{space-id}/properties/{property-id}:
    delete:
      description: "Deletes a space property by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw)\
        \ required**:\nPermission to access the Confluence site ('Can use' global\
        \ permission) and 'Admin' permission for the space."
      operationId: deleteSpacePropertyById
      parameters:
      - description: The ID of the space the property belongs to.
        explode: false
        in: path
        name: space-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: The ID of the property to be deleted.
        explode: false
        in: path
        name: property-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: Returned if the space property was deleted successfully.
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            specified space or the space was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:space:confluence
        - write:space:confluence
      summary: Delete space property by id
      tags:
      - Space Properties
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:space:confluence
        - write:space:confluence
      x-atlassian-connect-scope: WRITE
    get:
      description: "Retrieve a space property by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw)\
        \ required**:\nPermission to access the Confluence site ('Can use' global\
        \ permission) and 'View' permission for the space."
      operationId: getSpacePropertyById
      parameters:
      - description: The ID of the space the property belongs to.
        explode: false
        in: path
        name: space-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: The ID of the property to be retrieved.
        explode: false
        in: path
        name: property-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpaceProperty'
          description: Returned if the space property was retrieved.
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            specified space or the space was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:space:confluence
      summary: Get space property by id
      tags:
      - Space Properties
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:space:confluence
      x-atlassian-connect-scope: READ
    put:
      description: "Update a space property by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw)\
        \ required**:\nPermission to access the Confluence site ('Can use' global\
        \ permission) and 'Admin' permission for the space."
      operationId: updateSpacePropertyById
      parameters:
      - description: The ID of the space the property belongs to.
        explode: false
        in: path
        name: space-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: The ID of the property to be updated.
        explode: false
        in: path
        name: property-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SpacePropertyUpdateRequest'
        description: The space property to be updated.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SpaceProperty'
          description: Returned if the space property was updated successfully.
          headers:
            location:
              explode: false
              schema:
                description: |
                  Returns the URL at which the space property is retrievable.
                type: string
              style: simple
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            specified space or the space was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:space:confluence
        - write:space:confluence
      summary: Update space property by id
      tags:
      - Space Properties
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:space:confluence
        - write:space:confluence
      x-atlassian-connect-scope: WRITE
  /pages/{id}/footer-comments:
    get:
      description: |-
        Returns the root footer comments of specific page. The number of results is limited by the `limit` parameter and additional results (if available)
        will be available through the `next` URL present in the `Link` response header.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the content of the page and its corresponding space.
      operationId: getPageFooterComments
      parameters:
      - description: The ID of the page for which footer comments should be returned.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "The content format type to be returned in the `body` field of\
          \ the response. If available, the representation will be available under\
          \ a response field of the same name under the `body` field."
        explode: true
        in: query
        name: body-format
        required: false
        schema:
          $ref: '#/components/schemas/PrimaryBodyRepresentation'
        style: form
      - description: Used to sort the result by a particular field.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          $ref: '#/components/schemas/CommentSortOrder'
        style: form
      - description: "Used for pagination, this opaque cursor will be returned in\
          \ the `next` URL in the `Link` response header. Use the relative URL in\
          \ the `Link` header to retrieve the `next` set of results."
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: "Maximum number of footer comments per result to return. If more\
          \ results exist, use the `Link` header to retrieve a relative URL that will\
          \ return the next set of results."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          format: int32
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiEntityResult_PageCommentModel_'
          description: Returned if the requested footer comments are returned.
          headers:
            Link:
              description: |
                Used for pagination. This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel="next" would be the URL necessary to get the next page of information. If there are no additional results, this header will not be returned. Example response header format: `Link: </wiki/api/v2/pages/<id>/footer-comments?cursor=<opaque cursor token>>; rel="next"`
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            requested page or the page was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:comment:confluence
      summary: Get footer comments for page
      tags:
      - Comment
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:comment:confluence
      x-atlassian-connect-scope: READ
  /pages/{id}/inline-comments:
    get:
      description: |-
        Returns the root inline comments of specific page. The number of results is limited by the `limit` parameter and additional results (if available)
        will be available through the `next` URL present in the `Link` response header.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the content of the page and its corresponding space.
      operationId: getPageInlineComments
      parameters:
      - description: The ID of the page for which inline comments should be returned.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "The content format type to be returned in the `body` field of\
          \ the response. If available, the representation will be available under\
          \ a response field of the same name under the `body` field."
        explode: true
        in: query
        name: body-format
        required: false
        schema:
          $ref: '#/components/schemas/PrimaryBodyRepresentation'
        style: form
      - description: Used to sort the result by a particular field.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          $ref: '#/components/schemas/CommentSortOrder'
        style: form
      - description: "Used for pagination, this opaque cursor will be returned in\
          \ the `next` URL in the `Link` response header. Use the relative URL in\
          \ the `Link` header to retrieve the `next` set of results."
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: "Maximum number of inline comments per result to return. If more\
          \ results exist, use the `Link` header to retrieve a relative URL that will\
          \ return the next set of results."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          format: int32
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiEntityResult_PageInlineCommentModel_'
          description: Returned if the requested inline comments are returned.
          headers:
            Link:
              description: |
                Used for pagination. This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel="next" would be the URL necessary to get the next page of information. If there are no additional results, this header will not be returned. Example response header format: `Link: </wiki/api/v2/pages/<id>/inline-comments?cursor=<opaque cursor token>>; rel="next"`
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            requested page or the page was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:comment:confluence
      summary: Get inline comments for page
      tags:
      - Comment
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:comment:confluence
      x-atlassian-connect-scope: READ
  /blogposts/{id}/footer-comments:
    get:
      description: |-
        Returns the root footer comments of specific blog post. The number of results is limited by the `limit` parameter and additional results (if available)
        will be available through the `next` URL present in the `Link` response header.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the content of the blog post and its corresponding space.
      operationId: getBlogPostFooterComments
      parameters:
      - description: The ID of the blog post for which footer comments should be returned.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "The content format type to be returned in the `body` field of\
          \ the response. If available, the representation will be available under\
          \ a response field of the same name under the `body` field."
        explode: true
        in: query
        name: body-format
        required: false
        schema:
          $ref: '#/components/schemas/PrimaryBodyRepresentation'
        style: form
      - description: Used to sort the result by a particular field.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          $ref: '#/components/schemas/CommentSortOrder'
        style: form
      - description: "Used for pagination, this opaque cursor will be returned in\
          \ the `next` URL in the `Link` response header. Use the relative URL in\
          \ the `Link` header to retrieve the `next` set of results."
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: "Maximum number of footer comments per result to return. If more\
          \ results exist, use the `Link` header to retrieve a relative URL that will\
          \ return the next set of results."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          format: int32
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiEntityResult_BlogPostCommentModel_'
          description: Returned if the requested footer comments are returned.
          headers:
            Link:
              description: |
                Used for pagination. This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel="next" would be the URL necessary to get the next page of information. If there are no additional results, this header will not be returned. Example response header format: `Link: </wiki/api/v2/blogposts/<id>/footer-comments?cursor=<opaque cursor token>>; rel="next"`
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            requested blog post or the blog post was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:comment:confluence
      summary: Get footer comments for blog post
      tags:
      - Comment
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:comment:confluence
      x-atlassian-connect-scope: READ
  /blogposts/{id}/inline-comments:
    get:
      description: |-
        Returns the root inline comments of specific blog post. The number of results is limited by the `limit` parameter and additional results (if available)
        will be available through the `next` URL present in the `Link` response header.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the content of the blog post and its corresponding space.
      operationId: getBlogPostInlineComments
      parameters:
      - description: The ID of the blog post for which inline comments should be returned.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "The content format type to be returned in the `body` field of\
          \ the response. If available, the representation will be available under\
          \ a response field of the same name under the `body` field."
        explode: true
        in: query
        name: body-format
        required: false
        schema:
          $ref: '#/components/schemas/PrimaryBodyRepresentation'
        style: form
      - description: Used to sort the result by a particular field.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          $ref: '#/components/schemas/CommentSortOrder'
        style: form
      - description: "Used for pagination, this opaque cursor will be returned in\
          \ the `next` URL in the `Link` response header. Use the relative URL in\
          \ the `Link` header to retrieve the `next` set of results."
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: "Maximum number of inline comments per result to return. If more\
          \ results exist, use the `Link` header to retrieve a relative URL that will\
          \ return the next set of results."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          format: int32
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiEntityResult_BlogPostInlineCommentModel_'
          description: Returned if the requested inline comments are returned.
          headers:
            Link:
              description: |
                Used for pagination. This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel="next" would be the URL necessary to get the next page of information. If there are no additional results, this header will not be returned. Example response header format: `Link: </wiki/api/v2/blogposts/<id>/inline-comments?cursor=<opaque cursor token>>; rel="next"`
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            requested blog post or the blog post was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:comment:confluence
      summary: Get inline comments for blog post
      tags:
      - Comment
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:comment:confluence
      x-atlassian-connect-scope: READ
  /footer-comments:
    post:
      description: |-
        Create a footer comment. This can be at the top level (specifying pageId or blogPostId in the request body)
        or as a reply (specifying parentCommentId in the request body).

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the content of the page or blogpost and its corresponding space. Permission to create comments in the space.
      operationId: createFooterComment
      parameters:
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateFooterCommentModel'
        description: The footer comment to be created
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FooterCommentModel'
          description: Returned if the footer comment is created.
          headers:
            location:
              description: |
                Returns the URL at which the created footer comment is retrievable.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content: {}
          description: Returned if an invalid request is provided
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if:
            - The page/blog post was not found
            - The calling user does not have permission to view the parent page/blog post
            - The user is forbidden from creating a comment tied to a resource they are allowed to view
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - write:comment:confluence
      summary: Create footer comment
      tags:
      - Comment
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - write:comment:confluence
      x-atlassian-connect-scope: WRITE
  /footer-comments/{comment-id}:
    delete:
      description: |-
        Deletes a footer comment. This is a permanent deletion and cannot be reverted.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the content of the page or blogpost and its corresponding space. Permission to delete comments in the space.
      operationId: deleteFooterComment
      parameters:
      - description: The ID of the comment to be retrieved.
        explode: false
        in: path
        name: comment-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: Returned if the footer comment is deleted.
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          description: |-
            Returned if:
            - The comment was not found
            - The calling user does not have permission to view the comment
            - The user is forbidden from deleting a comment tied to a resource they are allowed to view
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - delete:comment:confluence
      summary: Delete footer comment
      tags:
      - Comment
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - delete:comment:confluence
      x-atlassian-connect-scope: DELETE
    get:
      description: |-
        Retrieves a footer comment by id

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the content of the page or blogpost and its corresponding space.
      operationId: getFooterCommentById
      parameters:
      - description: The ID of the comment to be retrieved.
        explode: false
        in: path
        name: comment-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "The content format type to be returned in the `body` field of\
          \ the response. If available, the representation will be available under\
          \ a response field of the same name under the `body` field."
        explode: true
        in: query
        name: body-format
        required: false
        schema:
          $ref: '#/components/schemas/PrimaryBodyRepresentation'
        style: form
      - description: Allows you to retrieve a previously published version. Specify
          the previous version's number to retrieve its details.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FooterCommentModel'
          description: Returned if the footer comment is successfully retrieved.
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            comment or the comment was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:comment:confluence
      summary: Get footer comment by id
      tags:
      - Comment
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:comment:confluence
      x-atlassian-connect-scope: READ
    put:
      description: |-
        Update a footer comment. This can be used to update the body text of a comment.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the content of the page or blogpost and its corresponding space. Permission to create comments in the space.
      operationId: updateFooterComment
      parameters:
      - description: The ID of the comment to be retrieved.
        explode: false
        in: path
        name: comment-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateFooterCommentModel'
        description: The footer comment to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FooterCommentModel'
          description: Returned if the footer comment is updated successfully
        "400":
          content: {}
          description: Returned if an invalid request is provided
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          description: |-
            Returned if:
            - The comment was not found
            - The calling user does not have permission to view the comment
            - The user is forbidden from updating a comment tied to a resource they are allowed to view
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - write:comment:confluence
      summary: Update footer comment
      tags:
      - Comment
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - write:comment:confluence
      x-atlassian-connect-scope: WRITE
  /footer-comments/{id}/children:
    get:
      description: |-
        Returns the children footer comments of specific comment. The number of results is limited by the `limit` parameter and additional results (if available)
        will be available through the `next` URL present in the `Link` response header.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the content of the page and its corresponding space.
      operationId: getFooterCommentChildren
      parameters:
      - description: The ID of the parent comment for which footer comment children
          should be returned.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "The content format type to be returned in the `body` field of\
          \ the response. If available, the representation will be available under\
          \ a response field of the same name under the `body` field."
        explode: true
        in: query
        name: body-format
        required: false
        schema:
          $ref: '#/components/schemas/PrimaryBodyRepresentation'
        style: form
      - description: Used to sort the result by a particular field.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          $ref: '#/components/schemas/CommentSortOrder'
        style: form
      - description: "Used for pagination, this opaque cursor will be returned in\
          \ the `next` URL in the `Link` response header. Use the relative URL in\
          \ the `Link` header to retrieve the `next` set of results."
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: "Maximum number of footer comments per result to return. If more\
          \ results exist, use the `Link` header to retrieve a relative URL that will\
          \ return the next set of results."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          format: int32
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiEntityResult_ChildrenCommentModel_'
          description: Returned if the requested footer comments are returned.
          headers:
            Link:
              description: |
                Used for pagination. This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel="next" would be the URL necessary to get the next page of information. If there are no additional results, this header will not be returned. Example response header format: `Link: </wiki/api/v2/footer-comments/<id>/children?cursor=<opaque cursor token>>; rel="next"`
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            parent page/blog post or the page/blog post was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:comment:confluence
      summary: Get children footer comments
      tags:
      - Comment
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:comment:confluence
      x-atlassian-connect-scope: READ
  /footer-comments/{id}/versions:
    get:
      description: |-
        Retrieves the versions of the specified footer comment.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the content of the page or blog post and its corresponding space.
      operationId: getFooterCommentVersions
      parameters:
      - description: The ID of the footer comment for which versions should be returned
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "The content format types to be returned in the `body` field\
          \ of the response. If available, the representation will be available under\
          \ a response field of the same name under the `body` field."
        explode: true
        in: query
        name: body-format
        required: false
        schema:
          $ref: '#/components/schemas/PrimaryBodyRepresentation'
        style: form
      - description: "Used for pagination, this opaque cursor will be returned in\
          \ the `next` URL in the `Link` response header. Use the relative URL in\
          \ the `Link` header to retrieve the `next` set of results."
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: "Maximum number of versions per result to return. If more results\
          \ exist, use the `Link` header to retrieve a relative URL that will return\
          \ the next set of results."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          format: int32
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: Used to sort the result by a particular field.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          $ref: '#/components/schemas/VersionSortOrder'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiEntityResult_Version__4'
          description: Returned if the requested footer comment versions are returned.
          headers:
            Link:
              description: |
                Used for pagination. This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel="next" would be the URL necessary to get the next page of information. If there are no additional results, this header will not be returned. Example response header format: `Link: </wiki/api/v2/footer-comments/<id>/versions?cursor=<opaque cursor token>>; rel="next"`
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the specified page
            or blog post, the footer comment was not found, or the version number does not exist.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:comment:confluence
      summary: Get footer comment versions
      tags:
      - Version
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:comment:confluence
      x-atlassian-connect-scope: READ
  /footer-comments/{id}/versions/{version-number}:
    get:
      description: |-
        Retrieves version details for the specified footer comment version.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the content of the page or blog post and its corresponding space.
      operationId: getFooterCommentVersionDetails
      parameters:
      - description: The ID of the footer comment for which version details should
          be returned.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: The version number of the footer comment to be returned.
        explode: false
        in: path
        name: version-number
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedVersion'
          description: Returned if the requested version details are successfully
            retrieved.
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the specified page
            or blog post, the footer comment was not found, or the version number does not exist.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:comment:confluence
      summary: Get version details for footer comment version
      tags:
      - Version
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:comment:confluence
      x-atlassian-connect-scope: READ
  /inline-comments:
    post:
      description: "Create an inline comment. This can be at the top level (specifying\
        \ pageId or blogPostId in the request body)\nor as a reply (specifying parentCommentId\
        \ in the request body). Note the inlineCommentProperties object in the\nrequest\
        \ body is used to select the text the inline comment should be tied to. This\
        \ is what determines the text \nhighlighting when viewing a page in Confluence.\n\
        \n**[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:\n\
        Permission to view the content of the page or blogpost and its corresponding\
        \ space. Permission to create comments in the space."
      operationId: createInlineComment
      parameters:
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInlineCommentModel'
        description: The inline comment to be created
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineCommentModel'
          description: Returned if the inline comment is created.
          headers:
            location:
              description: |
                Returns the URL at which the created inline comment is retrievable.
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if:
            - The page/blog post was not found
            - The calling user does not have permission to view the parent page/blog post
            - The user is forbidden from creating a comment tied to a resource they are allowed to view
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - write:comment:confluence
      summary: Create inline comment
      tags:
      - Comment
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - write:comment:confluence
      x-atlassian-connect-scope: WRITE
  /inline-comments/{comment-id}:
    delete:
      description: |-
        Deletes an inline comment. This is a permanent deletion and cannot be reverted.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the content of the page or blogpost and its corresponding space. Permission to delete comments in the space.
      operationId: deleteInlineComment
      parameters:
      - description: The ID of the comment to be deleted.
        explode: false
        in: path
        name: comment-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: Returned if the inline comment is deleted.
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if:
            - The comment was not found
            - The calling user does not have permission to view the comment
            - The user is forbidden from deleting a comment tied to a resource they are allowed to view
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - delete:comment:confluence
      summary: Delete inline comment
      tags:
      - Comment
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - delete:comment:confluence
      x-atlassian-connect-scope: DELETE
    get:
      description: |-
        Retrieves an inline comment by id

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the content of the page or blogpost and its corresponding space.
      operationId: getInlineCommentById
      parameters:
      - description: The ID of the comment to be retrieved.
        explode: false
        in: path
        name: comment-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "The content format type to be returned in the `body` field of\
          \ the response. If available, the representation will be available under\
          \ a response field of the same name under the `body` field."
        explode: true
        in: query
        name: body-format
        required: false
        schema:
          $ref: '#/components/schemas/PrimaryBodyRepresentation'
        style: form
      - description: Allows you to retrieve a previously published version. Specify
          the previous version's number to retrieve its details.
        explode: true
        in: query
        name: version
        required: false
        schema:
          type: integer
        style: form
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineCommentModel'
          description: Returned if the inline comment is successfully retrieved.
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            comment or the comment was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:comment:confluence
      summary: Get inline comment by id
      tags:
      - Comment
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:comment:confluence
      x-atlassian-connect-scope: READ
    put:
      description: |-
        Update an inline comment. This can be used to update the body text of a comment and/or to resolve the comment

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the content of the page or blogpost and its corresponding space. Permission to create comments in the space.
      operationId: updateInlineComment
      parameters:
      - description: The ID of the comment to be retrieved.
        explode: false
        in: path
        name: comment-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateInlineCommentModel'
        description: The inline comment to be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InlineCommentModel'
          description: Returned if the inline comment is updated successfully.
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if:
            - The comment was not found
            - The calling user does not have permission to view the comment
            - The user is forbidden from updating a comment tied to a resource they are allowed to view
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - write:comment:confluence
      summary: Update inline comment
      tags:
      - Comment
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - write:comment:confluence
      x-atlassian-connect-scope: WRITE
  /inline-comments/{id}/children:
    get:
      description: |-
        Returns the children inline comments of specific comment. The number of results is limited by the `limit` parameter and additional results (if available)
        will be available through the `next` URL present in the `Link` response header.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the content of the page and its corresponding space.
      operationId: getInlineCommentChildren
      parameters:
      - description: The ID of the parent comment for which inline comment children
          should be returned.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      - description: "The content format type to be returned in the `body` field of\
          \ the response. If available, the representation will be available under\
          \ a response field of the same name under the `body` field."
        explode: true
        in: query
        name: body-format
        required: false
        schema:
          $ref: '#/components/schemas/PrimaryBodyRepresentation'
        style: form
      - description: Used to sort the result by a particular field.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          $ref: '#/components/schemas/CommentSortOrder'
        style: form
      - description: "Used for pagination, this opaque cursor will be returned in\
          \ the `next` URL in the `Link` response header. Use the relative URL in\
          \ the `Link` header to retrieve the `next` set of results."
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: "Maximum number of footer comments per result to return. If more\
          \ results exist, use the `Link` header to retrieve a relative URL that will\
          \ return the next set of results."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          format: int32
          maximum: 250
          minimum: 1
          type: integer
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiEntityResult_InlineCommentChildrenModel_'
          description: Returned if the requested footer comments are returned.
          headers:
            Link:
              description: |
                Used for pagination. This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel="next" would be the URL necessary to get the next page of information. If there are no additional results, this header will not be returned. Example response header format: `Link: </wiki/api/v2/inline-comments/<id>/children?cursor=<opaque cursor token>>; rel="next"`
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            parent page/blog post or the page/blog post was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:comment:confluence
      summary: Get children inline comments
      tags:
      - Comment
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:comment:confluence
      x-atlassian-connect-scope: READ
  /inline-comments/{id}/versions:
    get:
      description: |-
        Retrieves the versions of the specified inline comment.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the content of the page or blog post and its corresponding space.
      operationId: getInlineCommentVersions
      parameters:
      - description: The ID of the inline comment for which versions should be returned
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "The content format types to be returned in the `body` field\
          \ of the response. If available, the representation will be available under\
          \ a response field of the same name under the `body` field."
        explode: true
        in: query
        name: body-format
        required: false
        schema:
          $ref: '#/components/schemas/PrimaryBodyRepresentation'
        style: form
      - description: "Used for pagination, this opaque cursor will be returned in\
          \ the `next` URL in the `Link` response header. Use the relative URL in\
          \ the `Link` header to retrieve the `next` set of results."
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: "Maximum number of versions per result to return. If more results\
          \ exist, use the `Link` header to retrieve a relative URL that will return\
          \ the next set of results."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          format: int32
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: Used to sort the result by a particular field.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          $ref: '#/components/schemas/VersionSortOrder'
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiEntityResult_Version__4'
          description: Returned if the requested inline comment versions are returned.
          headers:
            Link:
              description: |
                Used for pagination. This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel="next" would be the URL necessary to get the next page of information. If there are no additional results, this header will not be returned. Example response header format: `Link: </wiki/api/v2/inline-comments/<id>/versions?cursor=<opaque cursor token>>; rel="next"`
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the specified page
            or blog post, the inline comment was not found, or the version number does not exist.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:comment:confluence
      summary: Get inline comment versions
      tags:
      - Version
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:comment:confluence
      x-atlassian-connect-scope: READ
  /inline-comments/{id}/versions/{version-number}:
    get:
      description: |-
        Retrieves version details for the specified inline comment version.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the content of the page or blog post and its corresponding space.
      operationId: getInlineCommentVersionDetails
      parameters:
      - description: The ID of the inline comment for which version details should
          be returned.
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: The version number of the inline comment to be returned.
        explode: false
        in: path
        name: version-number
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedVersion'
          description: Returned if the requested version details are successfully
            retrieved.
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the specified page
            or blog post, the inline comment was not found, or the version number does not exist.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:comment:confluence
      summary: Get version details for inline comment version
      tags:
      - Version
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:comment:confluence
      x-atlassian-connect-scope: READ
  /comments/{comment-id}/properties:
    get:
      description: |-
        Retrieves Content Properties attached to a specified comment.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the comment.
      operationId: getCommentContentProperties
      parameters:
      - description: The ID of the comment for which content properties should be
          returned.
        explode: false
        in: path
        name: comment-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: Filters the response to return a specific content property with
          matching key (case sensitive).
        explode: true
        in: query
        name: key
        required: false
        schema:
          type: string
        style: form
      - description: Used to sort the result by a particular field.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          $ref: '#/components/schemas/ContentPropertySortOrder'
        style: form
      - description: "Used for pagination, this opaque cursor will be returned in\
          \ the `next` URL in the `Link` response header. Use the relative URL in\
          \ the `Link` header to retrieve the `next` set of results."
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: "Maximum number of attachments per result to return. If more\
          \ results exist, use the `Link` header to retrieve a relative URL that will\
          \ return the next set of results."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          format: int32
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiEntityResult_ContentProperty_'
          description: Returned if the requested content properties are successfully
            retrieved.
          headers:
            Link:
              description: |
                Used for pagination. This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel="next" would be the URL necessary to get the next page of information. If there are no additional results, this header will not be returned. Example response header format: `Link: </wiki/api/v2/comments/<comment-id>/properties?cursor=<opaque cursor token>>; rel="next"`
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            specified comment or the comment was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:comment:confluence
      summary: Get content properties for comment
      tags:
      - Content Properties
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:comment:confluence
      x-atlassian-connect-scope: READ
    post:
      description: |-
        Creates a new comment property.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to update the comment.
      operationId: createCommentProperty
      parameters:
      - description: The ID of the comment to create a property for.
        explode: false
        in: path
        name: comment-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentPropertyCreateRequest'
        description: The comment property to be created
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentProperty'
          description: Returned if the comment property was created successfully.
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            specified page or the page was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:comment:confluence
        - write:comment:confluence
      summary: Create comment property
      tags:
      - Content Properties
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:comment:confluence
        - write:comment:confluence
      x-atlassian-connect-scope: WRITE
  /comments/{comment-id}/properties/{property-id}:
    delete:
      description: "Deletes a comment property by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw)\
        \ required**:\nPermission to edit the comment."
      operationId: deleteCommentPropertyById
      parameters:
      - description: The ID of the comment the property belongs to.
        explode: false
        in: path
        name: comment-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: The ID of the property to be deleted.
        explode: false
        in: path
        name: property-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      responses:
        "204":
          description: Returned if the comment property was deleted successfully.
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            specified comment or the comment was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:comment:confluence
        - write:comment:confluence
      summary: Delete comment property by id
      tags:
      - Content Properties
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:comment:confluence
        - write:comment:confluence
      x-atlassian-connect-scope: WRITE
    get:
      description: |-
        Retrieves a specific Content Property by ID that is attached to a specified comment.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to view the comment.
      operationId: getCommentContentPropertiesById
      parameters:
      - description: The ID of the comment for which content properties should be
          returned.
        explode: false
        in: path
        name: comment-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: The ID of the content property being requested.
        explode: false
        in: path
        name: property-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentProperty'
          description: Returned if the requested content property is successfully
            retrieved.
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            specified comment, the comment was not found, or the property was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:comment:confluence
      summary: Get content property for comment by id
      tags:
      - Content Properties
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:comment:confluence
      x-atlassian-connect-scope: READ
    put:
      description: "Update a comment property by its id. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw)\
        \ required**:\nPermission to edit the comment."
      operationId: updateCommentPropertyById
      parameters:
      - description: The ID of the comment the property belongs to.
        explode: false
        in: path
        name: comment-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: The ID of the property to be updated.
        explode: false
        in: path
        name: property-id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ContentPropertyUpdateRequest'
        description: The comment property to be updated.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ContentProperty'
          description: Returned if the comment property was updated successfully.
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            specified comment or the comment was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:comment:confluence
        - write:comment:confluence
      summary: Update comment property by id
      tags:
      - Content Properties
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:comment:confluence
        - write:comment:confluence
      x-atlassian-connect-scope: WRITE
  /tasks:
    get:
      description: |-
        Returns all tasks. The number of results is limited by the `limit` parameter and additional results (if available)
        will be available through the `next` URL present in the `Link` response header.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to access the Confluence site ('Can use' global permission).
        Only tasks that the user has permission to view will be returned.
      operationId: getTasks
      parameters:
      - description: "The content format types to be returned in the `body` field\
          \ of the response. If available, the representation will be available under\
          \ a response field of the same name under the `body` field."
        explode: true
        in: query
        name: body-format
        required: false
        schema:
          $ref: '#/components/schemas/PrimaryBodyRepresentation'
        style: form
      - description: Specifies whether to include blank tasks in the response. Defaults
          to `true`.
        explode: true
        in: query
        name: include-blank-tasks
        required: false
        schema:
          type: boolean
        style: form
      - description: Filters on the status of the task.
        explode: true
        in: query
        name: status
        required: false
        schema:
          enum:
          - complete
          - incomplete
          type: string
        style: form
      - description: Filters on task ID. Multiple IDs can be specified.
        explode: true
        in: query
        name: task-id
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: Filters on the space ID of the task. Multiple IDs can be specified.
        explode: true
        in: query
        name: space-id
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: Filters on the page ID of the task. Multiple IDs can be specified.
          Note - page and blog post filters can be used in conjunction.
        explode: true
        in: query
        name: page-id
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: Filters on the blog post ID of the task. Multiple IDs can be
          specified. Note - page and blog post filters can be used in conjunction.
        explode: true
        in: query
        name: blogpost-id
        required: false
        schema:
          items:
            format: int64
            type: integer
          type: array
        style: form
      - description: Filters on the Account ID of the user who created this task.
          Multiple IDs can be specified.
        explode: true
        in: query
        name: created-by
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filters on the Account ID of the user to whom this task is assigned.
          Multiple IDs can be specified.
        explode: true
        in: query
        name: assigned-to
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filters on the Account ID of the user who completed this task.
          Multiple IDs can be specified.
        explode: true
        in: query
        name: completed-by
        required: false
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Filters on start of date-time range of task based on creation
          date (inclusive). Input is epoch time in milliseconds.
        explode: true
        in: query
        name: created-at-from
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filters on end of date-time range of task based on creation date
          (inclusive). Input is epoch time in milliseconds.
        explode: true
        in: query
        name: created-at-to
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filters on start of date-time range of task based on due date
          (inclusive). Input is epoch time in milliseconds.
        explode: true
        in: query
        name: due-at-from
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filters on end of date-time range of task based on due date (inclusive).
          Input is epoch time in milliseconds.
        explode: true
        in: query
        name: due-at-to
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filters on start of date-time range of task based on completion
          date (inclusive). Input is epoch time in milliseconds.
        explode: true
        in: query
        name: completed-at-from
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: Filters on end of date-time range of task based on completion
          date (inclusive). Input is epoch time in milliseconds.
        explode: true
        in: query
        name: completed-at-to
        required: false
        schema:
          format: int64
          type: integer
        style: form
      - description: "Used for pagination, this opaque cursor will be returned in\
          \ the `next` URL in the `Link` response header. Use the relative URL in\
          \ the `Link` header to retrieve the `next` set of results."
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: "Maximum number of tasks per result to return. If more results\
          \ exist, use the `Link` header to retrieve a relative URL that will return\
          \ the next set of results."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          format: int32
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiEntityResult_Task_'
          description: Returned if the requested tasks are returned.
          headers:
            Link:
              description: |
                Used for pagination. This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel="next" would be the URL necessary to get the next page of information. If there are no additional results, this header will not be returned. Example response header format: `Link: </wiki/api/v2/tasks?cursor=<opaque cursor token>>; rel="next"`
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:task:confluence
      summary: Get tasks
      tags:
      - Task
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:task:confluence
      x-atlassian-connect-scope: READ
  /tasks/{id}:
    get:
      description: "Returns a specific task. \n\n**[Permissions](https://confluence.atlassian.com/x/_AozKw)\
        \ required**:\nPermission to view the containing page or blog post and its\
        \ corresponding space."
      operationId: getTaskById
      parameters:
      - description: "The ID of the task to be returned. If you don't know the task\
          \ ID, use Get tasks and filter the results."
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "The content format types to be returned in the `body` field\
          \ of the response. If available, the representation will be available under\
          \ a response field of the same name under the `body` field."
        explode: true
        in: query
        name: body-format
        required: false
        schema:
          $ref: '#/components/schemas/PrimaryBodyRepresentation'
        style: form
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: Returned if the requested task is returned.
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          content: {}
          description: |-
            Returned if the calling user does not have permission to view the
            requested task or the task was not found.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:task:confluence
      summary: Get task by id
      tags:
      - Task
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:task:confluence
      x-atlassian-connect-scope: READ
    put:
      description: |-
        Update a task by id.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to edit the containing page or blog post and view its corresponding space.
      operationId: updateTask
      parameters:
      - description: "The ID of the task to be updated. If you don't know the task\
          \ ID, use Get tasks and filter the results."
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      requestBody:
        $ref: '#/components/requestBodies/TaskUpdateRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: Returned if the requested task is updated.
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: Returned if the authentication credentials are incorrect or
            missing from the request.
        "404":
          content: {}
          description: |-
            Returned if:
            - The provided task does not exist
            - The user does not have permissions to view the task
            - The user does not have the needed permissions to update the containing page or blog post in the corresponding space
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - write:task:confluence
      summary: Update task
      tags:
      - Task
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - write:task:confluence
      x-atlassian-connect-scope: WRITE
  /pages/{id}/children:
    get:
      description: |-
        Returns all child pages for given page id. The number of results is limited by the `limit` parameter and additional results (if available)
        will be available through the `next` URL present in the `Link` response header.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to access the Confluence site ('Can use' global permission).
        Only pages that the user has permission to view will be returned.
      operationId: getChildPages
      parameters:
      - description: "The ID of the parent page. If you don't know the page ID, use\
          \ Get pages and filter the results."
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "Used for pagination, this opaque cursor will be returned in\
          \ the `next` URL in the `Link` response header. Use the relative URL in\
          \ the `Link` header to retrieve the `next` set of results."
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: "Maximum number of pages per result to return. If more results\
          \ exist, use the `Link` header to retrieve a relative URL that will return\
          \ the next set of results."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          format: int32
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: Used to sort the result by a particular field.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ChildPageSortOrder'
          type: array
        style: form
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiEntityResult_ChildPage_'
          description: Returned if the requested child pages are returned.
          headers:
            Link:
              description: |
                Used for pagination. This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel="next" would be the URL necessary to get the next page of information. If there are no additional results, this header will not be returned. Example response header format: `Link: </wiki/api/v2/pages/{id}/children?cursor=<opaque cursor token>>; rel="next"`
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:page:confluence
      summary: Get child pages
      tags:
      - Children
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:page:confluence
      x-atlassian-connect-scope: READ
  /custom-content/{id}/children:
    get:
      description: |-
        Returns all child custom content for given custom content id. The number of results is limited by the `limit` parameter and additional results (if available)
        will be available through the `next` URL present in the `Link` response header.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to access the Confluence site ('Can use' global permission).
        Only custom content that the user has permission to view will be returned.
      operationId: getChildCustomContent
      parameters:
      - description: "The ID of the parent custom content. If you don't know the custom\
          \ content ID, use Get custom-content and filter the results."
        explode: false
        in: path
        name: id
        required: true
        schema:
          format: int64
          type: integer
        style: simple
      - description: "Used for pagination, this opaque cursor will be returned in\
          \ the `next` URL in the `Link` response header. Use the relative URL in\
          \ the `Link` header to retrieve the `next` set of results."
        explode: true
        in: query
        name: cursor
        required: false
        schema:
          type: string
        style: form
      - description: "Maximum number of pages per result to return. If more results\
          \ exist, use the `Link` header to retrieve a relative URL that will return\
          \ the next set of results."
        explode: true
        in: query
        name: limit
        required: false
        schema:
          default: 25
          format: int32
          maximum: 250
          minimum: 1
          type: integer
        style: form
      - description: Used to sort the result by a particular field.
        explode: true
        in: query
        name: sort
        required: false
        schema:
          items:
            $ref: '#/components/schemas/ChildCustomContentSortOrder'
          type: array
        style: form
      - description: "Due to JavaScript's max integer representation of 2^53-1, the\
          \ type of any IDs returned in the response body for this endpoint will be\
          \ changed from a numeric type to a string type at the end of the deprecation\
          \ period. In the meantime, this query param can be passed to this endpoint\
          \ to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905)\
          \ for more detail."
        explode: true
        in: query
        name: serialize-ids-as-strings
        required: false
        schema:
          default: false
          type: boolean
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MultiEntityResult_ChildCustomContent_'
          description: Returned if the requested child custom content are returned.
          headers:
            Link:
              description: |
                Used for pagination. This header contains URL(s) within angle brackets and a relation description for each URL, describing how the provided URL relates to the incoming request's URL. For example, rel="next" would be the URL necessary to get the next page of information. If there are no additional results, this header will not be returned. Example response header format: `Link: </wiki/api/v2/custom-content/{id}/children?cursor=<opaque cursor token>>; rel="next"`
              explode: false
              schema:
                type: string
              style: simple
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:custom-content:confluence
      summary: Get child custom content
      tags:
      - Children
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:custom-content:confluence
      x-atlassian-connect-scope: READ
  /user/access/check-access-by-email:
    post:
      description: |-
        Returns the list of emails from the input list that do not have access to site.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to access the Confluence site ('Can use' global permission).
      operationId: checkAccessByEmail
      requestBody:
        $ref: '#/components/requestBodies/CheckAccessOrInviteByEmailRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/checkAccessByEmail_200_response'
          description: Returns object with list of emails without access to site.
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          description: Returned if the calling user does not have permission to check
            access for emails on site.
        "503":
          description: Returned if API is disabled on site
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:configuration:confluence
      summary: Check site access for a list of emails
      tags:
      - User
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:configuration:confluence
      x-atlassian-connect-scope: NONE
      x-experimental: true
  /user/access/invite-by-email:
    post:
      description: |-
        Invite a list of emails to the site.

        **[Permissions](https://confluence.atlassian.com/x/_AozKw) required**:
        Permission to access the Confluence site ('Can use' global permission).
      operationId: inviteByEmail
      requestBody:
        $ref: '#/components/requestBodies/CheckAccessOrInviteByEmailRequest'
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/inviteByEmail_200_response'
          description: Returns object with list of emails without access to site.
        "400":
          content: {}
          description: Returned if an invalid request is provided.
        "401":
          content: {}
          description: |-
            Returned if the authentication credentials are incorrect or missing
            from the request.
        "404":
          description: Returned if the calling user does not have permission to check
            access for emails on site.
        "503":
          description: Returned if API is disabled on site
      security:
      - basicAuth: []
      - oAuthDefinitions:
        - read:configuration:confluence
      summary: Invite a list of emails to the site
      tags:
      - User
      x-atlassian-oauth2-scopes:
      - scheme: oAuthDefinitions
        state: Current
        scopes:
        - read:configuration:confluence
      x-atlassian-connect-scope: NONE
      x-experimental: true
components:
  requestBodies:
    BlogPostCreateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createBlogPost_request'
      required: true
    BlogPostUpdateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateBlogPost_request'
      required: true
    ContentIdToContentTypeRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/convertContentIdsToContentTypes_request'
      required: true
    CustomContentCreateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createCustomContent_request'
      required: true
    CustomContentUpdateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateCustomContent_request'
      required: true
    PageCreateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/createPage_request'
      required: true
    PageUpdateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updatePage_request'
      required: true
    TaskUpdateRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/updateTask_request'
      required: true
    CheckAccessOrInviteByEmailRequest:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/checkAccessByEmail_request'
      required: true
  schemas:
    Attachment:
      example:
        mediaType: mediaType
        blogPostId: null
        title: title
        pageId: null
        customContentId: null
        version:
          createdAt: 2000-01-23T04:56:07.000+00:00
          number: 6
          minorEdit: true
          message: message
          authorId: authorId
        fileSize: 0
        downloadLink: downloadLink
        mediaTypeDescription: mediaTypeDescription
        webuiLink: webuiLink
        comment: comment
        id: id
        status: null
      properties:
        id:
          description: ID of the attachment.
          type: string
        status:
          $ref: '#/components/schemas/ContentStatus'
        title:
          description: Title of the comment.
          type: string
        pageId:
          $ref: '#/components/schemas/Attachment_pageId'
        blogPostId:
          $ref: '#/components/schemas/Attachment_blogPostId'
        customContentId:
          $ref: '#/components/schemas/Attachment_customContentId'
        mediaType:
          description: Media Type for the attachment.
          type: string
        mediaTypeDescription:
          description: Media Type description for the attachment.
          type: string
        comment:
          description: Comment for the attachment.
          type: string
        fileSize:
          description: File size of the attachment.
          format: int64
          type: integer
        webuiLink:
          description: WebUI link of the attachment.
          type: string
        downloadLink:
          description: Download link of the attachment.
          type: string
        version:
          $ref: '#/components/schemas/Version'
      type: object
    BlogPost:
      example:
        spaceId: null
        createdAt: 2000-01-23T04:56:07.000+00:00
        id: null
        title: title
        authorId: authorId
        body:
          atlas_doc_format:
            representation: representation
            value: value
          storage:
            representation: representation
            value: value
        version:
          createdAt: 2000-01-23T04:56:07.000+00:00
          number: 6
          minorEdit: true
          message: message
          authorId: authorId
        status: null
      properties:
        id:
          $ref: '#/components/schemas/BlogPost_id'
        status:
          $ref: '#/components/schemas/ContentStatus'
        title:
          description: Title of the blog post.
          type: string
        spaceId:
          $ref: '#/components/schemas/BlogPost_spaceId'
        authorId:
          description: The account ID of the user who created this blog post originally.
          type: string
        createdAt:
          description: Date and time when the blog post was created. In format "YYYY-MM-DDTHH:mm:ss.sssZ".
          format: date-time
          type: string
        version:
          $ref: '#/components/schemas/Version'
        body:
          $ref: '#/components/schemas/Body'
      type: object
    Body:
      description: Contains fields for each representation type requested.
      example:
        atlas_doc_format:
          representation: representation
          value: value
        storage:
          representation: representation
          value: value
      properties:
        storage:
          $ref: '#/components/schemas/BodyType'
        atlas_doc_format:
          $ref: '#/components/schemas/BodyType'
      type: object
    BodyType:
      example:
        representation: representation
        value: value
      properties:
        representation:
          description: Type of content representation used for the value field.
          type: string
        value:
          description: "Body of the content, in the format found in the representation\
            \ field."
          type: string
      type: object
    BodyRepresentation:
      description: The formats a body can be represented as.
      enum:
      - anonymous_export_view
      - atlas_doc_format
      - dynamic
      - editor
      - editor2
      - export_view
      - plain
      - raw
      - storage
      - styled_view
      - view
      type: string
    PrimaryBodyRepresentation:
      description: The primary formats a body can be represented as. A subset of BodyRepresentation.
        These formats are the only allowed formats in certain use cases.
      enum:
      - storage
      - atlas_doc_format
      type: string
    CustomContentBodyRepresentation:
      description: The formats a custom content body can be represented as. A subset
        of BodyRepresentation.
      enum:
      - raw
      - storage
      - atlas_doc_format
      type: string
    SpaceDescriptionBodyRepresentation:
      description: The formats a space description can be represented as. A subset
        of BodyRepresentation.
      enum:
      - plain
      - view
      type: string
    ContentIdToContentTypeResponse:
      example:
        results:
          key: null
      properties:
        results:
          additionalProperties:
            $ref: '#/components/schemas/ContentIdToContentTypeResponse_results_value'
          description: |-
            JSON object containing all requested content ids as keys and their associated content types as the values.
            Duplicate content ids in the request will be returned under a single key in the response. For built-in content
            types, the enumerations are as specified. Custom content ids will be mapped to their associated type.
          type: object
      type: object
    ContentStatus:
      description: The status of the content.
      enum:
      - current
      - trashed
      - historical
      - deleted
      - any
      - draft
      - archived
      type: string
    OnlyArchivedAndCurrentContentStatus:
      description: The status of the content.
      enum:
      - current
      - archived
      type: string
    ContentProperty:
      example:
        id: null
        value: ""
        version:
          createdAt: 2000-01-23T04:56:07.000+00:00
          number: 6
          minorEdit: true
          message: message
          authorId: authorId
        key: key
      properties:
        id:
          $ref: '#/components/schemas/ContentProperty_id'
        key:
          description: Key of the property
          type: string
        value:
          description: Value of the property. Must be a valid JSON value.
        version:
          $ref: '#/components/schemas/Version'
      type: object
    ContentPropertyCreateRequest:
      example:
        value: ""
        key: key
      properties:
        key:
          description: Key of the content property
          type: string
        value:
          description: Value of the content property.
      type: object
    ContentPropertyUpdateRequest:
      example:
        value: ""
        version:
          number: 0
          message: message
        key: key
      properties:
        key:
          description: Key of the content property
          type: string
        value:
          description: Value of the content property.
        version:
          $ref: '#/components/schemas/ContentPropertyUpdateRequest_version'
      type: object
    CustomContent:
      example:
        spaceId: null
        createdAt: 2000-01-23T04:56:07.000+00:00
        id: null
        blogPostId: null
        type: type
        title: title
        pageId: null
        authorId: authorId
        body:
          atlas_doc_format:
            representation: representation
            value: value
          raw:
            representation: representation
            value: value
          storage:
            representation: representation
            value: value
        customContentId: null
        version:
          createdAt: 2000-01-23T04:56:07.000+00:00
          number: 6
          minorEdit: true
          message: message
          authorId: authorId
        status: null
      properties:
        id:
          $ref: '#/components/schemas/CustomContent_id'
        type:
          description: The type of custom content.
          type: string
        status:
          $ref: '#/components/schemas/ContentStatus'
        title:
          description: Title of the custom content.
          type: string
        spaceId:
          $ref: '#/components/schemas/CustomContent_spaceId'
        pageId:
          $ref: '#/components/schemas/CustomContent_pageId'
        blogPostId:
          $ref: '#/components/schemas/CustomContent_blogPostId'
        customContentId:
          $ref: '#/components/schemas/CustomContent_customContentId'
        authorId:
          description: The account ID of the user who created this custom content
            originally.
          type: string
        createdAt:
          description: Date and time when the custom content was created. In format
            "YYYY-MM-DDTHH:mm:ss.sssZ".
          format: date-time
          type: string
        body:
          $ref: '#/components/schemas/CustomContentBody'
        version:
          $ref: '#/components/schemas/Version'
      type: object
    CustomContentBody:
      description: Contains fields for each representation type requested.
      example:
        atlas_doc_format:
          representation: representation
          value: value
        raw:
          representation: representation
          value: value
        storage:
          representation: representation
          value: value
      properties:
        raw:
          $ref: '#/components/schemas/BodyType'
        storage:
          $ref: '#/components/schemas/BodyType'
        atlas_doc_format:
          $ref: '#/components/schemas/BodyType'
      type: object
    DetailedVersion:
      example:
        number: 0
        createdAt: 2000-01-23T04:56:07.000+00:00
        minorEdit: true
        contentTypeModified: true
        collaborators:
        - collaborators
        - collaborators
        authorId: authorId
        message: message
        nextVersion: 1
        prevVersion: 6
      properties:
        number:
          description: The current version number.
          format: int32
          type: integer
        authorId:
          description: The account ID of the user who created this version.
          type: string
        message:
          description: Message associated with the current version.
          type: string
        createdAt:
          description: Date and time when the version was created. In format "YYYY-MM-DDTHH:mm:ss.sssZ".
          format: date-time
          type: string
        minorEdit:
          description: Describes if this version is a minor version. Email notifications
            and activity stream updates are not created for minor versions.
          type: boolean
        contentTypeModified:
          description: Describes if the content type is modified in this version (e.g.
            page to blog)
          type: boolean
        collaborators:
          description: The account IDs of users that collaborated on this version.
          items:
            type: string
          type: array
        prevVersion:
          description: The version number of the version prior to this current content
            update.
          format: int32
          type: integer
        nextVersion:
          description: The version number of the version after this current content
            update.
          format: int32
          type: integer
      type: object
    Label:
      example:
        prefix: prefix
        name: name
        id: null
      properties:
        id:
          $ref: '#/components/schemas/Label_id'
        name:
          description: Name of the label.
          type: string
        prefix:
          description: Prefix of the label.
          type: string
      type: object
    Page:
      example:
        spaceId: null
        createdAt: 2000-01-23T04:56:07.000+00:00
        id: null
        title: title
        authorId: authorId
        body:
          atlas_doc_format:
            representation: representation
            value: value
          storage:
            representation: representation
            value: value
        version:
          createdAt: 2000-01-23T04:56:07.000+00:00
          number: 6
          minorEdit: true
          message: message
          authorId: authorId
        parentId: null
        status: null
      properties:
        id:
          $ref: '#/components/schemas/Page_id'
        status:
          $ref: '#/components/schemas/ContentStatus'
        title:
          description: Title of the page.
          type: string
        spaceId:
          $ref: '#/components/schemas/Page_spaceId'
        parentId:
          $ref: '#/components/schemas/Page_parentId'
        authorId:
          description: The account ID of the user who created this page originally.
          type: string
        createdAt:
          description: Date and time when the page was created. In format "YYYY-MM-DDTHH:mm:ss.sssZ".
          format: date-time
          type: string
        version:
          $ref: '#/components/schemas/Version'
        body:
          $ref: '#/components/schemas/Body'
      type: object
    PageBodyWrite:
      properties:
        representation:
          description: Type of content representation used for the value field.
          enum:
          - storage
          - atlas_doc_format
          - wiki
          type: string
        value:
          description: "Body of the page, in the format found in the representation\
            \ field."
          type: string
      type: object
    PageNestedBodyWrite:
      description: |-
        Body of the page. Only one body format should be specified as the property
        for this object, e.g. `storage`.
      properties:
        storage:
          $ref: '#/components/schemas/PageBodyWrite'
        atlas_doc_format:
          $ref: '#/components/schemas/PageBodyWrite'
        wiki:
          $ref: '#/components/schemas/PageBodyWrite'
      type: object
    BlogPostBodyWrite:
      properties:
        representation:
          description: Type of content representation used for the value field.
          enum:
          - storage
          - atlas_doc_format
          - wiki
          type: string
        value:
          description: "Body of the blog post, in the format found in the representation\
            \ field."
          type: string
      type: object
    BlogPostNestedBodyWrite:
      description: |-
        Body of the blog post. Only one body format should be specified as the property
        for this object, e.g. `storage`.
      properties:
        storage:
          $ref: '#/components/schemas/BlogPostBodyWrite'
        atlas_doc_format:
          $ref: '#/components/schemas/BlogPostBodyWrite'
        wiki:
          $ref: '#/components/schemas/BlogPostBodyWrite'
      type: object
    CommentBodyWrite:
      properties:
        representation:
          description: Type of content representation used for the value field.
          enum:
          - storage
          - atlas_doc_format
          - wiki
          type: string
        value:
          description: "Body of the comment, in the format found in the representation\
            \ field."
          type: string
      type: object
    CommentNestedBodyWrite:
      description: |-
        Body of the comment. Only one body format should be specified as the property
        for this object, e.g. `storage`.
      properties:
        storage:
          $ref: '#/components/schemas/CommentBodyWrite'
        atlas_doc_format:
          $ref: '#/components/schemas/CommentBodyWrite'
        wiki:
          $ref: '#/components/schemas/CommentBodyWrite'
      type: object
    CustomContentBodyWrite:
      properties:
        representation:
          description: Type of content representation used for the value field.
          enum:
          - storage
          - atlas_doc_format
          - raw
          type: string
        value:
          description: "Body of the custom content, in the format found in the representation\
            \ field."
          type: string
      type: object
    CustomContentNestedBodyWrite:
      description: |-
        Body of the custom content. Only one body format should be specified as the property
        for this object, e.g. `storage`.
      properties:
        storage:
          $ref: '#/components/schemas/CustomContentBodyWrite'
        atlas_doc_format:
          $ref: '#/components/schemas/CustomContentBodyWrite'
        raw:
          $ref: '#/components/schemas/CustomContentBodyWrite'
      type: object
    ChildPage:
      example:
        spaceId: null
        id: null
        title: title
        childPosition: 0
        status: null
      properties:
        id:
          $ref: '#/components/schemas/Page_id'
        status:
          $ref: '#/components/schemas/OnlyArchivedAndCurrentContentStatus'
        title:
          description: Title of the page.
          type: string
        spaceId:
          $ref: '#/components/schemas/Page_spaceId'
        childPosition:
          description: Position of child page within the given parent page tree.
          format: int32
          type: integer
      type: object
    ChildCustomContent:
      example:
        spaceId: null
        id: null
        title: title
        type: type
        status: null
      properties:
        id:
          $ref: '#/components/schemas/ChildCustomContent_id'
        status:
          $ref: '#/components/schemas/OnlyArchivedAndCurrentContentStatus'
        title:
          description: Title of the custom content.
          type: string
        type:
          description: Custom content type.
          type: string
        spaceId:
          $ref: '#/components/schemas/ChildCustomContent_spaceId'
      type: object
    Space:
      example:
        homepageId: null
        name: name
        description:
          view:
            representation: representation
            value: value
          plain:
            representation: representation
            value: value
        id: null
        type: null
        key: key
        status: null
      properties:
        id:
          $ref: '#/components/schemas/Space_id'
        key:
          description: Key of the space.
          type: string
        name:
          description: Name of the space.
          type: string
        type:
          $ref: '#/components/schemas/SpaceType'
        status:
          $ref: '#/components/schemas/SpaceStatus'
        homepageId:
          $ref: '#/components/schemas/Space_homepageId'
        description:
          $ref: '#/components/schemas/SpaceDescription'
      type: object
    SpaceDescription:
      description: Contains fields for each representation type requested.
      example:
        view:
          representation: representation
          value: value
        plain:
          representation: representation
          value: value
      properties:
        plain:
          $ref: '#/components/schemas/BodyType'
        view:
          $ref: '#/components/schemas/BodyType'
      type: object
    SpaceProperty:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        createdBy: createdBy
        id: null
        value: ""
        version:
          createdAt: 2000-01-23T04:56:07.000+00:00
          number: 0
          createdBy: createdBy
          message: message
        key: key
      properties:
        id:
          $ref: '#/components/schemas/SpaceProperty_id'
        key:
          description: Key of the space property.
          type: string
        value:
          description: Value of the space property.
        createdAt:
          description: RFC3339 compliant date time at which the property was created.
          format: date-time
          type: string
        createdBy:
          description: Atlassian account ID of the user that created the space property.
          type: string
        version:
          $ref: '#/components/schemas/SpaceProperty_version'
      type: object
    SpacePropertyCreateRequest:
      example:
        value: ""
        key: key
      properties:
        key:
          description: Key of the space property
          type: string
        value:
          description: Value of the space property.
      type: object
    SpacePropertyUpdateRequest:
      example:
        value: ""
        version:
          number: 0
          message: message
        key: key
      properties:
        key:
          description: Key of the space property
          type: string
        value:
          description: Value of the space property.
        version:
          $ref: '#/components/schemas/ContentPropertyUpdateRequest_version'
      type: object
    SpaceType:
      description: The type of space.
      enum:
      - global
      - personal
      type: string
    SpaceStatus:
      description: The status of the space.
      enum:
      - current
      - archived
      type: string
    Task:
      example:
        completedAt: 2000-01-23T04:56:07.000+00:00
        blogPostId: null
        pageId: null
        body:
          atlas_doc_format:
            representation: representation
            value: value
          storage:
            representation: representation
            value: value
        localId: null
        assignedTo: assignedTo
        dueAt: 2000-01-23T04:56:07.000+00:00
        spaceId: null
        createdAt: 2000-01-23T04:56:07.000+00:00
        createdBy: createdBy
        id: null
        completedBy: completedBy
        status: complete
        updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        id:
          $ref: '#/components/schemas/Task_id'
        localId:
          $ref: '#/components/schemas/Task_localId'
        spaceId:
          $ref: '#/components/schemas/Task_spaceId'
        pageId:
          $ref: '#/components/schemas/Task_pageId'
        blogPostId:
          $ref: '#/components/schemas/Task_blogPostId'
        status:
          description: Status of the task.
          enum:
          - complete
          - incomplete
          type: string
        body:
          $ref: '#/components/schemas/Body'
        createdBy:
          description: Account ID of the user who created this task.
          type: string
        assignedTo:
          description: Account ID of the user to whom this task is assigned.
          type: string
        completedBy:
          description: Account ID of the user who completed this task.
          type: string
        createdAt:
          description: Date and time when the task was created. In format "YYYY-MM-DDTHH:mm:ss.sssZ".
          format: date-time
          type: string
        updatedAt:
          description: Date and time when the task was updated. In format "YYYY-MM-DDTHH:mm:ss.sssZ".
          format: date-time
          type: string
        dueAt:
          description: Date and time when the task is due. In format "YYYY-MM-DDTHH:mm:ss.sssZ".
          format: date-time
          type: string
        completedAt:
          description: Date and time when the task was completed. In format "YYYY-MM-DDTHH:mm:ss.sssZ".
          format: date-time
          type: string
      type: object
    Version:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        number: 6
        minorEdit: true
        message: message
        authorId: authorId
      properties:
        createdAt:
          description: Date and time when the version was created. In format "YYYY-MM-DDTHH:mm:ss.sssZ".
          format: date-time
          type: string
        message:
          description: Message associated with the current version.
          type: string
        number:
          description: The version number.
          format: int32
          type: integer
        minorEdit:
          description: Describes if this version is a minor version. Email notifications
            and activity stream updates are not created for minor versions.
          type: boolean
        authorId:
          description: The account ID of the user who created this version.
          type: string
      type: object
    AttachmentVersion:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        number: 0
        minorEdit: true
        attachment:
          id: id
          title: title
          body:
            atlas_doc_format:
              representation: representation
              value: value
            storage:
              representation: representation
              value: value
        message: message
        authorId: authorId
      properties:
        createdAt:
          description: Date and time when the version was created. In format "YYYY-MM-DDTHH:mm:ss.sssZ".
          format: date-time
          type: string
        message:
          description: Message associated with the current version.
          type: string
        number:
          description: The version number.
          format: int32
          type: integer
        minorEdit:
          description: Describes if this version is a minor version. Email notifications
            and activity stream updates are not created for minor versions.
          type: boolean
        authorId:
          description: The account ID of the user who created this version.
          type: string
        attachment:
          $ref: '#/components/schemas/VersionedEntity'
      type: object
    BlogPostVersion:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        number: 0
        minorEdit: true
        message: message
        authorId: authorId
        blogpost:
          id: id
          title: title
          body:
            atlas_doc_format:
              representation: representation
              value: value
            storage:
              representation: representation
              value: value
      properties:
        createdAt:
          description: Date and time when the version was created. In format "YYYY-MM-DDTHH:mm:ss.sssZ".
          format: date-time
          type: string
        message:
          description: Message associated with the current version.
          type: string
        number:
          description: The version number.
          format: int32
          type: integer
        minorEdit:
          description: Describes if this version is a minor version. Email notifications
            and activity stream updates are not created for minor versions.
          type: boolean
        authorId:
          description: The account ID of the user who created this version.
          type: string
        blogpost:
          $ref: '#/components/schemas/VersionedEntity'
      type: object
    PageVersion:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        number: 0
        minorEdit: true
        page:
          id: id
          title: title
          body:
            atlas_doc_format:
              representation: representation
              value: value
            storage:
              representation: representation
              value: value
        message: message
        authorId: authorId
      properties:
        createdAt:
          description: Date and time when the version was created. In format "YYYY-MM-DDTHH:mm:ss.sssZ".
          format: date-time
          type: string
        message:
          description: Message associated with the current version.
          type: string
        number:
          description: The version number.
          format: int32
          type: integer
        minorEdit:
          description: Describes if this version is a minor version. Email notifications
            and activity stream updates are not created for minor versions.
          type: boolean
        authorId:
          description: The account ID of the user who created this version.
          type: string
        page:
          $ref: '#/components/schemas/VersionedEntity'
      type: object
    CustomContentVersion:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        number: 0
        minorEdit: true
        custom:
          id: id
          title: title
          body:
            atlas_doc_format:
              representation: representation
              value: value
            storage:
              representation: representation
              value: value
        message: message
        authorId: authorId
      properties:
        createdAt:
          description: Date and time when the version was created. In format "YYYY-MM-DDTHH:mm:ss.sssZ".
          format: date-time
          type: string
        message:
          description: Message associated with the current version.
          type: string
        number:
          description: The version number.
          format: int32
          type: integer
        minorEdit:
          description: Describes if this version is a minor version. Email notifications
            and activity stream updates are not created for minor versions.
          type: boolean
        authorId:
          description: The account ID of the user who created this version.
          type: string
        custom:
          $ref: '#/components/schemas/VersionedEntity'
      type: object
    CommentVersion:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        number: 0
        minorEdit: true
        comment:
          id: id
          title: title
          body:
            atlas_doc_format:
              representation: representation
              value: value
            storage:
              representation: representation
              value: value
        message: message
        authorId: authorId
      properties:
        createdAt:
          description: Date and time when the version was created. In format "YYYY-MM-DDTHH:mm:ss.sssZ".
          format: date-time
          type: string
        message:
          description: Message associated with the current version.
          type: string
        number:
          description: The version number.
          format: int32
          type: integer
        minorEdit:
          description: Describes if this version is a minor version. Email notifications
            and activity stream updates are not created for minor versions.
          type: boolean
        authorId:
          description: The account ID of the user who created this version.
          type: string
        comment:
          $ref: '#/components/schemas/VersionedEntity'
      type: object
    VersionedEntity:
      example:
        id: id
        title: title
        body:
          atlas_doc_format:
            representation: representation
            value: value
          storage:
            representation: representation
            value: value
      properties:
        title:
          description: Title of the entity.
          type: string
        id:
          description: ID of the entity.
          type: string
        body:
          $ref: '#/components/schemas/Body'
      type: object
    AttachmentSortOrder:
      description: "The sort fields for attachments. The default sort direction is\
        \ ascending. To sort in descending order, append a `-` character before the\
        \ sort field. For example, `fieldName` or `-fieldName`."
      enum:
      - created-date
      - -created-date
      - modified-date
      - -modified-date
      type: string
    BlogPostSortOrder:
      description: "The sort fields for blog posts. The default sort direction is\
        \ ascending. To sort in descending order, append a `-` character before the\
        \ sort field. For example, `fieldName` or `-fieldName`."
      enum:
      - id
      - -id
      - created-date
      - -created-date
      - modified-date
      - -modified-date
      type: string
    CommentSortOrder:
      description: "The sort fields for comments. The default sort direction is ascending.\
        \ To sort in descending order, append a `-` character before the sort field.\
        \ For example, `fieldName` or `-fieldName`."
      enum:
      - created-date
      - -created-date
      - modified-date
      - -modified-date
      type: string
    ContentPropertySortOrder:
      description: "The sort fields for content properties. The default sort direction\
        \ is ascending. To sort in descending order, append a `-` character before\
        \ the sort field. For example, `fieldName` or `-fieldName`."
      enum:
      - key
      - -key
      type: string
    LabelSortOrder:
      description: "The sort fields for labels. The default sort direction is ascending.\
        \ To sort in descending order, append a `-` character before the sort field.\
        \ For example, `fieldName` or `-fieldName`."
      enum:
      - created-date
      - -created-date
      - id
      - -id
      - name
      - -name
      type: string
    ChildPageSortOrder:
      description: "The sort fields for child pages. The default sort direction is\
        \ ascending by child-position. To sort in descending order, append a `-` character\
        \ before the sort field. For example, `fieldName` or `-fieldName`."
      enum:
      - created-date
      - -created-date
      - id
      - -id
      - child-position
      - -child-position
      - modified-date
      - -modified-date
      type: string
    ChildCustomContentSortOrder:
      description: "The sort fields for child custom content. The default sort direction\
        \ is ascending by id. To sort in descending order, append a `-` character\
        \ before the sort field. For example, `fieldName` or `-fieldName`."
      enum:
      - created-date
      - -created-date
      - id
      - -id
      - modified-date
      - -modified-date
      type: string
    PageSortOrder:
      description: "The sort fields for pages. The default sort direction is ascending.\
        \ To sort in descending order, append a `-` character before the sort field.\
        \ For example, `fieldName` or `-fieldName`."
      enum:
      - id
      - -id
      - created-date
      - -created-date
      - modified-date
      - -modified-date
      type: string
    SpaceSortOrder:
      description: "The sort fields for spaces. The default sort direction is ascending.\
        \ To sort in descending order, append a `-` character before the sort field.\
        \ For example, `fieldName` or `-fieldName`."
      enum:
      - id
      - -id
      - key
      - -key
      - name
      - -name
      type: string
    VersionSortOrder:
      description: "The sort fields for versions. The default sort direction is ascending.\
        \ To sort in descending order, append a `-` character before the sort field.\
        \ For example, `fieldName` or `-fieldName`."
      enum:
      - modified-date
      - -modified-date
      type: string
    InlineCommentResolutionStatus:
      description: Inline comment resolution status
      enum:
      - open
      - reopened
      - resolved
      - dangling
      type: string
    InlineCommentProperties:
      example:
        inline-marker-ref: inline-marker-ref
        inline-original-selection: inline-original-selection
      properties:
        inline-marker-ref:
          description: Property value used to reference the highlighted element in
            DOM.
          type: string
        inline-original-selection:
          description: Text that is highlighted
          type: string
      type: object
    PageCommentModel:
      example:
        id: null
        title: title
        pageId: null
        body:
          atlas_doc_format:
            representation: representation
            value: value
          storage:
            representation: representation
            value: value
        version:
          createdAt: 2000-01-23T04:56:07.000+00:00
          number: 6
          minorEdit: true
          message: message
          authorId: authorId
        status: null
      properties:
        id:
          $ref: '#/components/schemas/PageCommentModel_id'
        status:
          $ref: '#/components/schemas/ContentStatus'
        title:
          description: Title of the comment.
          type: string
        pageId:
          $ref: '#/components/schemas/PageCommentModel_pageId'
        version:
          $ref: '#/components/schemas/Version'
        body:
          $ref: '#/components/schemas/Body'
      type: object
    PageInlineCommentModel:
      example:
        resolutionStatus: null
        id: null
        title: title
        pageId: null
        body:
          atlas_doc_format:
            representation: representation
            value: value
          storage:
            representation: representation
            value: value
        version:
          createdAt: 2000-01-23T04:56:07.000+00:00
          number: 6
          minorEdit: true
          message: message
          authorId: authorId
        properties:
          inline-marker-ref: inline-marker-ref
          inline-original-selection: inline-original-selection
        status: null
      properties:
        id:
          $ref: '#/components/schemas/PageCommentModel_id'
        status:
          $ref: '#/components/schemas/ContentStatus'
        title:
          description: Title of the comment.
          type: string
        pageId:
          $ref: '#/components/schemas/PageCommentModel_pageId'
        version:
          $ref: '#/components/schemas/Version'
        body:
          $ref: '#/components/schemas/Body'
        resolutionStatus:
          $ref: '#/components/schemas/InlineCommentResolutionStatus'
        properties:
          $ref: '#/components/schemas/InlineCommentProperties'
      type: object
    BlogPostCommentModel:
      example:
        id: null
        blogPostId: null
        title: title
        body:
          atlas_doc_format:
            representation: representation
            value: value
          storage:
            representation: representation
            value: value
        version:
          createdAt: 2000-01-23T04:56:07.000+00:00
          number: 6
          minorEdit: true
          message: message
          authorId: authorId
        status: null
      properties:
        id:
          $ref: '#/components/schemas/PageCommentModel_id'
        status:
          $ref: '#/components/schemas/ContentStatus'
        title:
          description: Title of the comment.
          type: string
        blogPostId:
          $ref: '#/components/schemas/BlogPostCommentModel_blogPostId'
        version:
          $ref: '#/components/schemas/Version'
        body:
          $ref: '#/components/schemas/Body'
      type: object
    BlogPostInlineCommentModel:
      example:
        resolutionStatus: null
        id: null
        blogPostId: null
        title: title
        body:
          atlas_doc_format:
            representation: representation
            value: value
          storage:
            representation: representation
            value: value
        version:
          createdAt: 2000-01-23T04:56:07.000+00:00
          number: 6
          minorEdit: true
          message: message
          authorId: authorId
        properties:
          inline-marker-ref: inline-marker-ref
          inline-original-selection: inline-original-selection
        status: null
      properties:
        id:
          $ref: '#/components/schemas/PageCommentModel_id'
        status:
          $ref: '#/components/schemas/ContentStatus'
        title:
          description: Title of the comment.
          type: string
        blogPostId:
          $ref: '#/components/schemas/BlogPostCommentModel_blogPostId'
        version:
          $ref: '#/components/schemas/Version'
        body:
          $ref: '#/components/schemas/Body'
        resolutionStatus:
          $ref: '#/components/schemas/InlineCommentResolutionStatus'
        properties:
          $ref: '#/components/schemas/InlineCommentProperties'
      type: object
    ChildrenCommentModel:
      example:
        parentCommentId: null
        id: null
        title: title
        body:
          atlas_doc_format:
            representation: representation
            value: value
          storage:
            representation: representation
            value: value
        version:
          createdAt: 2000-01-23T04:56:07.000+00:00
          number: 6
          minorEdit: true
          message: message
          authorId: authorId
        status: null
      properties:
        id:
          $ref: '#/components/schemas/PageCommentModel_id'
        status:
          $ref: '#/components/schemas/ContentStatus'
        title:
          description: Title of the comment.
          type: string
        parentCommentId:
          $ref: '#/components/schemas/ChildrenCommentModel_parentCommentId'
        version:
          $ref: '#/components/schemas/Version'
        body:
          $ref: '#/components/schemas/Body'
      type: object
    InlineCommentChildrenModel:
      example:
        resolutionStatus: null
        parentCommentId: null
        id: null
        title: title
        body:
          atlas_doc_format:
            representation: representation
            value: value
          storage:
            representation: representation
            value: value
        version:
          createdAt: 2000-01-23T04:56:07.000+00:00
          number: 6
          minorEdit: true
          message: message
          authorId: authorId
        properties:
          inline-marker-ref: inline-marker-ref
          inline-original-selection: inline-original-selection
        status: null
      properties:
        id:
          $ref: '#/components/schemas/PageCommentModel_id'
        status:
          $ref: '#/components/schemas/ContentStatus'
        title:
          description: Title of the comment.
          type: string
        parentCommentId:
          $ref: '#/components/schemas/ChildrenCommentModel_parentCommentId'
        version:
          $ref: '#/components/schemas/Version'
        body:
          $ref: '#/components/schemas/Body'
        resolutionStatus:
          $ref: '#/components/schemas/InlineCommentResolutionStatus'
        properties:
          $ref: '#/components/schemas/InlineCommentProperties'
      type: object
    FooterCommentModel:
      example:
        parentCommentId: null
        id: null
        blogPostId: null
        title: title
        pageId: null
        body:
          atlas_doc_format:
            representation: representation
            value: value
          storage:
            representation: representation
            value: value
        version:
          createdAt: 2000-01-23T04:56:07.000+00:00
          number: 6
          minorEdit: true
          message: message
          authorId: authorId
        status: null
      properties:
        id:
          $ref: '#/components/schemas/PageCommentModel_id'
        status:
          $ref: '#/components/schemas/ContentStatus'
        title:
          description: Title of the comment.
          type: string
        blogPostId:
          $ref: '#/components/schemas/FooterCommentModel_blogPostId'
        pageId:
          $ref: '#/components/schemas/FooterCommentModel_pageId'
        parentCommentId:
          $ref: '#/components/schemas/FooterCommentModel_parentCommentId'
        version:
          $ref: '#/components/schemas/Version'
        body:
          $ref: '#/components/schemas/Body'
      type: object
    InlineCommentModel:
      example:
        resolutionStatus: null
        resolutionLastModifierId: resolutionLastModifierId
        parentCommentId: null
        id: null
        blogPostId: null
        title: title
        pageId: null
        body:
          atlas_doc_format:
            representation: representation
            value: value
          storage:
            representation: representation
            value: value
        resolutionLastModifiedAt: 2000-01-23T04:56:07.000+00:00
        version:
          createdAt: 2000-01-23T04:56:07.000+00:00
          number: 6
          minorEdit: true
          message: message
          authorId: authorId
        properties:
          inline-marker-ref: inline-marker-ref
          inline-original-selection: inline-original-selection
        status: null
      properties:
        id:
          $ref: '#/components/schemas/PageCommentModel_id'
        status:
          $ref: '#/components/schemas/ContentStatus'
        title:
          description: Title of the comment.
          type: string
        blogPostId:
          $ref: '#/components/schemas/FooterCommentModel_blogPostId'
        pageId:
          $ref: '#/components/schemas/FooterCommentModel_pageId'
        parentCommentId:
          $ref: '#/components/schemas/FooterCommentModel_parentCommentId'
        version:
          $ref: '#/components/schemas/Version'
        body:
          $ref: '#/components/schemas/Body'
        resolutionLastModifierId:
          description: Atlassian Account ID of last person who modified the resolve
            state of the comment. Null until comment is resolved or reopened.
          type: string
        resolutionLastModifiedAt:
          description: Timestamp of the last modification to the comment's resolution
            status. Null until comment is resolved or reopened.
          format: date-time
          type: string
        resolutionStatus:
          $ref: '#/components/schemas/InlineCommentResolutionStatus'
        properties:
          $ref: '#/components/schemas/InlineCommentProperties'
      type: object
    CreateFooterCommentModel:
      example:
        parentCommentId: parentCommentId
        blogPostId: blogPostId
        pageId: pageId
        body: null
      properties:
        blogPostId:
          description: "ID of the containing blog post, if intending to create a top\
            \ level footer comment. Do not provide if creating a reply."
          type: string
        pageId:
          description: "ID of the containing page, if intending to create a top level\
            \ footer comment. Do not provide if creating a reply."
          type: string
        parentCommentId:
          description: "ID of the parent comment, if intending to create a reply.\
            \ Do not provide if creating a top level comment."
          type: string
        body:
          $ref: '#/components/schemas/CreateFooterCommentModel_body'
      type: object
    CreateInlineCommentModel:
      example:
        inlineCommentProperties:
          textSelectionMatchCount: 0
          textSelectionMatchIndex: 6
          textSelection: textSelection
        parentCommentId: parentCommentId
        blogPostId: blogPostId
        pageId: pageId
        body: null
      properties:
        blogPostId:
          description: "ID of the containing blog post, if intending to create a top\
            \ level footer comment. Do not provide if creating a reply."
          type: string
        pageId:
          description: "ID of the containing page, if intending to create a top level\
            \ footer comment. Do not provide if creating a reply."
          type: string
        parentCommentId:
          description: "ID of the parent comment, if intending to create a reply.\
            \ Do not provide if creating a top level comment."
          type: string
        body:
          $ref: '#/components/schemas/CreateFooterCommentModel_body'
        inlineCommentProperties:
          $ref: '#/components/schemas/CreateInlineCommentModel_inlineCommentProperties'
      type: object
    UpdateFooterCommentModel:
      example:
        body: null
        version:
          number: 0
          message: message
      properties:
        version:
          $ref: '#/components/schemas/UpdateFooterCommentModel_version'
        body:
          $ref: '#/components/schemas/CreateFooterCommentModel_body'
      type: object
    UpdateInlineCommentModel:
      example:
        body: null
        version:
          number: 0
          message: message
        resolved: true
      properties:
        version:
          $ref: '#/components/schemas/UpdateFooterCommentModel_version'
        body:
          $ref: '#/components/schemas/CreateFooterCommentModel_body'
        resolved:
          description: |-
            Resolved state of the comment. Set to true to resolve the comment, set to false to reopen it. If
            matching the existing state (i.e. true -> resolved or false -> open/reopened) , no change will occur. A dangling
            comment cannot be updated.
          type: boolean
      type: object
    MultiEntityResult_Label___links:
      example:
        next: next
      properties:
        next:
          description: |-
            Used for pagination. Contains the relative URL for the next set of results, using a cursor query parameter.
            This property will not be present if there is no additional data available.
          type: string
      type: object
    MultiEntityResult_Label_:
      example:
        _links:
          next: next
        results:
        - prefix: prefix
          name: name
          id: null
        - prefix: prefix
          name: name
          id: null
      properties:
        results:
          items:
            $ref: '#/components/schemas/Label'
          type: array
        _links:
          $ref: '#/components/schemas/MultiEntityResult_Label___links'
      title: MultiEntityResult<Label>
      type: object
    MultiEntityResult_ContentProperty_:
      example:
        _links:
          next: next
        results:
        - id: null
          value: ""
          version:
            createdAt: 2000-01-23T04:56:07.000+00:00
            number: 6
            minorEdit: true
            message: message
            authorId: authorId
          key: key
        - id: null
          value: ""
          version:
            createdAt: 2000-01-23T04:56:07.000+00:00
            number: 6
            minorEdit: true
            message: message
            authorId: authorId
          key: key
      properties:
        results:
          items:
            $ref: '#/components/schemas/ContentProperty'
          type: array
        _links:
          $ref: '#/components/schemas/MultiEntityResult_Label___links'
      title: MultiEntityResult<ContentProperty>
      type: object
    MultiEntityResult_Version_:
      example:
        _links:
          next: next
        results:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          number: 0
          minorEdit: true
          attachment:
            id: id
            title: title
            body:
              atlas_doc_format:
                representation: representation
                value: value
              storage:
                representation: representation
                value: value
          message: message
          authorId: authorId
        - createdAt: 2000-01-23T04:56:07.000+00:00
          number: 0
          minorEdit: true
          attachment:
            id: id
            title: title
            body:
              atlas_doc_format:
                representation: representation
                value: value
              storage:
                representation: representation
                value: value
          message: message
          authorId: authorId
      properties:
        results:
          items:
            $ref: '#/components/schemas/AttachmentVersion'
          type: array
        _links:
          $ref: '#/components/schemas/MultiEntityResult_Label___links'
      title: MultiEntityResult<Version>
      type: object
    MultiEntityResult_BlogPost_:
      example:
        _links:
          next: next
        results:
        - spaceId: null
          createdAt: 2000-01-23T04:56:07.000+00:00
          id: null
          title: title
          authorId: authorId
          body:
            atlas_doc_format:
              representation: representation
              value: value
            storage:
              representation: representation
              value: value
          version:
            createdAt: 2000-01-23T04:56:07.000+00:00
            number: 6
            minorEdit: true
            message: message
            authorId: authorId
          status: null
        - spaceId: null
          createdAt: 2000-01-23T04:56:07.000+00:00
          id: null
          title: title
          authorId: authorId
          body:
            atlas_doc_format:
              representation: representation
              value: value
            storage:
              representation: representation
              value: value
          version:
            createdAt: 2000-01-23T04:56:07.000+00:00
            number: 6
            minorEdit: true
            message: message
            authorId: authorId
          status: null
      properties:
        results:
          items:
            $ref: '#/components/schemas/BlogPost'
          type: array
        _links:
          $ref: '#/components/schemas/MultiEntityResult_Label___links'
      title: MultiEntityResult<BlogPost>
      type: object
    createBlogPost_request_body:
      oneOf:
      - $ref: '#/components/schemas/BlogPostBodyWrite'
      - $ref: '#/components/schemas/BlogPostNestedBodyWrite'
    createBlogPost_request:
      properties:
        spaceId:
          description: ID of the space
          type: string
        status:
          description: "The status of the blog post, specifies if the blog post will\
            \ be created as a new blog post or a draft"
          enum:
          - current
          - draft
          type: string
        title:
          description: "Title of the blog post, required if creating non-draft."
          type: string
        body:
          $ref: '#/components/schemas/createBlogPost_request_body'
      required:
      - spaceId
      type: object
    updateBlogPost_request_version:
      properties:
        number:
          description: "The version number, must be incremented by one."
          format: int32
          type: integer
        message:
          description: An optional message to be stored with the version.
          type: string
      type: object
    updateBlogPost_request:
      properties:
        id:
          description: Id of the blog post.
          type: string
        status:
          description: The status of the blog post.
          enum:
          - current
          - draft
          - archived
          - deleted
          type: string
        title:
          description: Title of the blog post.
          type: string
        spaceId:
          description: ID of the containing space.
          type: string
        body:
          $ref: '#/components/schemas/createBlogPost_request_body'
        version:
          $ref: '#/components/schemas/updateBlogPost_request_version'
      required:
      - body
      - id
      - spaceId
      - status
      - title
      - version
      type: object
    MultiEntityResult_Attachment_:
      example:
        _links:
          next: next
        results:
        - mediaType: mediaType
          blogPostId: null
          title: title
          pageId: null
          customContentId: null
          version:
            createdAt: 2000-01-23T04:56:07.000+00:00
            number: 6
            minorEdit: true
            message: message
            authorId: authorId
          fileSize: 0
          downloadLink: downloadLink
          mediaTypeDescription: mediaTypeDescription
          webuiLink: webuiLink
          comment: comment
          id: id
          status: null
        - mediaType: mediaType
          blogPostId: null
          title: title
          pageId: null
          customContentId: null
          version:
            createdAt: 2000-01-23T04:56:07.000+00:00
            number: 6
            minorEdit: true
            message: message
            authorId: authorId
          fileSize: 0
          downloadLink: downloadLink
          mediaTypeDescription: mediaTypeDescription
          webuiLink: webuiLink
          comment: comment
          id: id
          status: null
      properties:
        results:
          items:
            $ref: '#/components/schemas/Attachment'
          type: array
        _links:
          $ref: '#/components/schemas/MultiEntityResult_Label___links'
      title: MultiEntityResult<Attachment>
      type: object
    MultiEntityResult_CustomContent_:
      example:
        _links:
          next: next
        results:
        - spaceId: null
          createdAt: 2000-01-23T04:56:07.000+00:00
          id: null
          blogPostId: null
          type: type
          title: title
          pageId: null
          authorId: authorId
          body:
            atlas_doc_format:
              representation: representation
              value: value
            raw:
              representation: representation
              value: value
            storage:
              representation: representation
              value: value
          customContentId: null
          version:
            createdAt: 2000-01-23T04:56:07.000+00:00
            number: 6
            minorEdit: true
            message: message
            authorId: authorId
          status: null
        - spaceId: null
          createdAt: 2000-01-23T04:56:07.000+00:00
          id: null
          blogPostId: null
          type: type
          title: title
          pageId: null
          authorId: authorId
          body:
            atlas_doc_format:
              representation: representation
              value: value
            raw:
              representation: representation
              value: value
            storage:
              representation: representation
              value: value
          customContentId: null
          version:
            createdAt: 2000-01-23T04:56:07.000+00:00
            number: 6
            minorEdit: true
            message: message
            authorId: authorId
          status: null
      properties:
        results:
          items:
            $ref: '#/components/schemas/CustomContent'
          type: array
        _links:
          $ref: '#/components/schemas/MultiEntityResult_Label___links'
      title: MultiEntityResult<CustomContent>
      type: object
    MultiEntityResult_Version__1:
      example:
        _links:
          next: next
        results:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          number: 0
          minorEdit: true
          message: message
          authorId: authorId
          blogpost:
            id: id
            title: title
            body:
              atlas_doc_format:
                representation: representation
                value: value
              storage:
                representation: representation
                value: value
        - createdAt: 2000-01-23T04:56:07.000+00:00
          number: 0
          minorEdit: true
          message: message
          authorId: authorId
          blogpost:
            id: id
            title: title
            body:
              atlas_doc_format:
                representation: representation
                value: value
              storage:
                representation: representation
                value: value
      properties:
        results:
          items:
            $ref: '#/components/schemas/BlogPostVersion'
          type: array
        _links:
          $ref: '#/components/schemas/MultiEntityResult_Label___links'
      title: MultiEntityResult<Version>
      type: object
    convertContentIdsToContentTypes_request_contentIds_inner:
      anyOf:
      - type: string
      - type: number
    convertContentIdsToContentTypes_request:
      properties:
        contentIds:
          description: The content ids to convert. They may be provided as strings
            or numbers.
          items:
            $ref: '#/components/schemas/convertContentIdsToContentTypes_request_contentIds_inner'
          maxItems: 100
          type: array
      required:
      - contentIds
      type: object
    createCustomContent_request_body:
      oneOf:
      - $ref: '#/components/schemas/CustomContentBodyWrite'
      - $ref: '#/components/schemas/CustomContentNestedBodyWrite'
    createCustomContent_request:
      properties:
        type:
          description: Type of custom content.
          type: string
        status:
          description: The status of the custom content
          enum:
          - current
          type: string
        spaceId:
          description: ID of the containing space
          type: string
        pageId:
          description: ID of the containing page
          type: string
        blogPostId:
          description: ID of the containing Blog Post
          type: string
        customContentId:
          description: ID of the containing custom content
          type: string
        title:
          description: Title of the custom content
          type: string
        body:
          $ref: '#/components/schemas/createCustomContent_request_body'
      required:
      - body
      - title
      - type
      type: object
    updateCustomContent_request:
      properties:
        id:
          description: Id of custom content.
          type: string
        type:
          description: Type of custom content.
          type: string
        status:
          description: The status of the custom content
          enum:
          - current
          type: string
        spaceId:
          description: ID of the containing space
          type: string
        pageId:
          description: ID of the containing page
          type: string
        blogPostId:
          description: ID of the containing Blog Post
          type: string
        customContentId:
          description: ID of the containing custom content
          type: string
        title:
          description: Title of the custom content
          type: string
        body:
          $ref: '#/components/schemas/createCustomContent_request_body'
        version:
          $ref: '#/components/schemas/updateBlogPost_request_version'
      required:
      - body
      - id
      - status
      - title
      - type
      - version
      type: object
    MultiEntityResult_Attachment__1:
      example:
        results:
        - mediaType: mediaType
          blogPostId: null
          title: title
          pageId: null
          customContentId: null
          version:
            createdAt: 2000-01-23T04:56:07.000+00:00
            number: 6
            minorEdit: true
            message: message
            authorId: authorId
          fileSize: 0
          downloadLink: downloadLink
          mediaTypeDescription: mediaTypeDescription
          webuiLink: webuiLink
          comment: comment
          id: id
          status: null
        - mediaType: mediaType
          blogPostId: null
          title: title
          pageId: null
          customContentId: null
          version:
            createdAt: 2000-01-23T04:56:07.000+00:00
            number: 6
            minorEdit: true
            message: message
            authorId: authorId
          fileSize: 0
          downloadLink: downloadLink
          mediaTypeDescription: mediaTypeDescription
          webuiLink: webuiLink
          comment: comment
          id: id
          status: null
      properties:
        results:
          items:
            $ref: '#/components/schemas/Attachment'
          type: array
      title: MultiEntityResult<Attachment>
      type: object
    MultiEntityResult_Page_:
      example:
        _links:
          next: next
        results:
        - spaceId: null
          createdAt: 2000-01-23T04:56:07.000+00:00
          id: null
          title: title
          authorId: authorId
          body:
            atlas_doc_format:
              representation: representation
              value: value
            storage:
              representation: representation
              value: value
          version:
            createdAt: 2000-01-23T04:56:07.000+00:00
            number: 6
            minorEdit: true
            message: message
            authorId: authorId
          parentId: null
          status: null
        - spaceId: null
          createdAt: 2000-01-23T04:56:07.000+00:00
          id: null
          title: title
          authorId: authorId
          body:
            atlas_doc_format:
              representation: representation
              value: value
            storage:
              representation: representation
              value: value
          version:
            createdAt: 2000-01-23T04:56:07.000+00:00
            number: 6
            minorEdit: true
            message: message
            authorId: authorId
          parentId: null
          status: null
      properties:
        results:
          items:
            $ref: '#/components/schemas/Page'
          type: array
        _links:
          $ref: '#/components/schemas/MultiEntityResult_Label___links'
      title: MultiEntityResult<Page>
      type: object
    createPage_request_body:
      oneOf:
      - $ref: '#/components/schemas/PageBodyWrite'
      - $ref: '#/components/schemas/PageNestedBodyWrite'
    createPage_request:
      properties:
        spaceId:
          description: ID of the space
          type: string
        status:
          description: "The status of the page, published or draft."
          enum:
          - current
          - draft
          type: string
        title:
          description: "Title of the page, required if page status is not draft."
          type: string
        parentId:
          description: The parent content ID of the page.
          type: string
        body:
          $ref: '#/components/schemas/createPage_request_body'
      required:
      - spaceId
      type: object
    updatePage_request:
      properties:
        id:
          description: Id of the page.
          type: string
        status:
          description: The status of the page.
          enum:
          - current
          - draft
          - archived
          - deleted
          type: string
        title:
          description: Title of the page.
          type: string
        spaceId:
          description: ID of the containing space.
          type: string
        body:
          $ref: '#/components/schemas/createPage_request_body'
        version:
          $ref: '#/components/schemas/updateBlogPost_request_version'
      required:
      - body
      - id
      - spaceId
      - status
      - title
      - version
      type: object
    MultiEntityResult_Version__2:
      example:
        _links:
          next: next
        results:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          number: 0
          minorEdit: true
          page:
            id: id
            title: title
            body:
              atlas_doc_format:
                representation: representation
                value: value
              storage:
                representation: representation
                value: value
          message: message
          authorId: authorId
        - createdAt: 2000-01-23T04:56:07.000+00:00
          number: 0
          minorEdit: true
          page:
            id: id
            title: title
            body:
              atlas_doc_format:
                representation: representation
                value: value
              storage:
                representation: representation
                value: value
          message: message
          authorId: authorId
      properties:
        results:
          items:
            $ref: '#/components/schemas/PageVersion'
          type: array
        _links:
          $ref: '#/components/schemas/MultiEntityResult_Label___links'
      title: MultiEntityResult<Version>
      type: object
    MultiEntityResult_Version__3:
      example:
        _links:
          next: next
        results:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          number: 0
          minorEdit: true
          custom:
            id: id
            title: title
            body:
              atlas_doc_format:
                representation: representation
                value: value
              storage:
                representation: representation
                value: value
          message: message
          authorId: authorId
        - createdAt: 2000-01-23T04:56:07.000+00:00
          number: 0
          minorEdit: true
          custom:
            id: id
            title: title
            body:
              atlas_doc_format:
                representation: representation
                value: value
              storage:
                representation: representation
                value: value
          message: message
          authorId: authorId
      properties:
        results:
          items:
            $ref: '#/components/schemas/CustomContentVersion'
          type: array
        _links:
          $ref: '#/components/schemas/MultiEntityResult_Label___links'
      title: MultiEntityResult<Version>
      type: object
    MultiEntityResult_Space_:
      example:
        _links:
          next: next
        results:
        - homepageId: null
          name: name
          description:
            view:
              representation: representation
              value: value
            plain:
              representation: representation
              value: value
          id: null
          type: null
          key: key
          status: null
        - homepageId: null
          name: name
          description:
            view:
              representation: representation
              value: value
            plain:
              representation: representation
              value: value
          id: null
          type: null
          key: key
          status: null
      properties:
        results:
          items:
            $ref: '#/components/schemas/Space'
          type: array
        _links:
          $ref: '#/components/schemas/MultiEntityResult_Label___links'
      title: MultiEntityResult<Space>
      type: object
    MultiEntityResult_SpaceProperty_:
      example:
        results:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          createdBy: createdBy
          id: null
          value: ""
          version:
            createdAt: 2000-01-23T04:56:07.000+00:00
            number: 0
            createdBy: createdBy
            message: message
          key: key
        - createdAt: 2000-01-23T04:56:07.000+00:00
          createdBy: createdBy
          id: null
          value: ""
          version:
            createdAt: 2000-01-23T04:56:07.000+00:00
            number: 0
            createdBy: createdBy
            message: message
          key: key
      properties:
        results:
          items:
            $ref: '#/components/schemas/SpaceProperty'
          type: array
      title: MultiEntityResult<SpaceProperty>
      type: object
    MultiEntityResult_PageCommentModel_:
      example:
        _links:
          next: next
        results:
        - id: null
          title: title
          pageId: null
          body:
            atlas_doc_format:
              representation: representation
              value: value
            storage:
              representation: representation
              value: value
          version:
            createdAt: 2000-01-23T04:56:07.000+00:00
            number: 6
            minorEdit: true
            message: message
            authorId: authorId
          status: null
        - id: null
          title: title
          pageId: null
          body:
            atlas_doc_format:
              representation: representation
              value: value
            storage:
              representation: representation
              value: value
          version:
            createdAt: 2000-01-23T04:56:07.000+00:00
            number: 6
            minorEdit: true
            message: message
            authorId: authorId
          status: null
      properties:
        results:
          items:
            $ref: '#/components/schemas/PageCommentModel'
          type: array
        _links:
          $ref: '#/components/schemas/MultiEntityResult_Label___links'
      title: MultiEntityResult<PageCommentModel>
      type: object
    MultiEntityResult_PageInlineCommentModel_:
      example:
        _links:
          next: next
        results:
        - resolutionStatus: null
          id: null
          title: title
          pageId: null
          body:
            atlas_doc_format:
              representation: representation
              value: value
            storage:
              representation: representation
              value: value
          version:
            createdAt: 2000-01-23T04:56:07.000+00:00
            number: 6
            minorEdit: true
            message: message
            authorId: authorId
          properties:
            inline-marker-ref: inline-marker-ref
            inline-original-selection: inline-original-selection
          status: null
        - resolutionStatus: null
          id: null
          title: title
          pageId: null
          body:
            atlas_doc_format:
              representation: representation
              value: value
            storage:
              representation: representation
              value: value
          version:
            createdAt: 2000-01-23T04:56:07.000+00:00
            number: 6
            minorEdit: true
            message: message
            authorId: authorId
          properties:
            inline-marker-ref: inline-marker-ref
            inline-original-selection: inline-original-selection
          status: null
      properties:
        results:
          items:
            $ref: '#/components/schemas/PageInlineCommentModel'
          type: array
        _links:
          $ref: '#/components/schemas/MultiEntityResult_Label___links'
      title: MultiEntityResult<PageInlineCommentModel>
      type: object
    MultiEntityResult_BlogPostCommentModel_:
      example:
        _links:
          next: next
        results:
        - id: null
          blogPostId: null
          title: title
          body:
            atlas_doc_format:
              representation: representation
              value: value
            storage:
              representation: representation
              value: value
          version:
            createdAt: 2000-01-23T04:56:07.000+00:00
            number: 6
            minorEdit: true
            message: message
            authorId: authorId
          status: null
        - id: null
          blogPostId: null
          title: title
          body:
            atlas_doc_format:
              representation: representation
              value: value
            storage:
              representation: representation
              value: value
          version:
            createdAt: 2000-01-23T04:56:07.000+00:00
            number: 6
            minorEdit: true
            message: message
            authorId: authorId
          status: null
      properties:
        results:
          items:
            $ref: '#/components/schemas/BlogPostCommentModel'
          type: array
        _links:
          $ref: '#/components/schemas/MultiEntityResult_Label___links'
      title: MultiEntityResult<BlogPostCommentModel>
      type: object
    MultiEntityResult_BlogPostInlineCommentModel_:
      example:
        _links:
          next: next
        results:
        - resolutionStatus: null
          id: null
          blogPostId: null
          title: title
          body:
            atlas_doc_format:
              representation: representation
              value: value
            storage:
              representation: representation
              value: value
          version:
            createdAt: 2000-01-23T04:56:07.000+00:00
            number: 6
            minorEdit: true
            message: message
            authorId: authorId
          properties:
            inline-marker-ref: inline-marker-ref
            inline-original-selection: inline-original-selection
          status: null
        - resolutionStatus: null
          id: null
          blogPostId: null
          title: title
          body:
            atlas_doc_format:
              representation: representation
              value: value
            storage:
              representation: representation
              value: value
          version:
            createdAt: 2000-01-23T04:56:07.000+00:00
            number: 6
            minorEdit: true
            message: message
            authorId: authorId
          properties:
            inline-marker-ref: inline-marker-ref
            inline-original-selection: inline-original-selection
          status: null
      properties:
        results:
          items:
            $ref: '#/components/schemas/BlogPostInlineCommentModel'
          type: array
        _links:
          $ref: '#/components/schemas/MultiEntityResult_Label___links'
      title: MultiEntityResult<BlogPostInlineCommentModel>
      type: object
    MultiEntityResult_ChildrenCommentModel_:
      example:
        _links:
          next: next
        results:
        - parentCommentId: null
          id: null
          title: title
          body:
            atlas_doc_format:
              representation: representation
              value: value
            storage:
              representation: representation
              value: value
          version:
            createdAt: 2000-01-23T04:56:07.000+00:00
            number: 6
            minorEdit: true
            message: message
            authorId: authorId
          status: null
        - parentCommentId: null
          id: null
          title: title
          body:
            atlas_doc_format:
              representation: representation
              value: value
            storage:
              representation: representation
              value: value
          version:
            createdAt: 2000-01-23T04:56:07.000+00:00
            number: 6
            minorEdit: true
            message: message
            authorId: authorId
          status: null
      properties:
        results:
          items:
            $ref: '#/components/schemas/ChildrenCommentModel'
          type: array
        _links:
          $ref: '#/components/schemas/MultiEntityResult_Label___links'
      title: MultiEntityResult<ChildrenCommentModel>
      type: object
    MultiEntityResult_Version__4:
      example:
        _links:
          next: next
        results:
        - createdAt: 2000-01-23T04:56:07.000+00:00
          number: 0
          minorEdit: true
          comment:
            id: id
            title: title
            body:
              atlas_doc_format:
                representation: representation
                value: value
              storage:
                representation: representation
                value: value
          message: message
          authorId: authorId
        - createdAt: 2000-01-23T04:56:07.000+00:00
          number: 0
          minorEdit: true
          comment:
            id: id
            title: title
            body:
              atlas_doc_format:
                representation: representation
                value: value
              storage:
                representation: representation
                value: value
          message: message
          authorId: authorId
      properties:
        results:
          items:
            $ref: '#/components/schemas/CommentVersion'
          type: array
        _links:
          $ref: '#/components/schemas/MultiEntityResult_Label___links'
      title: MultiEntityResult<Version>
      type: object
    MultiEntityResult_InlineCommentChildrenModel_:
      example:
        _links:
          next: next
        results:
        - resolutionStatus: null
          parentCommentId: null
          id: null
          title: title
          body:
            atlas_doc_format:
              representation: representation
              value: value
            storage:
              representation: representation
              value: value
          version:
            createdAt: 2000-01-23T04:56:07.000+00:00
            number: 6
            minorEdit: true
            message: message
            authorId: authorId
          properties:
            inline-marker-ref: inline-marker-ref
            inline-original-selection: inline-original-selection
          status: null
        - resolutionStatus: null
          parentCommentId: null
          id: null
          title: title
          body:
            atlas_doc_format:
              representation: representation
              value: value
            storage:
              representation: representation
              value: value
          version:
            createdAt: 2000-01-23T04:56:07.000+00:00
            number: 6
            minorEdit: true
            message: message
            authorId: authorId
          properties:
            inline-marker-ref: inline-marker-ref
            inline-original-selection: inline-original-selection
          status: null
      properties:
        results:
          items:
            $ref: '#/components/schemas/InlineCommentChildrenModel'
          type: array
        _links:
          $ref: '#/components/schemas/MultiEntityResult_Label___links'
      title: MultiEntityResult<InlineCommentChildrenModel>
      type: object
    MultiEntityResult_Task_:
      example:
        _links:
          next: next
        results:
        - completedAt: 2000-01-23T04:56:07.000+00:00
          blogPostId: null
          pageId: null
          body:
            atlas_doc_format:
              representation: representation
              value: value
            storage:
              representation: representation
              value: value
          localId: null
          assignedTo: assignedTo
          dueAt: 2000-01-23T04:56:07.000+00:00
          spaceId: null
          createdAt: 2000-01-23T04:56:07.000+00:00
          createdBy: createdBy
          id: null
          completedBy: completedBy
          status: complete
          updatedAt: 2000-01-23T04:56:07.000+00:00
        - completedAt: 2000-01-23T04:56:07.000+00:00
          blogPostId: null
          pageId: null
          body:
            atlas_doc_format:
              representation: representation
              value: value
            storage:
              representation: representation
              value: value
          localId: null
          assignedTo: assignedTo
          dueAt: 2000-01-23T04:56:07.000+00:00
          spaceId: null
          createdAt: 2000-01-23T04:56:07.000+00:00
          createdBy: createdBy
          id: null
          completedBy: completedBy
          status: complete
          updatedAt: 2000-01-23T04:56:07.000+00:00
      properties:
        results:
          items:
            $ref: '#/components/schemas/Task'
          type: array
        _links:
          $ref: '#/components/schemas/MultiEntityResult_Label___links'
      title: MultiEntityResult<Task>
      type: object
    updateTask_request:
      properties:
        id:
          description: ID of the task.
          type: string
        localId:
          description: Local ID of the task. This ID is local to the corresponding
            page or blog post.
          type: string
        spaceId:
          description: ID of the space the task is in.
          type: string
        pageId:
          description: ID of the page the task is in.
          type: string
        blogPostId:
          description: ID of the blog post the task is in.
          type: string
        status:
          description: Status of the task.
          enum:
          - complete
          - incomplete
          type: string
        createdBy:
          description: Account ID of the user who created this task.
          type: string
        assignedTo:
          description: Account ID of the user to whom this task is assigned.
          type: string
        completedBy:
          description: Account ID of the user who completed this task.
          type: string
        createdAt:
          description: Date and time when the task was created. In format "YYYY-MM-DDTHH:mm:ss.sssZ".
          format: date-time
          type: string
        updatedAt:
          description: Date and time when the task was updated. In format "YYYY-MM-DDTHH:mm:ss.sssZ".
          format: date-time
          type: string
        dueAt:
          description: Date and time when the task is due. In format "YYYY-MM-DDTHH:mm:ss.sssZ".
          format: date-time
          type: string
        completedAt:
          description: Date and time when the task was completed. In format "YYYY-MM-DDTHH:mm:ss.sssZ".
          format: date-time
          type: string
      required:
      - status
      type: object
    MultiEntityResult_ChildPage_:
      example:
        _links:
          next: next
        results:
        - spaceId: null
          id: null
          title: title
          childPosition: 0
          status: null
        - spaceId: null
          id: null
          title: title
          childPosition: 0
          status: null
      properties:
        results:
          items:
            $ref: '#/components/schemas/ChildPage'
          type: array
        _links:
          $ref: '#/components/schemas/MultiEntityResult_Label___links'
      title: MultiEntityResult<ChildPage>
      type: object
    MultiEntityResult_ChildCustomContent_:
      example:
        _links:
          next: next
        results:
        - spaceId: null
          id: null
          title: title
          type: type
          status: null
        - spaceId: null
          id: null
          title: title
          type: type
          status: null
      properties:
        results:
          items:
            $ref: '#/components/schemas/ChildCustomContent'
          type: array
        _links:
          $ref: '#/components/schemas/MultiEntityResult_Label___links'
      title: MultiEntityResult<ChildCustomContent>
      type: object
    checkAccessByEmail_request:
      properties:
        emails:
          description: List of emails to check access to site.
          items:
            type: string
          maxItems: 100
          minItems: 1
          nullable: false
          type: array
      required:
      - emails
      type: object
    checkAccessByEmail_200_response:
      example:
        invalidEmails:
        - invalidEmails
        - invalidEmails
        emailsWithoutAccess:
        - emailsWithoutAccess
        - emailsWithoutAccess
      properties:
        emailsWithoutAccess:
          description: List of emails that do not have access to site.
          items:
            type: string
          type: array
        invalidEmails:
          description: List of invalid emails provided in the request.
          items:
            type: string
          type: array
      type: object
    inviteByEmail_200_response_emailsNotInvited:
      description: List of invalid emails provided in the request.
      example:
        value: value
        key: key
      properties:
        key:
          description: Email that was not invited.
          type: string
        value:
          description: Reason why the email was not invited.
          type: string
    inviteByEmail_200_response:
      example:
        emailsNotInvited:
          value: value
          key: key
        emailsInvited:
        - emailsInvited
        - emailsInvited
      properties:
        emailsInvited:
          description: List of emails invited to site.
          items:
            type: string
          type: array
        emailsNotInvited:
          $ref: '#/components/schemas/inviteByEmail_200_response_emailsNotInvited'
      type: object
    Attachment_pageId:
      description: |-
        ID of the containing page.

        Note: This is only returned if the attachment has a container that is a page.

        Due to JavaScript's max integer representation of 2^53-1, the type of this field will be changed from a numeric type to a string type at the end of the deprecation period. In the meantime, `serialize-ids-as-strings=true` can be passed as a query param to any v2 endpoint to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905) for more detail.
      oneOf:
      - type: string
      - format: int64
        type: integer
    Attachment_blogPostId:
      description: |-
        ID of the containing blog post.

        Note: This is only returned if the attachment has a container that is a blog post.

        Due to JavaScript's max integer representation of 2^53-1, the type of this field will be changed from a numeric type to a string type at the end of the deprecation period. In the meantime, `serialize-ids-as-strings=true` can be passed as a query param to any v2 endpoint to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905) for more detail.
      oneOf:
      - type: string
      - format: int64
        type: integer
    Attachment_customContentId:
      description: |-
        ID of the containing custom content.

        Note: This is only returned if the attachment has a container that is custom content.

        Due to JavaScript's max integer representation of 2^53-1, the type of this field will be changed from a numeric type to a string type at the end of the deprecation period. In the meantime, `serialize-ids-as-strings=true` can be passed as a query param to any v2 endpoint to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905) for more detail.
      oneOf:
      - type: string
      - format: int64
        type: integer
    BlogPost_id:
      description: |-
        ID of the blog post.

        Due to JavaScript's max integer representation of 2^53-1, the type of this field will be changed from a numeric type to a string type at the end of the deprecation period. In the meantime, `serialize-ids-as-strings=true` can be passed as a query param to any v2 endpoint to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905) for more detail.
      oneOf:
      - type: string
      - format: int64
        type: integer
    BlogPost_spaceId:
      description: |-
        ID of the space the blog post is in.

        Due to JavaScript's max integer representation of 2^53-1, the type of this field will be changed from a numeric type to a string type at the end of the deprecation period. In the meantime, `serialize-ids-as-strings=true` can be passed as a query param to any v2 endpoint to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905) for more detail.
      oneOf:
      - type: string
      - format: int64
        type: integer
    ContentIdToContentTypeResponse_results_value:
      anyOf:
      - description: Built in content types
        enum:
        - page
        - blogpost
        - attachment
        - footer-comment
        - inline-comment
        type: string
      - description: Custom content types
        type: string
    ContentProperty_id:
      description: |-
        ID of the property

        Due to JavaScript's max integer representation of 2^53-1, the type of this field will be changed from a numeric type to a string type at the end of the deprecation period. In the meantime, `serialize-ids-as-strings=true` can be passed as a query param to any v2 endpoint to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905) for more detail.
      oneOf:
      - type: string
      - format: int64
        type: integer
    ContentPropertyUpdateRequest_version:
      description: New version number and associated message
      example:
        number: 0
        message: message
      properties:
        number:
          description: Version number of the new version. Should be 1 more than the
            current version number.
          format: int32
          type: integer
        message:
          description: Message to be associated with the new version.
          type: string
      type: object
    CustomContent_id:
      description: |-
        ID of the custom content.

        Due to JavaScript's max integer representation of 2^53-1, the type of this field will be changed from a numeric type to a string type at the end of the deprecation period. In the meantime, `serialize-ids-as-strings=true` can be passed as a query param to any v2 endpoint to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905) for more detail.
      oneOf:
      - type: string
      - format: int64
        type: integer
    CustomContent_spaceId:
      description: |-
        ID of the space the custom content is in.

        Note: This is always returned, regardless of if the custom content has a container that is a space.

        Due to JavaScript's max integer representation of 2^53-1, the type of this field will be changed from a numeric type to a string type at the end of the deprecation period. In the meantime, `serialize-ids-as-strings=true` can be passed as a query param to any v2 endpoint to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905) for more detail.
      oneOf:
      - type: string
      - format: int64
        type: integer
    CustomContent_pageId:
      description: |-
        ID of the containing page.

        Note: This is only returned if the custom content has a container that is a page.

        Due to JavaScript's max integer representation of 2^53-1, the type of this field will be changed from a numeric type to a string type at the end of the deprecation period. In the meantime, `serialize-ids-as-strings=true` can be passed as a query param to any v2 endpoint to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905) for more detail.
      oneOf:
      - type: string
      - format: int64
        type: integer
    CustomContent_blogPostId:
      description: |-
        ID of the containing blog post.

        Note: This is only returned if the custom content has a container that is a blog post.

        Due to JavaScript's max integer representation of 2^53-1, the type of this field will be changed from a numeric type to a string type at the end of the deprecation period. In the meantime, `serialize-ids-as-strings=true` can be passed as a query param to any v2 endpoint to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905) for more detail.
      oneOf:
      - type: string
      - format: int64
        type: integer
    CustomContent_customContentId:
      description: |-
        ID of the containing custom content.

        Note: This is only returned if the custom content has a container that is custom content.

        Due to JavaScript's max integer representation of 2^53-1, the type of this field will be changed from a numeric type to a string type at the end of the deprecation period. In the meantime, `serialize-ids-as-strings=true` can be passed as a query param to any v2 endpoint to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905) for more detail.
      oneOf:
      - type: string
      - format: int64
        type: integer
    Label_id:
      description: |-
        ID of the label.

        Due to JavaScript's max integer representation of 2^53-1, the type of this field will be changed from a numeric type to a string type at the end of the deprecation period. In the meantime, `serialize-ids-as-strings=true` can be passed as a query param to any v2 endpoint to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905) for more detail.
      oneOf:
      - type: string
      - format: int64
        type: integer
    Page_id:
      description: |-
        ID of the page.

        Due to JavaScript's max integer representation of 2^53-1, the type of this field will be changed from a numeric type to a string type at the end of the deprecation period. In the meantime, `serialize-ids-as-strings=true` can be passed as a query param to any v2 endpoint to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905) for more detail.
      oneOf:
      - type: string
      - format: int64
        type: integer
    Page_spaceId:
      description: |-
        ID of the space the page is in.

        Due to JavaScript's max integer representation of 2^53-1, the type of this field will be changed from a numeric type to a string type at the end of the deprecation period. In the meantime, `serialize-ids-as-strings=true` can be passed as a query param to any v2 endpoint to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905) for more detail.
      oneOf:
      - type: string
      - format: int64
        type: integer
    Page_parentId:
      description: |-
        ID of the parent page, or null if there is no parent page.

        Due to JavaScript's max integer representation of 2^53-1, the type of this field will be changed from a numeric type to a string type at the end of the deprecation period. In the meantime, `serialize-ids-as-strings=true` can be passed as a query param to any v2 endpoint to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905) for more detail.
      oneOf:
      - type: string
      - format: int64
        type: integer
    ChildCustomContent_id:
      description: |-
        ID of the child custom content.

        Due to JavaScript's max integer representation of 2^53-1, the type of this field will be changed from a numeric type to a string type at the end of the deprecation period. In the meantime, `serialize-ids-as-strings=true` can be passed as a query param to any v2 endpoint to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905) for more detail.
      oneOf:
      - type: string
      - format: int64
        type: integer
    ChildCustomContent_spaceId:
      description: |-
        ID of the space the custom content is in.

        Due to JavaScript's max integer representation of 2^53-1, the type of this field will be changed from a numeric type to a string type at the end of the deprecation period. In the meantime, `serialize-ids-as-strings=true` can be passed as a query param to any v2 endpoint to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905) for more detail.
      oneOf:
      - type: string
      - format: int64
        type: integer
    Space_id:
      description: |-
        ID of the space.

        Due to JavaScript's max integer representation of 2^53-1, the type of this field will be changed from a numeric type to a string type at the end of the deprecation period. In the meantime, `serialize-ids-as-strings=true` can be passed as a query param to any v2 endpoint to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905) for more detail.
      oneOf:
      - type: string
      - format: int64
        type: integer
    Space_homepageId:
      description: |-
        ID of the space's homepage.

        Due to JavaScript's max integer representation of 2^53-1, the type of this field will be changed from a numeric type to a string type at the end of the deprecation period. In the meantime, `serialize-ids-as-strings=true` can be passed as a query param to any v2 endpoint to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905) for more detail.
      oneOf:
      - type: string
      - format: int64
        type: integer
    SpaceProperty_id:
      description: |-
        ID of the space property.

        Due to JavaScript's max integer representation of 2^53-1, the type of this field will be changed from a numeric type to a string type at the end of the deprecation period. In the meantime, `serialize-ids-as-strings=true` can be passed as a query param to any v2 endpoint to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905) for more detail.
      oneOf:
      - type: string
      - format: int64
        type: integer
    SpaceProperty_version:
      example:
        createdAt: 2000-01-23T04:56:07.000+00:00
        number: 0
        createdBy: createdBy
        message: message
      properties:
        createdAt:
          description: RFC3339 compliant date time at which the property's current
            version was created.
          format: date-time
          type: string
        createdBy:
          description: Atlassian account ID of the user that created the space property's
            current version.
          type: string
        message:
          description: Message associated with the current version.
          type: string
        number:
          description: The space property's current version number.
          format: int32
          type: integer
      type: object
    Task_id:
      description: |-
        ID of the task.

        Due to JavaScript's max integer representation of 2^53-1, the type of this field will be changed from a numeric type to a string type at the end of the deprecation period. In the meantime, `serialize-ids-as-strings=true` can be passed as a query param to any v2 endpoint to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905) for more detail.
      oneOf:
      - type: string
      - format: int64
        type: integer
    Task_localId:
      description: |-
        Local ID of the task. This ID is local to the corresponding page or blog post.

        Due to JavaScript's max integer representation of 2^53-1, the type of this field will be changed from a numeric type to a string type at the end of the deprecation period. In the meantime, `serialize-ids-as-strings=true` can be passed as a query param to any v2 endpoint to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905) for more detail.
      oneOf:
      - type: string
      - format: int64
        type: integer
    Task_spaceId:
      description: |-
        ID of the space the task is in.

        Due to JavaScript's max integer representation of 2^53-1, the type of this field will be changed from a numeric type to a string type at the end of the deprecation period. In the meantime, `serialize-ids-as-strings=true` can be passed as a query param to any v2 endpoint to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905) for more detail.
      oneOf:
      - type: string
      - format: int64
        type: integer
    Task_pageId:
      description: |-
        ID of the page the task is in.

        Due to JavaScript's max integer representation of 2^53-1, the type of this field will be changed from a numeric type to a string type at the end of the deprecation period. In the meantime, `serialize-ids-as-strings=true` can be passed as a query param to any v2 endpoint to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905) for more detail.
      oneOf:
      - type: string
      - format: int64
        type: integer
    Task_blogPostId:
      description: |-
        ID of the blog post the task is in.

        Due to JavaScript's max integer representation of 2^53-1, the type of this field will be changed from a numeric type to a string type at the end of the deprecation period. In the meantime, `serialize-ids-as-strings=true` can be passed as a query param to any v2 endpoint to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905) for more detail.
      oneOf:
      - type: string
      - format: int64
        type: integer
    PageCommentModel_id:
      description: |-
        ID of the comment.

        Due to JavaScript's max integer representation of 2^53-1, the type of this field will be changed from a numeric type to a string type at the end of the deprecation period. In the meantime, `serialize-ids-as-strings=true` can be passed as a query param to any v2 endpoint to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905) for more detail.
      oneOf:
      - type: string
      - format: int64
        type: integer
    PageCommentModel_pageId:
      description: |-
        ID of the page the comment is in.

        Due to JavaScript's max integer representation of 2^53-1, the type of this field will be changed from a numeric type to a string type at the end of the deprecation period. In the meantime, `serialize-ids-as-strings=true` can be passed as a query param to any v2 endpoint to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905) for more detail.
      oneOf:
      - type: string
      - format: int64
        type: integer
    BlogPostCommentModel_blogPostId:
      description: |-
        ID of the blog post the comment is in.

        Due to JavaScript's max integer representation of 2^53-1, the type of this field will be changed from a numeric type to a string type at the end of the deprecation period. In the meantime, `serialize-ids-as-strings=true` can be passed as a query param to any v2 endpoint to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905) for more detail.
      oneOf:
      - type: string
      - format: int64
        type: integer
    ChildrenCommentModel_parentCommentId:
      description: |-
        ID of the parent comment the child comment is in.

        Due to JavaScript's max integer representation of 2^53-1, the type of this field will be changed from a numeric type to a string type at the end of the deprecation period. In the meantime, `serialize-ids-as-strings=true` can be passed as a query param to any v2 endpoint to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905) for more detail.
      oneOf:
      - type: string
      - format: int64
        type: integer
    FooterCommentModel_blogPostId:
      description: |-
        ID of the blog post containing the comment if the comment is on a blog post.

        Due to JavaScript's max integer representation of 2^53-1, the type of this field will be changed from a numeric type to a string type at the end of the deprecation period. In the meantime, `serialize-ids-as-strings=true` can be passed as a query param to any v2 endpoint to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905) for more detail.
      oneOf:
      - type: string
      - format: int64
        type: integer
    FooterCommentModel_pageId:
      description: |-
        ID of the page containing the comment if the comment is on a page.

        Due to JavaScript's max integer representation of 2^53-1, the type of this field will be changed from a numeric type to a string type at the end of the deprecation period. In the meantime, `serialize-ids-as-strings=true` can be passed as a query param to any v2 endpoint to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905) for more detail.
      oneOf:
      - type: string
      - format: int64
        type: integer
    FooterCommentModel_parentCommentId:
      description: |-
        ID of the parent comment if the comment is a reply.

        Due to JavaScript's max integer representation of 2^53-1, the type of this field will be changed from a numeric type to a string type at the end of the deprecation period. In the meantime, `serialize-ids-as-strings=true` can be passed as a query param to any v2 endpoint to opt-in to this change now. See this [changelog](https://developer.atlassian.com/cloud/confluence/changelog/#CHANGE-905) for more detail.
      oneOf:
      - type: string
      - format: int64
        type: integer
    CreateFooterCommentModel_body:
      oneOf:
      - $ref: '#/components/schemas/CommentBodyWrite'
      - $ref: '#/components/schemas/CommentNestedBodyWrite'
    CreateInlineCommentModel_inlineCommentProperties:
      description: Object describing the text to highlight on the page/blog post.
        Only applicable for top level inline comments (not replies) and required in
        that case.
      example:
        textSelectionMatchCount: 0
        textSelectionMatchIndex: 6
        textSelection: textSelection
      properties:
        textSelection:
          description: The text to highlight
          type: string
        textSelectionMatchCount:
          description: The number of matches for the selected text on the page (should
            be strictly greater than textSelectionMatchIndex)
          type: integer
        textSelectionMatchIndex:
          description: "The match index to highlight. This is zero-based. E.g. if\
            \ you have 3 occurrences of \"hello world\" on a page \nand you want to\
            \ highlight the second occurrence, you should pass 1 for textSelectionMatchIndex\
            \ and 3 for textSelectionMatchCount."
          type: integer
      type: object
    UpdateFooterCommentModel_version:
      example:
        number: 0
        message: message
      properties:
        number:
          description: Number of new version. Should be 1 higher than current version
            of the comment.
          type: integer
        message:
          description: Optional message store for the new version.
          type: string
      type: object
  securitySchemes:
    basicAuth:
      description: You can access this resource via basic auth.
      scheme: basic
      type: http
    oAuthDefinitions:
      description: This API uses OAuth 2 with the authorizationCode grant flow.
      flows:
        authorizationCode:
          authorizationUrl: https://auth.atlassian.com/authorize
          scopes:
            read:page:confluence: View pages and blogposts and their properties.
            read:space:confluence: View spaces and their properties.
            read:attachment:confluence: View attachments and their properties.
            read:comment:confluence: View comments and their properties.
            read:custom-content:confluence: View custom content and their properties.
            read:task:confluence: View tasks.
            write:space:confluence: Create and update spaces and their properties.
            write:page:confluence: Create and update pages and blog posts and their
              properties.
            write:comment:confluence: Create and update comments and their properties.
            write:custom-content:confluence: Create and update custom content and
              their properties.
            delete:custom-content:confluence: Delete custom content.
            delete:page:confluence: Delete pages and blog posts.
            delete:comment:confluence: Delete comments.
          tokenUrl: https://auth.atlassian.com/oauth/token
      type: oauth2
x-atlassian-narrative:
  documents:
  - title: About
    anchor: about
    body: "This is the reference for the Confluence Cloud REST API v2, with definitions\
      \ and performance intended to be an improvement over v1. You can click on the\
      \ meatball menu in the upper right to download the spec or Postman collection."
  - title: Authentication and authorization
    anchor: auth
    body: |-
      **Authentication:** If you are building a Cloud app, authentication is implemented via JWT or Oauth 2.0, depending on what you're building (see [Authentication for apps](https://developer.atlassian.com/cloud/confluence/authentication-for-apps/)). Otherwise, if you are authenticating directly against the REST API, the REST API supports basic auth (see [Basic auth for REST APIs](https://developer.atlassian.com/cloud/confluence/basic-auth-for-rest-apis/)).

      **Authorization:** If you are building a Cloud app, authorization can be implemented by [scopes](https://developer.atlassian.com/cloud/confluence/scopes/) or by [OAuth 2.0 user impersonation](https://developer.atlassian.com/cloud/confluence/oauth-2-jwt-bearer-tokens-for-apps). Otherwise, if you are making calls directly against the REST API, authorization is based on the user used in the authentication process.

      See [Security overview](https://developer.atlassian.com/cloud/confluence/security-overview/) for more details on authentication and authorization.
  - title: Using the REST API
    anchor: using
    body: "**Pagination:** The Confluence REST API v2 uses cursor-based pagination:\
      \ a method that returns a response with multiple objects can only return a limited\
      \ number at one time. This limits the size of responses and conserves server\
      \ resources.\n\nUse the 'limit' and 'cursor' parameters on endpoints that return\
      \ multiple objects to work with pagination. First, make a request with your\
      \ desired limit in the 'limit' parameter, then observe the `Link` header in\
      \ the response. If there are additional entities to be retrieved, the `next`\
      \ URL in the `Link` header will allow you to retrieve the next set of results.\
      \ This relative URL will also be available under the `_links.next` property\
      \ of paginated responses. \n\nFor example, the following request will return\
      \ 5 page objects (if there are 5 present in the target site).\n```\nGET /wiki/api/v2/pages?limit=5\n\
      ```\n\nIf there are additional pages available, the `Link` header will look\
      \ like:\n```\n</wiki/api/v2/pages?limit=5&cursor=<cursor token>>; rel=\"next\"\
      \n```\nThe URL within the `Link` header will allow you to access the next 5\
      \ pages, while the `rel=\"next\"` denotes that the URL refers to the \"next\"\
      \ set of pages. Relations for a single URL are separated by semicolons (;) and\
      \ URLs are separated by commas (,)\nIf there are no related URLs, the `Link`\
      \ header will not be present in the response and neither will the `next` property\
      \ for `_links` in the response body."
