/*
The Confluence Cloud REST API v2

This document describes Confluence's v2 APIs. This is intended to be an iteration on the existing Confluence Cloud REST API with improvements in both endpoint definitions and performance.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package confluence

import (
	"encoding/json"
	"time"
)

// checks if the SpacePropertyVersion type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SpacePropertyVersion{}

// SpacePropertyVersion struct for SpacePropertyVersion
type SpacePropertyVersion struct {
	// RFC3339 compliant date time at which the property's current version was created.
	CreatedAt *time.Time `json:"createdAt,omitempty"`
	// Atlassian account ID of the user that created the space property's current version.
	CreatedBy *string `json:"createdBy,omitempty"`
	// Message associated with the current version.
	Message *string `json:"message,omitempty"`
	// The space property's current version number.
	Number *int32 `json:"number,omitempty"`
}

// NewSpacePropertyVersion instantiates a new SpacePropertyVersion object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSpacePropertyVersion() *SpacePropertyVersion {
	this := SpacePropertyVersion{}
	return &this
}

// NewSpacePropertyVersionWithDefaults instantiates a new SpacePropertyVersion object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSpacePropertyVersionWithDefaults() *SpacePropertyVersion {
	this := SpacePropertyVersion{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *SpacePropertyVersion) GetCreatedAt() time.Time {
	if o == nil || IsNil(o.CreatedAt) {
		var ret time.Time
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpacePropertyVersion) GetCreatedAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *SpacePropertyVersion) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given time.Time and assigns it to the CreatedAt field.
func (o *SpacePropertyVersion) SetCreatedAt(v time.Time) {
	o.CreatedAt = &v
}

// GetCreatedBy returns the CreatedBy field value if set, zero value otherwise.
func (o *SpacePropertyVersion) GetCreatedBy() string {
	if o == nil || IsNil(o.CreatedBy) {
		var ret string
		return ret
	}
	return *o.CreatedBy
}

// GetCreatedByOk returns a tuple with the CreatedBy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpacePropertyVersion) GetCreatedByOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedBy) {
		return nil, false
	}
	return o.CreatedBy, true
}

// HasCreatedBy returns a boolean if a field has been set.
func (o *SpacePropertyVersion) HasCreatedBy() bool {
	if o != nil && !IsNil(o.CreatedBy) {
		return true
	}

	return false
}

// SetCreatedBy gets a reference to the given string and assigns it to the CreatedBy field.
func (o *SpacePropertyVersion) SetCreatedBy(v string) {
	o.CreatedBy = &v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *SpacePropertyVersion) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpacePropertyVersion) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *SpacePropertyVersion) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *SpacePropertyVersion) SetMessage(v string) {
	o.Message = &v
}

// GetNumber returns the Number field value if set, zero value otherwise.
func (o *SpacePropertyVersion) GetNumber() int32 {
	if o == nil || IsNil(o.Number) {
		var ret int32
		return ret
	}
	return *o.Number
}

// GetNumberOk returns a tuple with the Number field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SpacePropertyVersion) GetNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.Number) {
		return nil, false
	}
	return o.Number, true
}

// HasNumber returns a boolean if a field has been set.
func (o *SpacePropertyVersion) HasNumber() bool {
	if o != nil && !IsNil(o.Number) {
		return true
	}

	return false
}

// SetNumber gets a reference to the given int32 and assigns it to the Number field.
func (o *SpacePropertyVersion) SetNumber(v int32) {
	o.Number = &v
}

func (o SpacePropertyVersion) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SpacePropertyVersion) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedAt) {
		toSerialize["createdAt"] = o.CreatedAt
	}
	if !IsNil(o.CreatedBy) {
		toSerialize["createdBy"] = o.CreatedBy
	}
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	if !IsNil(o.Number) {
		toSerialize["number"] = o.Number
	}
	return toSerialize, nil
}

type NullableSpacePropertyVersion struct {
	value *SpacePropertyVersion
	isSet bool
}

func (v NullableSpacePropertyVersion) Get() *SpacePropertyVersion {
	return v.value
}

func (v *NullableSpacePropertyVersion) Set(val *SpacePropertyVersion) {
	v.value = val
	v.isSet = true
}

func (v NullableSpacePropertyVersion) IsSet() bool {
	return v.isSet
}

func (v *NullableSpacePropertyVersion) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSpacePropertyVersion(val *SpacePropertyVersion) *NullableSpacePropertyVersion {
	return &NullableSpacePropertyVersion{value: val, isSet: true}
}

func (v NullableSpacePropertyVersion) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSpacePropertyVersion) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
