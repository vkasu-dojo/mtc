/*
The Confluence Cloud REST API v2

This document describes Confluence's v2 APIs. This is intended to be an iteration on the existing Confluence Cloud REST API with improvements in both endpoint definitions and performance.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package confluence

import (
	"encoding/json"
)

// checks if the ChildCustomContent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChildCustomContent{}

// ChildCustomContent struct for ChildCustomContent
type ChildCustomContent struct {
	Id     *ChildCustomContentId                `json:"id,omitempty"`
	Status *OnlyArchivedAndCurrentContentStatus `json:"status,omitempty"`
	// Title of the custom content.
	Title *string `json:"title,omitempty"`
	// Custom content type.
	Type    *string                    `json:"type,omitempty"`
	SpaceId *ChildCustomContentSpaceId `json:"spaceId,omitempty"`
}

// NewChildCustomContent instantiates a new ChildCustomContent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChildCustomContent() *ChildCustomContent {
	this := ChildCustomContent{}
	return &this
}

// NewChildCustomContentWithDefaults instantiates a new ChildCustomContent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChildCustomContentWithDefaults() *ChildCustomContent {
	this := ChildCustomContent{}
	return &this
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ChildCustomContent) GetId() ChildCustomContentId {
	if o == nil || IsNil(o.Id) {
		var ret ChildCustomContentId
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChildCustomContent) GetIdOk() (*ChildCustomContentId, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ChildCustomContent) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given ChildCustomContentId and assigns it to the Id field.
func (o *ChildCustomContent) SetId(v ChildCustomContentId) {
	o.Id = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ChildCustomContent) GetStatus() OnlyArchivedAndCurrentContentStatus {
	if o == nil || IsNil(o.Status) {
		var ret OnlyArchivedAndCurrentContentStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChildCustomContent) GetStatusOk() (*OnlyArchivedAndCurrentContentStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ChildCustomContent) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given OnlyArchivedAndCurrentContentStatus and assigns it to the Status field.
func (o *ChildCustomContent) SetStatus(v OnlyArchivedAndCurrentContentStatus) {
	o.Status = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *ChildCustomContent) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChildCustomContent) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *ChildCustomContent) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *ChildCustomContent) SetTitle(v string) {
	o.Title = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *ChildCustomContent) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChildCustomContent) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *ChildCustomContent) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *ChildCustomContent) SetType(v string) {
	o.Type = &v
}

// GetSpaceId returns the SpaceId field value if set, zero value otherwise.
func (o *ChildCustomContent) GetSpaceId() ChildCustomContentSpaceId {
	if o == nil || IsNil(o.SpaceId) {
		var ret ChildCustomContentSpaceId
		return ret
	}
	return *o.SpaceId
}

// GetSpaceIdOk returns a tuple with the SpaceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChildCustomContent) GetSpaceIdOk() (*ChildCustomContentSpaceId, bool) {
	if o == nil || IsNil(o.SpaceId) {
		return nil, false
	}
	return o.SpaceId, true
}

// HasSpaceId returns a boolean if a field has been set.
func (o *ChildCustomContent) HasSpaceId() bool {
	if o != nil && !IsNil(o.SpaceId) {
		return true
	}

	return false
}

// SetSpaceId gets a reference to the given ChildCustomContentSpaceId and assigns it to the SpaceId field.
func (o *ChildCustomContent) SetSpaceId(v ChildCustomContentSpaceId) {
	o.SpaceId = &v
}

func (o ChildCustomContent) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChildCustomContent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.SpaceId) {
		toSerialize["spaceId"] = o.SpaceId
	}
	return toSerialize, nil
}

type NullableChildCustomContent struct {
	value *ChildCustomContent
	isSet bool
}

func (v NullableChildCustomContent) Get() *ChildCustomContent {
	return v.value
}

func (v *NullableChildCustomContent) Set(val *ChildCustomContent) {
	v.value = val
	v.isSet = true
}

func (v NullableChildCustomContent) IsSet() bool {
	return v.isSet
}

func (v *NullableChildCustomContent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChildCustomContent(val *ChildCustomContent) *NullableChildCustomContent {
	return &NullableChildCustomContent{value: val, isSet: true}
}

func (v NullableChildCustomContent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChildCustomContent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
