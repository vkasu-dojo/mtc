/*
The Confluence Cloud REST API v2

This document describes Confluence's v2 APIs. This is intended to be an iteration on the existing Confluence Cloud REST API with improvements in both endpoint definitions and performance.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package confluence

import (
	"encoding/json"
)

// checks if the CreateFooterCommentModel type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateFooterCommentModel{}

// CreateFooterCommentModel struct for CreateFooterCommentModel
type CreateFooterCommentModel struct {
	// ID of the containing blog post, if intending to create a top level footer comment. Do not provide if creating a reply.
	BlogPostId *string `json:"blogPostId,omitempty"`
	// ID of the containing page, if intending to create a top level footer comment. Do not provide if creating a reply.
	PageId *string `json:"pageId,omitempty"`
	// ID of the parent comment, if intending to create a reply. Do not provide if creating a top level comment.
	ParentCommentId *string                       `json:"parentCommentId,omitempty"`
	Body            *CreateFooterCommentModelBody `json:"body,omitempty"`
}

// NewCreateFooterCommentModel instantiates a new CreateFooterCommentModel object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateFooterCommentModel() *CreateFooterCommentModel {
	this := CreateFooterCommentModel{}
	return &this
}

// NewCreateFooterCommentModelWithDefaults instantiates a new CreateFooterCommentModel object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateFooterCommentModelWithDefaults() *CreateFooterCommentModel {
	this := CreateFooterCommentModel{}
	return &this
}

// GetBlogPostId returns the BlogPostId field value if set, zero value otherwise.
func (o *CreateFooterCommentModel) GetBlogPostId() string {
	if o == nil || IsNil(o.BlogPostId) {
		var ret string
		return ret
	}
	return *o.BlogPostId
}

// GetBlogPostIdOk returns a tuple with the BlogPostId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFooterCommentModel) GetBlogPostIdOk() (*string, bool) {
	if o == nil || IsNil(o.BlogPostId) {
		return nil, false
	}
	return o.BlogPostId, true
}

// HasBlogPostId returns a boolean if a field has been set.
func (o *CreateFooterCommentModel) HasBlogPostId() bool {
	if o != nil && !IsNil(o.BlogPostId) {
		return true
	}

	return false
}

// SetBlogPostId gets a reference to the given string and assigns it to the BlogPostId field.
func (o *CreateFooterCommentModel) SetBlogPostId(v string) {
	o.BlogPostId = &v
}

// GetPageId returns the PageId field value if set, zero value otherwise.
func (o *CreateFooterCommentModel) GetPageId() string {
	if o == nil || IsNil(o.PageId) {
		var ret string
		return ret
	}
	return *o.PageId
}

// GetPageIdOk returns a tuple with the PageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFooterCommentModel) GetPageIdOk() (*string, bool) {
	if o == nil || IsNil(o.PageId) {
		return nil, false
	}
	return o.PageId, true
}

// HasPageId returns a boolean if a field has been set.
func (o *CreateFooterCommentModel) HasPageId() bool {
	if o != nil && !IsNil(o.PageId) {
		return true
	}

	return false
}

// SetPageId gets a reference to the given string and assigns it to the PageId field.
func (o *CreateFooterCommentModel) SetPageId(v string) {
	o.PageId = &v
}

// GetParentCommentId returns the ParentCommentId field value if set, zero value otherwise.
func (o *CreateFooterCommentModel) GetParentCommentId() string {
	if o == nil || IsNil(o.ParentCommentId) {
		var ret string
		return ret
	}
	return *o.ParentCommentId
}

// GetParentCommentIdOk returns a tuple with the ParentCommentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFooterCommentModel) GetParentCommentIdOk() (*string, bool) {
	if o == nil || IsNil(o.ParentCommentId) {
		return nil, false
	}
	return o.ParentCommentId, true
}

// HasParentCommentId returns a boolean if a field has been set.
func (o *CreateFooterCommentModel) HasParentCommentId() bool {
	if o != nil && !IsNil(o.ParentCommentId) {
		return true
	}

	return false
}

// SetParentCommentId gets a reference to the given string and assigns it to the ParentCommentId field.
func (o *CreateFooterCommentModel) SetParentCommentId(v string) {
	o.ParentCommentId = &v
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *CreateFooterCommentModel) GetBody() CreateFooterCommentModelBody {
	if o == nil || IsNil(o.Body) {
		var ret CreateFooterCommentModelBody
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateFooterCommentModel) GetBodyOk() (*CreateFooterCommentModelBody, bool) {
	if o == nil || IsNil(o.Body) {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *CreateFooterCommentModel) HasBody() bool {
	if o != nil && !IsNil(o.Body) {
		return true
	}

	return false
}

// SetBody gets a reference to the given CreateFooterCommentModelBody and assigns it to the Body field.
func (o *CreateFooterCommentModel) SetBody(v CreateFooterCommentModelBody) {
	o.Body = &v
}

func (o CreateFooterCommentModel) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateFooterCommentModel) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BlogPostId) {
		toSerialize["blogPostId"] = o.BlogPostId
	}
	if !IsNil(o.PageId) {
		toSerialize["pageId"] = o.PageId
	}
	if !IsNil(o.ParentCommentId) {
		toSerialize["parentCommentId"] = o.ParentCommentId
	}
	if !IsNil(o.Body) {
		toSerialize["body"] = o.Body
	}
	return toSerialize, nil
}

type NullableCreateFooterCommentModel struct {
	value *CreateFooterCommentModel
	isSet bool
}

func (v NullableCreateFooterCommentModel) Get() *CreateFooterCommentModel {
	return v.value
}

func (v *NullableCreateFooterCommentModel) Set(val *CreateFooterCommentModel) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateFooterCommentModel) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateFooterCommentModel) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateFooterCommentModel(val *CreateFooterCommentModel) *NullableCreateFooterCommentModel {
	return &NullableCreateFooterCommentModel{value: val, isSet: true}
}

func (v NullableCreateFooterCommentModel) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateFooterCommentModel) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
