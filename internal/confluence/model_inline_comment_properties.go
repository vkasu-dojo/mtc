/*
The Confluence Cloud REST API v2

This document describes Confluence's v2 APIs. This is intended to be an iteration on the existing Confluence Cloud REST API with improvements in both endpoint definitions and performance.

API version: 2.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package confluence

import (
	"encoding/json"
)

// checks if the InlineCommentProperties type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InlineCommentProperties{}

// InlineCommentProperties struct for InlineCommentProperties
type InlineCommentProperties struct {
	// Property value used to reference the highlighted element in DOM.
	InlineMarkerRef *string `json:"inline-marker-ref,omitempty"`
	// Text that is highlighted
	InlineOriginalSelection *string `json:"inline-original-selection,omitempty"`
}

// NewInlineCommentProperties instantiates a new InlineCommentProperties object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInlineCommentProperties() *InlineCommentProperties {
	this := InlineCommentProperties{}
	return &this
}

// NewInlineCommentPropertiesWithDefaults instantiates a new InlineCommentProperties object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInlineCommentPropertiesWithDefaults() *InlineCommentProperties {
	this := InlineCommentProperties{}
	return &this
}

// GetInlineMarkerRef returns the InlineMarkerRef field value if set, zero value otherwise.
func (o *InlineCommentProperties) GetInlineMarkerRef() string {
	if o == nil || IsNil(o.InlineMarkerRef) {
		var ret string
		return ret
	}
	return *o.InlineMarkerRef
}

// GetInlineMarkerRefOk returns a tuple with the InlineMarkerRef field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineCommentProperties) GetInlineMarkerRefOk() (*string, bool) {
	if o == nil || IsNil(o.InlineMarkerRef) {
		return nil, false
	}
	return o.InlineMarkerRef, true
}

// HasInlineMarkerRef returns a boolean if a field has been set.
func (o *InlineCommentProperties) HasInlineMarkerRef() bool {
	if o != nil && !IsNil(o.InlineMarkerRef) {
		return true
	}

	return false
}

// SetInlineMarkerRef gets a reference to the given string and assigns it to the InlineMarkerRef field.
func (o *InlineCommentProperties) SetInlineMarkerRef(v string) {
	o.InlineMarkerRef = &v
}

// GetInlineOriginalSelection returns the InlineOriginalSelection field value if set, zero value otherwise.
func (o *InlineCommentProperties) GetInlineOriginalSelection() string {
	if o == nil || IsNil(o.InlineOriginalSelection) {
		var ret string
		return ret
	}
	return *o.InlineOriginalSelection
}

// GetInlineOriginalSelectionOk returns a tuple with the InlineOriginalSelection field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InlineCommentProperties) GetInlineOriginalSelectionOk() (*string, bool) {
	if o == nil || IsNil(o.InlineOriginalSelection) {
		return nil, false
	}
	return o.InlineOriginalSelection, true
}

// HasInlineOriginalSelection returns a boolean if a field has been set.
func (o *InlineCommentProperties) HasInlineOriginalSelection() bool {
	if o != nil && !IsNil(o.InlineOriginalSelection) {
		return true
	}

	return false
}

// SetInlineOriginalSelection gets a reference to the given string and assigns it to the InlineOriginalSelection field.
func (o *InlineCommentProperties) SetInlineOriginalSelection(v string) {
	o.InlineOriginalSelection = &v
}

func (o InlineCommentProperties) MarshalJSON() ([]byte, error) {
	toSerialize, err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InlineCommentProperties) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InlineMarkerRef) {
		toSerialize["inline-marker-ref"] = o.InlineMarkerRef
	}
	if !IsNil(o.InlineOriginalSelection) {
		toSerialize["inline-original-selection"] = o.InlineOriginalSelection
	}
	return toSerialize, nil
}

type NullableInlineCommentProperties struct {
	value *InlineCommentProperties
	isSet bool
}

func (v NullableInlineCommentProperties) Get() *InlineCommentProperties {
	return v.value
}

func (v *NullableInlineCommentProperties) Set(val *InlineCommentProperties) {
	v.value = val
	v.isSet = true
}

func (v NullableInlineCommentProperties) IsSet() bool {
	return v.isSet
}

func (v *NullableInlineCommentProperties) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInlineCommentProperties(val *InlineCommentProperties) *NullableInlineCommentProperties {
	return &NullableInlineCommentProperties{value: val, isSet: true}
}

func (v NullableInlineCommentProperties) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInlineCommentProperties) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}
